{"nodes": [{"id": "cd796ed3345030aa1bb332fe5c793b3dddaf56e7", "date": "2020-12-07 - LATEST", "metadata": "Message: Merge tag 'trace-v5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fix from Steven Rostedt:\n \"Fix userstacktrace option for instances\n\n  While writing an application that requires user stack trace option to\n  work in instances, I found that the instance option has a bug that\n  makes it a nop. The check for performing the user stack trace in an\n  instance, checks the top level options (not the instance options) to\n  determine if a user stack trace should be performed or not.\n\n  This is not only incorrect, but also confusing for users. It confused\n  me for a bit!\"\n\n* tag 'trace-v5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  tracing: Fix userstacktrace option for instances \nDate: 2020-12-07 - 19:20:26 \nAuthor: Linus Torvalds\nLATEST COMMIT"}, {"id": "0477e92881850d44910a7e94fc2c46f96faa131f", "date": "2020-12-06", "metadata": "Message: Linux 5.10-rc7 \nDate: 2020-12-06 - 22:25:12 \nAuthor: Linus Torvalds"}, {"id": "ab91292cb3e9f43d9c6839d7572d17b35bc21710", "date": "2020-12-06", "metadata": "Message: Merge tag 'char-misc-5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc\n\nPull char/misc driver fixes from Greg KH:\n \"Here are some small driver fixes, and one \"large\" revert, for\n  5.10-rc7.\n\n  They include:\n\n   - revert mei patch from 5.10-rc1 that was using a reserved userspace\n     value. It will be resubmitted once the proper id has been assigned\n     by the virtio people.\n\n   - habanalabs fixes found by the fall-through audit from Gustavo\n\n   - speakup driver fixes for reported issues\n\n   - fpga config build fix for reported issue.\n\n  All of these except the revert have been in linux-next with no\n  reported issues. The revert is \"clean\" and just removes a\n  previously-added driver, so no real issue there\"\n\n* tag 'char-misc-5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc:\n  Revert \"mei: virtio: virtualization frontend driver\"\n  fpga: Specify HAS_IOMEM dependency for FPGA_DFL\n  habanalabs: put devices before driver removal\n  habanalabs: free host huge va_range if not used\n  speakup: Reject setting the speakup line discipline outside of speakup \nDate: 2020-12-06 - 19:48:17 \nAuthor: Linus Torvalds"}, {"id": "d49248eb25a223b238cd7687ea92b080f595a323", "date": "2020-12-06", "metadata": "Message: Merge tag 'tty-5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty\n\nPull tty fixes from Greg KH:\n \"Here are two tty core fixes for 5.10-rc7.\n\n  They resolve some reported locking issues in the tty core. While they\n  have not been in a released linux-next yet, they have passed all of\n  the 0-day bot testing as well as the submitter's testing\"\n\n* tag 'tty-5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty:\n  tty: Fix ->session locking\n  tty: Fix ->pgrp locking in tiocspgrp() \nDate: 2020-12-06 - 19:43:50 \nAuthor: Linus Torvalds"}, {"id": "f5226f1d20c4113922dbe7742c416f06700c1ea9", "date": "2020-12-06", "metadata": "Message: Merge tag 'usb-5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb\n\nPull USB fixes from Greg KH:\n \"Here are some small USB fixes for 5.10-rc7 that resolve a number of\n  reported issues, and add some new device ids.\n\n  Nothing major here, but these solve some problems that people were\n  having with the 5.10-rc tree:\n\n   - reverts for USB storage dma settings that broke working devices\n\n   - thunderbolt use-after-free fix\n\n   - cdns3 driver fixes\n\n   - gadget driver userspace copy fix\n\n   - new device ids\n\n  All of these except for the reverts have been in linux-next with no\n  reported issues. The reverts are \"clean\" and were tested by Hans, as\n  well as passing the 0-day tests\"\n\n* tag 'usb-5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb:\n  usb: gadget: f_fs: Use local copy of descriptors for userspace copy\n  usb: ohci-omap: Fix descriptor conversion\n  Revert \"usb-storage: fix sdev->host->dma_dev\"\n  Revert \"uas: fix sdev->host->dma_dev\"\n  Revert \"uas: bump hw_max_sectors to 2048 blocks for SS or faster drives\"\n  USB: serial: kl5kusb105: fix memleak on open\n  USB: serial: ch341: sort device-id entries\n  USB: serial: ch341: add new Product ID for CH341A\n  USB: serial: option: fix Quectel BG96 matching\n  usb: cdns3: core: fix goto label for error path\n  usb: cdns3: gadget: clear trb->length as zero after preparing every trb\n  usb: cdns3: Fix hardware based role switch\n  USB: serial: option: add support for Thales Cinterion EXS82\n  USB: serial: option: add Fibocom NL668 variants\n  thunderbolt: Fix use-after-free in remove_unplugged_switch() \nDate: 2020-12-06 - 19:38:36 \nAuthor: Linus Torvalds"}, {"id": "8100a58044f8f502a53d90af96d6030767df0fbd", "date": "2020-12-06", "metadata": "Message: Merge tag 'x86-urgent-2020-12-06' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull x86 fixes from Thomas Gleixner:\n \"A set of fixes for x86:\n\n   - Make the AMD L3 QoS code and data priorization enable/disable\n     mechanism work correctly.\n\n     The control bit was only set/cleared on one of the CPUs in a L3\n     domain, but it has to be modified on all CPUs in the domain. The\n     initial documentation was not clear about this, but the updated one\n     from Oct 2020 spells it out.\n\n   - Fix an off by one in the UV platform detection code which causes\n     the UV hubs to be identified wrongly.\n\n     The chip revisions start at 1 not at 0.\n\n   - Fix a long standing bug in the evaluation of prefixes in the\n     uprobes code which fails to handle repeated prefixes properly.\n\n     The aggregate size of the prefixes can be larger than the bytes\n     array but the code blindly iterated over the aggregate size beyond\n     the array boundary. Add a macro to handle this case properly and\n     use it at the affected places\"\n\n* tag 'x86-urgent-2020-12-06' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  x86/sev-es: Use new for_each_insn_prefix() macro to loop over prefixes bytes\n  x86/insn-eval: Use new for_each_insn_prefix() macro to loop over prefixes bytes\n  x86/uprobes: Do not use prefixes.nbytes when looping over prefixes.bytes\n  x86/platform/uv: Fix UV4 hub revision adjustment\n  x86/resctrl: Fix AMD L3 QOS CDP enable/disable \nDate: 2020-12-06 - 19:22:39 \nAuthor: Linus Torvalds"}, {"id": "9f6b28d498ba084dff970ad95796642f804ffcd8", "date": "2020-12-06", "metadata": "Message: Merge tag 'perf-urgent-2020-12-06' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull perf fixes from Thomas Gleixner:\n \"Two fixes for performance monitoring on X86:\n\n   - Add recursion protection to another callchain invoked from\n     x86_pmu_stop() which can recurse back into x86_pmu_stop(). The\n     first attempt to fix this missed this extra code path.\n\n   - Use the already filtered status variable to check for PEBS counter\n     overflow bits and not the unfiltered full status read from\n     IA32_PERF_GLOBAL_STATUS which can have unrelated bits check which\n     would be evaluated incorrectly\"\n\n* tag 'perf-urgent-2020-12-06' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  perf/x86/intel: Check PEBS status correctly\n  perf/x86/intel: Fix a warning on x86_pmu_stop() with large PEBS \nDate: 2020-12-06 - 19:20:18 \nAuthor: Linus Torvalds"}, {"id": "592d9a0835c97f54744a7c3ce845c16735c0ab14", "date": "2020-12-06", "metadata": "Message: Merge tag 'irq-urgent-2020-12-06' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull irq fixes from Thomas Gleixner:\n \"A set of updates for the interrupt subsystem:\n\n   - Make multiqueue devices which use the managed interrupt affinity\n     infrastructure work on PowerPC/Pseries. PowerPC does not use the\n     generic infrastructure for setting up PCI/MSI interrupts and the\n     multiqueue changes failed to update the legacy PCI/MSI\n     infrastructure. Make this work by passing the affinity setup\n     information down to the mapping and allocation functions.\n\n   - Move Jason Cooper from MAINTAINERS to CREDITS as his mail is\n     bouncing and he's not reachable. We hope all is well with him and\n     say thanks for his work over the years\"\n\n* tag 'irq-urgent-2020-12-06' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  powerpc/pseries: Pass MSI affinity to irq_create_mapping()\n  genirq/irqdomain: Add an irq_create_mapping_affinity() function\n  MAINTAINERS: Move Jason Cooper to CREDITS \nDate: 2020-12-06 - 19:15:55 \nAuthor: Linus Torvalds"}, {"id": "ff615c98035729776a74f9c86c3b137ae35ac1d3", "date": "2020-12-06", "metadata": "Message: Merge tag 'locking-urgent-2020-12-06' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip\n\nPull intel_idle build fix from Thomas Gleixner:\n \"A tiny build fix for a recent change in the intel_idle driver which\n  missed a CONFIG dependency and broke the build for certain\n  configurations\"\n\n* tag 'locking-urgent-2020-12-06' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:\n  intel_idle: Build fix \nDate: 2020-12-06 - 19:11:32 \nAuthor: Linus Torvalds"}, {"id": "e6585a493921991653be1fd65c3aa3fb90b000ae", "date": "2020-12-06", "metadata": "Message: Merge tag 'kbuild-fixes-v5.10-2' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild\n\nPull Kbuild fixes from Masahiro Yamada:\n\n - Move -Wcast-align to W=3, which tends to be false-positive and there\n   is no tree-wide solution.\n\n - Pass -fmacro-prefix-map to KBUILD_CPPFLAGS because it is a\n   preprocessor option and makes sense for .S files as well.\n\n - Disable -gdwarf-2 for Clang's integrated assembler to avoid warnings.\n\n - Disable --orphan-handling=warn for LLD 10.0.1 to avoid warnings.\n\n - Fix undesirable line breaks in *.mod files.\n\n* tag 'kbuild-fixes-v5.10-2' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild:\n  kbuild: avoid split lines in .mod files\n  kbuild: Disable CONFIG_LD_ORPHAN_WARN for ld.lld 10.0.1\n  kbuild: Hoist '--orphan-handling' into Kconfig\n  Kbuild: do not emit debug info for assembly with LLVM_IAS=1\n  kbuild: use -fmacro-prefix-map for .S sources\n  Makefile.extrawarn: move -Wcast-align to W=3 \nDate: 2020-12-06 - 18:31:39 \nAuthor: Linus Torvalds"}, {"id": "12c0ab6658dea4709189c3730d2431c52808428e", "date": "2020-12-06", "metadata": "Message: Merge branch 'akpm' (patches from Andrew)\n\nMerge misc fixes from Andrew Morton:\n \"12 patches.\n\n  Subsystems affected by this patch series: mm (memcg, zsmalloc, swap,\n  mailmap, selftests, pagecache, hugetlb, pagemap), lib, and coredump\"\n\n* emailed patches from Andrew Morton <akpm@linux-foundation.org>:\n  mm/mmap.c: fix mmap return value when vma is merged after call_mmap()\n  hugetlb_cgroup: fix offline of hugetlb cgroup with reservations\n  mm/filemap: add static for function __add_to_page_cache_locked\n  userfaultfd: selftests: fix SIGSEGV if huge mmap fails\n  tools/testing/selftests/vm: fix build error\n  mailmap: add two more addresses of Uwe Kleine-K\u00f6nig\n  mm/swapfile: do not sleep with a spin lock held\n  mm/zsmalloc.c: drop ZSMALLOC_PGTABLE_MAPPING\n  mm: list_lru: set shrinker map bit when child nr_items is not zero\n  mm: memcg/slab: fix obj_cgroup_charge() return value handling\n  coredump: fix core_pattern parse error\n  zlib: export S390 symbols for zlib modules \nDate: 2020-12-06 - 18:20:59 \nAuthor: Linus Torvalds"}, {"id": "309d08d9b3a3659ab3f239d27d4e38b670b08fc9", "date": "2020-12-06", "metadata": "Message: mm/mmap.c: fix mmap return value when vma is merged after call_mmap()\n\nOn success, mmap should return the begin address of newly mapped area,\nbut patch \"mm: mmap: merge vma after call_mmap() if possible\" set\nvm_start of newly merged vma to return value addr.  Users of mmap will\nget wrong address if vma is merged after call_mmap().  We fix this by\nmoving the assignment to addr before merging vma.\n\nWe have a driver which changes vm_flags, and this bug is found by our\ntestcases.\n\nFixes: d70cec898324 (\"mm: mmap: merge vma after call_mmap() if possible\")\nSigned-off-by: Liu Zixian <liuzixian4@huawei.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nReviewed-by: Jason Gunthorpe <jgg@nvidia.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\nCc: Miaohe Lin <linmiaohe@huawei.com>\nCc: Hongxiang Lou <louhongxiang@huawei.com>\nCc: Hu Shiyuan <hushiyuan@huawei.com>\nCc: Matthew Wilcox <willy@infradead.org>\nLink: https://lkml.kernel.org/r/20201203085350.22624-1-liuzixian4@huawei.com\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:15:15 \nAuthor: Liu Zixian"}, {"id": "7a5bde37983d37783161681ff7c6122dfd081791", "date": "2020-12-06", "metadata": "Message: hugetlb_cgroup: fix offline of hugetlb cgroup with reservations\n\nAdrian Moreno was ruuning a kubernetes 1.19 + containerd/docker workload\nusing hugetlbfs.  In this environment the issue is reproduced by:\n\n - Start a simple pod that uses the recently added HugePages medium\n   feature (pod yaml attached)\n\n - Start a DPDK app. It doesn't need to run successfully (as in transfer\n   packets) nor interact with real hardware. It seems just initializing\n   the EAL layer (which handles hugepage reservation and locking) is\n   enough to trigger the issue\n\n - Delete the Pod (or let it \"Complete\").\n\nThis would result in a kworker thread going into a tight loop (top output):\n\n   1425 root      20   0       0      0      0 R  99.7   0.0   5:22.45 kworker/28:7+cgroup_destroy\n\n'perf top -g' reports:\n\n  -   63.28%     0.01%  [kernel]                    [k] worker_thread\n     - 49.97% worker_thread\n        - 52.64% process_one_work\n           - 62.08% css_killed_work_fn\n              - hugetlb_cgroup_css_offline\n                   41.52% _raw_spin_lock\n                 - 2.82% _cond_resched\n                      rcu_all_qs\n                   2.66% PageHuge\n        - 0.57% schedule\n           - 0.57% __schedule\n\nWe are spinning in the do-while loop in hugetlb_cgroup_css_offline.\nWorse yet, we are holding the master cgroup lock (cgroup_mutex) while\ninfinitely spinning.  Little else can be done on the system as the\ncgroup_mutex can not be acquired.\n\nDo note that the issue can be reproduced by simply offlining a hugetlb\ncgroup containing pages with reservation counts.\n\nThe loop in hugetlb_cgroup_css_offline is moving page counts from the\ncgroup being offlined to the parent cgroup.  This is done for each\nhstate, and is repeated until hugetlb_cgroup_have_usage returns false.\nThe routine moving counts (hugetlb_cgroup_move_parent) is only moving\n'usage' counts.  The routine hugetlb_cgroup_have_usage is checking for\nboth 'usage' and 'reservation' counts.  Discussion about what to do with\nreservation counts when reparenting was discussed here:\n\nhttps://lore.kernel.org/linux-kselftest/CAHS8izMFAYTgxym-Hzb_JmkTK1N_S9tGN71uS6MFV+R7swYu5A@mail.gmail.com/\n\nThe decision was made to leave a zombie cgroup for with reservation\ncounts.  Unfortunately, the code checking reservation counts was\nincorrectly added to hugetlb_cgroup_have_usage.\n\nTo fix the issue, simply remove the check for reservation counts.  While\nfixing this issue, a related bug in hugetlb_cgroup_css_offline was\nnoticed.  The hstate index is not reinitialized each time through the\ndo-while loop.  Fix this as well.\n\nFixes: 1adc4d419aa2 (\"hugetlb_cgroup: add interface for charge/uncharge hugetlb reservations\")\nReported-by: Adrian Moreno <amorenoz@redhat.com>\nSigned-off-by: Mike Kravetz <mike.kravetz@oracle.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nTested-by: Adrian Moreno <amorenoz@redhat.com>\nReviewed-by: Shakeel Butt <shakeelb@google.com>\nCc: Mina Almasry <almasrymina@google.com>\nCc: David Rientjes <rientjes@google.com>\nCc: Greg Thelen <gthelen@google.com>\nCc: Sandipan Das <sandipan@linux.ibm.com>\nCc: Shuah Khan <shuah@kernel.org>\nCc: <stable@vger.kernel.org>\nLink: https://lkml.kernel.org/r/20201203220242.158165-1-mike.kravetz@oracle.com\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:15:12 \nAuthor: Mike Kravetz"}, {"id": "3351b16af4946fff0d46481d155fb91adb28b1f9", "date": "2020-12-06", "metadata": "Message: mm/filemap: add static for function __add_to_page_cache_locked\n\n  mm/filemap.c:830:14: warning: no previous prototype for `__add_to_page_cache_locked' [-Wmissing-prototypes]\n\nSigned-off-by: Alex Shi <alex.shi@linux.alibaba.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nCc: Souptick Joarder <jrdr.linux@gmail.com>\nLink: https://lkml.kernel.org/r/1604661895-5495-1-git-send-email-alex.shi@linux.alibaba.com\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:15:09 \nAuthor: Alex Shi"}, {"id": "573a259336f8c57739bdaf035aa7abbae7d9a713", "date": "2020-12-06", "metadata": "Message: userfaultfd: selftests: fix SIGSEGV if huge mmap fails\n\nThe error handling in hugetlb_allocate_area() was incorrect for the\nhugetlb_shared test case.\n\nPreviously the behavior was:\n\n- mmap a hugetlb area\n  - If this fails, set the pointer to NULL, and carry on\n- mmap an alias of the same hugetlb fd\n  - If this fails, munmap the original area\n\nIf the original mmap failed, it's likely the second one did too.  If\nboth failed, we'd blindly try to munmap a NULL pointer, causing a\nSIGSEGV.  Instead, \"goto fail\" so we return before trying to mmap the\nalias.\n\nThis issue can be hit \"in real life\" by forgetting to set\n/proc/sys/vm/nr_hugepages (leaving it at 0), and then trying to run the\nhugetlb_shared test.\n\nAnother small improvement is, when the original mmap fails, don't just\nprint \"it failed\": perror(), so we can see *why*.  :)\n\nSigned-off-by: Axel Rasmussen <axelrasmussen@google.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nCc: Shuah Khan <shuah@kernel.org>\nCc: Peter Xu <peterx@redhat.com>\nCc: Joe Perches <joe@perches.com>\nCc: Mike Rapoport <rppt@linux.vnet.ibm.com>\nCc: Andrea Arcangeli <aarcange@redhat.com>\nCc: David Alan Gilbert <dgilbert@redhat.com>\nLink: https://lkml.kernel.org/r/20201204203443.2714693-1-axelrasmussen@google.com\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:15:05 \nAuthor: Axel Rasmussen"}, {"id": "d8cbe8bfa7df3c680ddfd5e1eee3a5c86d8dc764", "date": "2020-12-06", "metadata": "Message: tools/testing/selftests/vm: fix build error\n\nOnly x86 and PowerPC implement the pkey-xxx.h, and an error was reported\nwhen compiling protection_keys.c.\n\nAdd a Arch judgment to compile \"protection_keys\" in the Makefile.\n\nIf other arch implement this, add the arch name to the Makefile.\neg:\n    ifneq (,$(findstring $(ARCH),powerpc mips ... ))\n\nFollowing build errors:\n\n    pkey-helpers.h:93:2: error: #error Architecture not supported\n     #error Architecture not supported\n    pkey-helpers.h:96:20: error: `PKEY_DISABLE_ACCESS' undeclared\n     #define PKEY_MASK (PKEY_DISABLE_ACCESS | PKEY_DISABLE_WRITE)\n                        ^\n    protection_keys.c:218:45: error: `PKEY_DISABLE_WRITE' undeclared\n     pkey_assert(flags & (PKEY_DISABLE_ACCESS | PKEY_DISABLE_WRITE));\n                                                ^\n\nSigned-off-by: Xingxing Su <suxingxing@loongson.cn>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nCc: Shuah Khan <shuah@kernel.org>\nCc: Sandipan Das <sandipan@linux.ibm.com>\nCc: John Hubbard <jhubbard@nvidia.com>\nCc: Dave Hansen <dave.hansen@intel.com>\nCc: \"Kirill A. Shutemov\" <kirill.shutemov@linux.intel.com>\nCc: Brian Geffon <bgeffon@google.com>\nCc: Mina Almasry <almasrymina@google.com>\nLink: https://lkml.kernel.org/r/1606826876-30656-1-git-send-email-suxingxing@loongson.cn\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:15:02 \nAuthor: Xingxing Su"}, {"id": "4e60340c5ca560278c938726235bc0daa5fc8c7f", "date": "2020-12-06", "metadata": "Message: mailmap: add two more addresses of Uwe Kleine-K\u00f6nig\n\nThis fixes attribution for the commits (among others)\n\n - d4097456cd1d (\"video/framebuffer: move the probe func into\n   .devinit.text in Blackfin LCD driver\")\n\n - 0312e024d6cd (\"mfd: mc13xxx: Add support for mc34708\")\n\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nLink: https://lkml.kernel.org/r/20201127213358.3440830-1-u.kleine-koenig@pengutronix.de\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:14:58 \nAuthor: Uwe Kleine-K\u00f6nig"}, {"id": "b11a76b37a5aa7b07c3e3eeeaae20b25475bddd3", "date": "2020-12-06", "metadata": "Message: mm/swapfile: do not sleep with a spin lock held\n\nWe can't call kvfree() with a spin lock held, so defer it.  Fixes a\nmight_sleep() runtime warning.\n\nFixes: 873d7bcfd066 (\"mm/swapfile.c: use kvzalloc for swap_info_struct allocation\")\nSigned-off-by: Qian Cai <qcai@redhat.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nReviewed-by: Andrew Morton <akpm@linux-foundation.org>\nCc: Hugh Dickins <hughd@google.com>\nCc: <stable@vger.kernel.org>\nLink: https://lkml.kernel.org/r/20201202151549.10350-1-qcai@redhat.com\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:14:55 \nAuthor: Qian Cai"}, {"id": "e91d8d78237de8d7120c320b3645b7100848f24d", "date": "2020-12-06", "metadata": "Message: mm/zsmalloc.c: drop ZSMALLOC_PGTABLE_MAPPING\n\nWhile I was doing zram testing, I found sometimes decompression failed\nsince the compression buffer was corrupted.  With investigation, I found\nbelow commit calls cond_resched unconditionally so it could make a\nproblem in atomic context if the task is reschedule.\n\n  BUG: sleeping function called from invalid context at mm/vmalloc.c:108\n  in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 946, name: memhog\n  3 locks held by memhog/946:\n   #0: ffff9d01d4b193e8 (&mm->mmap_lock#2){++++}-{4:4}, at: __mm_populate+0x103/0x160\n   #1: ffffffffa3d53de0 (fs_reclaim){+.+.}-{0:0}, at: __alloc_pages_slowpath.constprop.0+0xa98/0x1160\n   #2: ffff9d01d56b8110 (&zspage->lock){.+.+}-{3:3}, at: zs_map_object+0x8e/0x1f0\n  CPU: 0 PID: 946 Comm: memhog Not tainted 5.9.3-00011-gc5bfc0287345-dirty #316\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1 04/01/2014\n  Call Trace:\n    unmap_kernel_range_noflush+0x2eb/0x350\n    unmap_kernel_range+0x14/0x30\n    zs_unmap_object+0xd5/0xe0\n    zram_bvec_rw.isra.0+0x38c/0x8e0\n    zram_rw_page+0x90/0x101\n    bdev_write_page+0x92/0xe0\n    __swap_writepage+0x94/0x4a0\n    pageout+0xe3/0x3a0\n    shrink_page_list+0xb94/0xd60\n    shrink_inactive_list+0x158/0x460\n\nWe can fix this by removing the ZSMALLOC_PGTABLE_MAPPING feature (which\ncontains the offending calling code) from zsmalloc.\n\nEven though this option showed some amount improvement(e.g., 30%) in\nsome arm32 platforms, it has been headache to maintain since it have\nabused APIs[1](e.g., unmap_kernel_range in atomic context).\n\nSince we are approaching to deprecate 32bit machines and already made\nthe config option available for only builtin build since v5.8, lastly it\nhas been not default option in zsmalloc, it's time to drop the option\nfor better maintenance.\n\n[1] http://lore.kernel.org/linux-mm/20201105170249.387069-1-minchan@kernel.org\n\nFixes: e47110e90584 (\"mm/vunmap: add cond_resched() in vunmap_pmd_range\")\nSigned-off-by: Minchan Kim <minchan@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nReviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>\nCc: Tony Lindgren <tony@atomide.com>\nCc: Christoph Hellwig <hch@infradead.org>\nCc: Harish Sriram <harish@linux.ibm.com>\nCc: Uladzislau Rezki <urezki@gmail.com>\nCc: <stable@vger.kernel.org>\nLink: https://lkml.kernel.org/r/20201117202916.GA3856507@google.com\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:14:51 \nAuthor: Minchan Kim"}, {"id": "8199be001a470209f5c938570cc199abb012fe53", "date": "2020-12-06", "metadata": "Message: mm: list_lru: set shrinker map bit when child nr_items is not zero\n\nWhen investigating a slab cache bloat problem, significant amount of\nnegative dentry cache was seen, but confusingly they neither got shrunk\nby reclaimer (the host has very tight memory) nor be shrunk by dropping\ncache.  The vmcore shows there are over 14M negative dentry objects on\nlru, but tracing result shows they were even not scanned at all.\n\nFurther investigation shows the memcg's vfs shrinker_map bit is not set.\nSo the reclaimer or dropping cache just skip calling vfs shrinker.  So\nwe have to reboot the hosts to get the memory back.\n\nI didn't manage to come up with a reproducer in test environment, and\nthe problem can't be reproduced after rebooting.  But it seems there is\nrace between shrinker map bit clear and reparenting by code inspection.\nThe hypothesis is elaborated as below.\n\nThe memcg hierarchy on our production environment looks like:\n\n                root\n               /    \\\n          system   user\n\nThe main workloads are running under user slice's children, and it\ncreates and removes memcg frequently.  So reparenting happens very often\nunder user slice, but no task is under user slice directly.\n\nSo with the frequent reparenting and tight memory pressure, the below\nhypothetical race condition may happen:\n\n       CPU A                            CPU B\nreparent\n    dst->nr_items == 0\n                                 shrinker:\n                                     total_objects == 0\n    add src->nr_items to dst\n    set_bit\n                                     return SHRINK_EMPTY\n                                     clear_bit\nchild memcg offline\n    replace child's kmemcg_id with\n    parent's (in memcg_offline_kmem())\n                                  list_lru_del() between shrinker runs\n                                     see parent's kmemcg_id\n                                     dec dst->nr_items\nreparent again\n    dst->nr_items may go negative\n    due to concurrent list_lru_del()\n\n                                 The second run of shrinker:\n                                     read nr_items without any\n                                     synchronization, so it may\n                                     see intermediate negative\n                                     nr_items then total_objects\n                                     may return 0 coincidently\n\n                                     keep the bit cleared\n    dst->nr_items != 0\n    skip set_bit\n    add scr->nr_item to dst\n\nAfter this point dst->nr_item may never go zero, so reparenting will not\nset shrinker_map bit anymore.  And since there is no task under user\nslice directly, so no new object will be added to its lru to set the\nshrinker map bit either.  That bit is kept cleared forever.\n\nHow does list_lru_del() race with reparenting? It is because reparenting\nreplaces children's kmemcg_id to parent's without protecting from\nnlru->lock, so list_lru_del() may see parent's kmemcg_id but actually\ndeleting items from child's lru, but dec'ing parent's nr_items, so the\nparent's nr_items may go negative as commit 2788cf0c401c (\"memcg:\nreparent list_lrus and free kmemcg_id on css offline\") says.\n\nSince it is impossible that dst->nr_items goes negative and\nsrc->nr_items goes zero at the same time, so it seems we could set the\nshrinker map bit iff src->nr_items != 0.  We could synchronize\nlist_lru_count_one() and reparenting with nlru->lock, but it seems\nchecking src->nr_items in reparenting is the simplest and avoids lock\ncontention.\n\nFixes: fae91d6d8be5 (\"mm/list_lru.c: set bit in memcg shrinker bitmap on first list_lru item appearance\")\nSuggested-by: Roman Gushchin <guro@fb.com>\nSigned-off-by: Yang Shi <shy828301@gmail.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nReviewed-by: Roman Gushchin <guro@fb.com>\nReviewed-by: Shakeel Butt <shakeelb@google.com>\nAcked-by: Kirill Tkhai <ktkhai@virtuozzo.com>\nCc: Vladimir Davydov <vdavydov.dev@gmail.com>\nCc: <stable@vger.kernel.org>\t[4.19]\nLink: https://lkml.kernel.org/r/20201202171749.264354-1-shy828301@gmail.com\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:14:48 \nAuthor: Yang Shi"}, {"id": "becaba65f62f88e553ec92ed98370e9d2b18e629", "date": "2020-12-06", "metadata": "Message: mm: memcg/slab: fix obj_cgroup_charge() return value handling\n\nCommit 10befea91b61 (\"mm: memcg/slab: use a single set of kmem_caches\nfor all allocations\") introduced a regression into the handling of the\nobj_cgroup_charge() return value.  If a non-zero value is returned\n(indicating of exceeding one of memory.max limits), the allocation\nshould fail, instead of falling back to non-accounted mode.\n\nTo make the code more readable, move memcg_slab_pre_alloc_hook() and\nmemcg_slab_post_alloc_hook() calling conditions into bodies of these\nhooks.\n\nFixes: 10befea91b61 (\"mm: memcg/slab: use a single set of kmem_caches for all allocations\")\nSigned-off-by: Roman Gushchin <guro@fb.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nReviewed-by: Shakeel Butt <shakeelb@google.com>\nCc: Johannes Weiner <hannes@cmpxchg.org>\nCc: Michal Hocko <mhocko@kernel.org>\nCc: <stable@vger.kernel.org>\nLink: https://lkml.kernel.org/r/20201127161828.GD840171@carbon.dhcp.thefacebook.com\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:14:45 \nAuthor: Roman Gushchin"}, {"id": "2bf509d96d84c3336d08375e8af34d1b85ee71c8", "date": "2020-12-06", "metadata": "Message: coredump: fix core_pattern parse error\n\n'format_corename()' will splite 'core_pattern' on spaces when it is in\npipe mode, and take helper_argv[0] as the path to usermode executable.\nIt works fine in most cases.\n\nHowever, if there is a space between '|' and '/file/path', such as\n'| /usr/lib/systemd/systemd-coredump %P %u %g', then helper_argv[0] will\nbe parsed as '', and users will get a 'Core dump to | disabled'.\n\nIt is not friendly to users, as the pattern above was valid previously.\nFix this by ignoring the spaces between '|' and '/file/path'.\n\nFixes: 315c69261dd3 (\"coredump: split pipe command whitespace before expanding template\")\nSigned-off-by: Menglong Dong <dong.menglong@zte.com.cn>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nCc: Paul Wise <pabs3@bonedaddy.net>\nCc: Jakub Wilk <jwilk@jwilk.net> [https://bugs.debian.org/924398]\nCc: Neil Horman <nhorman@tuxdriver.com>\nCc: <stable@vger.kernel.org>\nLink: https://lkml.kernel.org/r/5fb62870.1c69fb81.8ef5d.af76@mx.google.com\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:14:42 \nAuthor: Menglong Dong"}, {"id": "11fb479ff5d9872ddff02dd533c16d60372c86b2", "date": "2020-12-06", "metadata": "Message: zlib: export S390 symbols for zlib modules\n\nFix build errors when ZLIB_INFLATE=m and ZLIB_DEFLATE=m and ZLIB_DFLTCC=y\nby exporting the 2 needed symbols in dfltcc_inflate.c.\n\nFixes these build errors:\n\n  ERROR: modpost: \"dfltcc_inflate\" [lib/zlib_inflate/zlib_inflate.ko] undefined!\n  ERROR: modpost: \"dfltcc_can_inflate\" [lib/zlib_inflate/zlib_inflate.ko] undefined!\n\nFixes: 126196100063 (\"lib/zlib: add s390 hardware support for kernel zlib_inflate\")\nReported-by: kernel test robot <lkp@intel.com>\nSigned-off-by: Randy Dunlap <rdunlap@infradead.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nAcked-by: Ilya Leoshkevich <iii@linux.ibm.com>\nCc: Mikhail Zaslonko <zaslonko@linux.ibm.com>\nCc: Heiko Carstens <hca@linux.ibm.com>\nCc: Vasily Gorbik <gor@linux.ibm.com>\nCc: Christian Borntraeger <borntraeger@de.ibm.com>\nLink: https://lkml.kernel.org/r/20201123191712.4882-1-rdunlap@infradead.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-06 - 06:14:38 \nAuthor: Randy Dunlap"}, {"id": "7d32358be8acb119dcfe39b6cf67ec6d94bf1fe7", "date": "2020-12-03", "metadata": "Message: kbuild: avoid split lines in .mod files\n\n\"xargs echo\" is not a safe way to remove line breaks because the input\nmay exceed the command line limit and xargs may break it up into\nmultiple invocations of echo. This should never happen because\nscripts/gen_autoksyms.sh expects all undefined symbols are placed in\nthe second line of .mod files.\n\nOne possible way is to replace \"xargs echo\" with\n\"sed ':x;N;$!bx;s/\\n/ /g'\" or something, but I rewrote the code by\nusing awk because it is more readable.\n\nThis issue was reported by Sami Tolvanen; in his Clang LTO patch set,\n$(multi-used-m) is no longer an ELF object, but a thin archive that\ncontains LLVM bitcode files. llvm-nm prints out symbols for each\narchive member separately, which results a lot of dupications, in some\nplaces, beyond the system-defined limit.\n\nThis problem must be fixed irrespective of LTO, and we must ensure\nzero possibility of having this issue.\n\nLink: https://lkml.org/lkml/2020/12/1/1658\nReported-by: Sami Tolvanen <samitolvanen@google.com>\nSigned-off-by: Masahiro Yamada <masahiroy@kernel.org>\nReviewed-by: Sami Tolvanen <samitolvanen@google.com> \nDate: 2020-12-03 - 17:55:51 \nAuthor: Masahiro Yamada"}, {"id": "264f53b41946dcabb2b3304190839ab5670c7825", "date": "2020-12-05", "metadata": "Message: Revert \"mei: virtio: virtualization frontend driver\"\n\nThis reverts commit d162219c655c8cf8003128a13840d6c1e183fb80.\n\nThe device uses a VIRTIO device ID out of a not-for-production range.\nReleasing Linux using an ID out of this range will make it conflict with\ndevelopment setups. An official request to reserve an ID for an MEI\ndevice is yet to be submitted to the virtio TC, thus there's no chance\nit will be reserved and fixed in time before the next release.\n\nOnce requested it usually takes 2-3 weeks to land in the spec, which\nmeans the device can be supported with the official ID in the next Linux\nversion if contributors act quickly.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nCc: Tomas Winkler <tomas.winkler@intel.com>\nCc: Alexander Usyskin <alexander.usyskin@intel.com>\nCc: Wang Yu <yu1.wang@intel.com>\nCc: Liu Shuo <shuo.a.liu@intel.com>\nLink: https://lore.kernel.org/r/20201205193625.469773-1-mst@redhat.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> \nDate: 2020-12-05 - 19:38:46 \nAuthor: Michael S. Tsirkin"}, {"id": "84da009f06e60cf59d5e861f8e2101d2d3885517", "date": "2020-12-03", "metadata": "Message: x86/sev-es: Use new for_each_insn_prefix() macro to loop over prefixes bytes\n\nSince insn.prefixes.nbytes can be bigger than the size of\ninsn.prefixes.bytes[] when a prefix is repeated, the proper\ncheck must be:\n\n  insn.prefixes.bytes[i] != 0 and i < 4\n\ninstead of using insn.prefixes.nbytes. Use the new\nfor_each_insn_prefix() macro which does it correctly.\n\nDebugged by Kees Cook <keescook@chromium.org>.\n\n [ bp: Massage commit message. ]\n\nFixes: 25189d08e516 (\"x86/sev-es: Add support for handling IOIO exceptions\")\nReported-by: syzbot+9b64b619f10f19d19a7c@syzkaller.appspotmail.com\nSigned-off-by: Masami Hiramatsu <mhiramat@kernel.org>\nSigned-off-by: Borislav Petkov <bp@suse.de>\nLink: https://lkml.kernel.org/r/160697106089.3146288.2052422845039649176.stgit@devnote2 \nDate: 2020-12-03 - 04:51:01 \nAuthor: Masami Hiramatsu"}, {"id": "12cb908a11b2544b5f53e9af856e6b6a90ed5533", "date": "2020-12-03", "metadata": "Message: x86/insn-eval: Use new for_each_insn_prefix() macro to loop over prefixes bytes\n\nSince insn.prefixes.nbytes can be bigger than the size of\ninsn.prefixes.bytes[] when a prefix is repeated, the proper check must\nbe\n\n  insn.prefixes.bytes[i] != 0 and i < 4\n\ninstead of using insn.prefixes.nbytes. Use the new\nfor_each_insn_prefix() macro which does it correctly.\n\nDebugged by Kees Cook <keescook@chromium.org>.\n\n [ bp: Massage commit message. ]\n\nFixes: 32d0b95300db (\"x86/insn-eval: Add utility functions to get segment selector\")\nReported-by: syzbot+9b64b619f10f19d19a7c@syzkaller.appspotmail.com\nSigned-off-by: Masami Hiramatsu <mhiramat@kernel.org>\nSigned-off-by: Borislav Petkov <bp@suse.de>\nCc: stable@vger.kernel.org\nLink: https://lkml.kernel.org/r/160697104969.3146288.16329307586428270032.stgit@devnote2 \nDate: 2020-12-03 - 04:50:50 \nAuthor: Masami Hiramatsu"}, {"id": "4e9a5ae8df5b3365183150f6df49e49dece80d8c", "date": "2020-12-03", "metadata": "Message: x86/uprobes: Do not use prefixes.nbytes when looping over prefixes.bytes\n\nSince insn.prefixes.nbytes can be bigger than the size of\ninsn.prefixes.bytes[] when a prefix is repeated, the proper check must\nbe\n\n  insn.prefixes.bytes[i] != 0 and i < 4\n\ninstead of using insn.prefixes.nbytes.\n\nIntroduce a for_each_insn_prefix() macro for this purpose. Debugged by\nKees Cook <keescook@chromium.org>.\n\n [ bp: Massage commit message, sync with the respective header in tools/\n   and drop \"we\". ]\n\nFixes: 2b1444983508 (\"uprobes, mm, x86: Add the ability to install and remove uprobes breakpoints\")\nReported-by: syzbot+9b64b619f10f19d19a7c@syzkaller.appspotmail.com\nSigned-off-by: Masami Hiramatsu <mhiramat@kernel.org>\nSigned-off-by: Borislav Petkov <bp@suse.de>\nReviewed-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>\nCc: stable@vger.kernel.org\nLink: https://lkml.kernel.org/r/160697103739.3146288.7437620795200799020.stgit@devnote2 \nDate: 2020-12-03 - 04:50:37 \nAuthor: Masami Hiramatsu"}, {"id": "7059c2c00a2196865c2139083cbef47cd18109b6", "date": "2020-12-06", "metadata": "Message: Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input\n\nPull input fixes from Dmitry Torokhov:\n \"A fix for 'RETRIGEN' handling in Atmel touch controllers that was\n  causing lost interrupts on systems using edge-triggered interrupts, a\n  quirk for i8042 driver, and a couple more fixes.\"\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input:\n  Input: atmel_mxt_ts - fix lost interrupts\n  Input: xpad - support Ardwiino Controllers\n  Input: i8042 - add ByteSpeed touchpad to noloop table\n  Input: i8042 - fix error return code in i8042_setup_aux()\n  Input: soc_button_array - add missing include \nDate: 2020-12-06 - 00:16:34 \nAuthor: Linus Torvalds"}, {"id": "33256ce194110874d4bc90078b577c59f9076c59", "date": "2020-12-05", "metadata": "Message: Merge branch 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux\n\nPull i2c fixes from Wolfram Sang:\n \"Some more I2C driver updates. IMX updates are a tad bigger, but not\n  exceptionally big\"\n\n* 'i2c/for-current' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux:\n  i2c: mlxbf: Fix the return check of devm_ioremap and ioremap\n  i2c: mlxbf: select CONFIG_I2C_SLAVE\n  i2c: imx: Don't generate STOP condition if arbitration has been lost\n  i2c: imx: Check for I2SR_IAL after every byte\n  i2c: imx: Fix reset of I2SR_IAL flag\n  i2c: qcom: Fix IRQ error misassignement\n  i2c: qup: Fix error return code in qup_i2c_bam_schedule_desc() \nDate: 2020-12-05 - 23:27:22 \nAuthor: Linus Torvalds"}, {"id": "be1515bad737ee9efe9229ab8313a236bfa03c5c", "date": "2020-12-05", "metadata": "Message: Merge tag 'block-5.10-2020-12-05' of git://git.kernel.dk/linux-block\n\nPull block fix from Jens Axboe:\n \"Single fix for an issue with chunk_sectors and stacked devices\"\n\n* tag 'block-5.10-2020-12-05' of git://git.kernel.dk/linux-block:\n  block: use gcd() to fix chunk_sectors limit stacking \nDate: 2020-12-05 - 22:45:30 \nAuthor: Linus Torvalds"}, {"id": "619ca2664cc6ebf6ecaff347d15ee8093b634e0c", "date": "2020-12-05", "metadata": "Message: Merge tag 'io_uring-5.10-2020-12-05' of git://git.kernel.dk/linux-block\n\nPull io_uring fix from Jens Axboe:\n \"Just a small fix this time, for an issue with 32-bit compat apps and\n  buffer selection with recvmsg\"\n\n* tag 'io_uring-5.10-2020-12-05' of git://git.kernel.dk/linux-block:\n  io_uring: fix recvmsg setup with compat buf-select \nDate: 2020-12-05 - 22:39:59 \nAuthor: Linus Torvalds"}, {"id": "32f741b02f1a84dd15cdaf74ea3c8d724f812318", "date": "2020-12-05", "metadata": "Message: Merge tag 'powerpc-5.10-5' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc fixes from Michael Ellerman:\n \"Some more powerpc fixes for 5.10:\n\n   - Three commits fixing possible missed TLB invalidations for\n     multi-threaded processes when CPUs are hotplugged in and out.\n\n   - A fix for a host crash triggerable by host userspace (qemu) in KVM\n     on Power9.\n\n   - A fix for a host crash in machine check handling when running HPT\n     guests on a HPT host.\n\n   - One commit fixing potential missed TLB invalidations when using the\n     hash MMU on Power9 or later.\n\n   - A regression fix for machines with CPUs on node 0 but no memory.\n\n  Thanks to Aneesh Kumar K.V, C\u00e9dric Le Goater, Greg Kurz, Milan\n  Mohanty, Milton Miller, Nicholas Piggin, Paul Mackerras, and Srikar\n  Dronamraju\"\n\n* tag 'powerpc-5.10-5' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux:\n  powerpc/64s/powernv: Fix memory corruption when saving SLB entries on MCE\n  KVM: PPC: Book3S HV: XIVE: Fix vCPU id sanity check\n  powerpc/numa: Fix a regression on memoryless node 0\n  powerpc/64s: Trim offlined CPUs from mm_cpumasks\n  kernel/cpu: add arch override for clear_tasks_mm_cpumask() mm handling\n  powerpc/64s/pseries: Fix hash tlbiel_all_isa300 for guest kernels\n  powerpc/64s: Fix hash ISA v3.0 TLBIEL instruction generation \nDate: 2020-12-05 - 19:16:21 \nAuthor: Linus Torvalds"}, {"id": "d4e904198c5b46c140fdd04492df6ec31f1f03a5", "date": "2020-12-05", "metadata": "Message: Merge tag '5.10-rc6-smb3-fixes-part2' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs fixes from Steve French:\n \"Three smb3 fixes (two for stable) fixing\n\n   - a null pointer issue in a DFS error path\n\n   - a problem with excessive padding when mounted with \"idsfromsid\"\n     causing owner fields to get corrupted\n\n   - a more recent problem with compounded reparse point query found in\n     testing to the Linux kernel server\"\n\n* tag '5.10-rc6-smb3-fixes-part2' of git://git.samba.org/sfrench/cifs-2.6:\n  cifs: refactor create_sd_buf() and and avoid corrupting the buffer\n  cifs: add NULL check for ses->tcon_ipc\n  smb3: set COMPOUND_FID to FileID field of subsequent compound request \nDate: 2020-12-05 - 19:09:07 \nAuthor: Linus Torvalds"}, {"id": "312b0bcd402a003053914e13d962e82be906cf41", "date": "2020-12-05", "metadata": "Message: Merge tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI fixes from James Bottomley:\n \"Four small fixes in two drivers.\n\n  The mpt3sas fixes are all problems with timeout under unusual\n  conditions, and the storvsc is a missed incoming packet validation\n  and a missed error return\"\n\n* tag 'scsi-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi:\n  scsi: mpt3sas: Increase IOCInit request timeout to 30s\n  scsi: mpt3sas: Fix ioctl timeout\n  scsi: storvsc: Validate length of incoming packet in storvsc_on_channel_callback()\n  scsi: storvsc: Fix error return in storvsc_probe() \nDate: 2020-12-05 - 18:59:21 \nAuthor: Linus Torvalds"}, {"id": "8762340561397fce0f0b41220ed9619101c870d0", "date": "2020-12-05", "metadata": "Message: Merge tag 'for-5.10/dm-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull fix for device mapper fixes from Mike Snitzer:\n \"Apologies for the glaring bug I introduced with my previous pull\n  request!\n\n  Fix incorrect branching at top of blk_max_size_offset()\"\n\n* tag 'for-5.10/dm-fixes-2' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  block: fix incorrect branching in blk_max_size_offset() \nDate: 2020-12-05 - 18:51:25 \nAuthor: Linus Torvalds"}, {"id": "2bf9545626f8d09f552ab86d0047a415fe9a07a0", "date": "2020-12-03", "metadata": "Message: i2c: mlxbf: Fix the return check of devm_ioremap and ioremap\n\ndevm_ioremap and ioremap may return NULL which cannot be checked\nby IS_ERR.\n\nSigned-off-by: Wang Xiaojun <wangxiaojun11@huawei.com>\nReported-by: Hulk Robot <hulkci@huawei.com>\nAcked-by: Khalil Blaiech <kblaiech@nvidia.com>\nSigned-off-by: Wolfram Sang <wsa@kernel.org> \nDate: 2020-12-03 - 01:46:47 \nAuthor: Wang Xiaojun"}, {"id": "c62dac0a35bb6d351cd568e97090c5fd3e7aa532", "date": "2020-12-03", "metadata": "Message: i2c: mlxbf: select CONFIG_I2C_SLAVE\n\nIf this is not enabled, the interfaces used in this driver do not work:\n\ndrivers/i2c/busses/i2c-mlxbf.c:1888:3: error: implicit declaration of function 'i2c_slave_event' [-Werror,-Wimplicit-function-declaration]\n                i2c_slave_event(slave, I2C_SLAVE_WRITE_REQUESTED, &value);\n                ^\ndrivers/i2c/busses/i2c-mlxbf.c:1888:26: error: use of undeclared identifier 'I2C_SLAVE_WRITE_REQUESTED'\n                i2c_slave_event(slave, I2C_SLAVE_WRITE_REQUESTED, &value);\n                                       ^\ndrivers/i2c/busses/i2c-mlxbf.c:1890:32: error: use of undeclared identifier 'I2C_SLAVE_WRITE_RECEIVED'\n                ret = i2c_slave_event(slave, I2C_SLAVE_WRITE_RECEIVED,\n                                             ^\ndrivers/i2c/busses/i2c-mlxbf.c:1892:26: error: use of undeclared identifier 'I2C_SLAVE_STOP'\n                i2c_slave_event(slave, I2C_SLAVE_STOP, &value);\n                                       ^\n\nFixes: b5b5b32081cd (\"i2c: mlxbf: I2C SMBus driver for Mellanox BlueField SoC\")\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>\nAcked-by: Khalil Blaiech <kblaiech@nvidia.com>\nSigned-off-by: Wolfram Sang <wsa@kernel.org> \nDate: 2020-12-03 - 22:32:50 \nAuthor: Arnd Bergmann"}, {"id": "65f33b35722952fa076811d5686bfd8a611a80fa", "date": "2020-12-04", "metadata": "Message: block: fix incorrect branching in blk_max_size_offset()\n\nIf non-zero 'chunk_sectors' is passed in to blk_max_size_offset() that\noverride will be incorrectly ignored.\n\nOld blk_max_size_offset() branching, prior to commit 3ee16db390b4,\nmust be used only if passed 'chunk_sectors' override is zero.\n\nFixes: 3ee16db390b4 (\"dm: fix IO splitting\")\nCc: stable@vger.kernel.org # 5.9\nReported-by: John Dorminy <jdorminy@redhat.com>\nSigned-off-by: Mike Snitzer <snitzer@redhat.com> \nDate: 2020-12-04 - 22:21:03 \nAuthor: Mike Snitzer"}, {"id": "bcee5278958802b40ee8b26679155a6d9231783e", "date": "2020-12-04", "metadata": "Message: tracing: Fix userstacktrace option for instances\n\nWhen the instances were able to use their own options, the userstacktrace\noption was left hardcoded for the top level. This made the instance\nuserstacktrace option bascially into a nop, and will confuse users that set\nit, but nothing happens (I was confused when it happened to me!)\n\nCc: stable@vger.kernel.org\nFixes: 16270145ce6b (\"tracing: Add trace options for core options to instances\")\nSigned-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org> \nDate: 2020-12-04 - 21:36:16 \nAuthor: Steven Rostedt (VMware)"}, {"id": "b3298500b23f0b53a8d81e0d5ad98a29db71f4f0", "date": "2020-12-04", "metadata": "Message: Merge tag 'for-5.10/dm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm\n\nPull device mapper fixes from Mike Snitzer:\n\n - Fix DM's bio splitting changes that were made during v5.9. This\n   restores splitting in terms of varied per-target ti->max_io_len\n   rather than use block core's single stacked 'chunk_sectors' limit.\n\n - Like DM crypt, update DM integrity to not use crypto drivers that\n   have CRYPTO_ALG_ALLOCATES_MEMORY set.\n\n - Fix DM writecache target's argument parsing and status display.\n\n - Remove needless BUG() from dm writecache's persistent_memory_claim()\n\n - Remove old gcc workaround in DM cache target's block_div() for ARM\n   link errors now that gcc >= 4.9 is required.\n\n - Fix RCU locking in dm_blk_report_zones and dm_dax_zero_page_range.\n\n - Remove old, and now frowned upon, BUG_ON(in_interrupt()) in\n   dm_table_event().\n\n - Remove invalid sparse annotations from dm_prepare_ioctl() and\n   dm_unprepare_ioctl().\n\n* tag 'for-5.10/dm-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm:\n  dm: remove invalid sparse __acquires and __releases annotations\n  dm: fix double RCU unlock in dm_dax_zero_page_range() error path\n  dm: fix IO splitting\n  dm writecache: remove BUG() and fail gracefully instead\n  dm table: Remove BUG_ON(in_interrupt())\n  dm: fix bug with RCU locking in dm_blk_report_zones\n  Revert \"dm cache: fix arm link errors with inline\"\n  dm writecache: fix the maximum number of arguments\n  dm writecache: advance the number of arguments when reporting max_age\n  dm integrity: don't use drivers that have CRYPTO_ALG_ALLOCATES_MEMORY \nDate: 2020-12-04 - 21:28:39 \nAuthor: Linus Torvalds"}, {"id": "bde3808bc8c2741ad3d804f84720409aee0c2972", "date": "2020-12-04", "metadata": "Message: dm: remove invalid sparse __acquires and __releases annotations\n\nFixes sparse warnings:\ndrivers/md/dm.c:508:12: warning: context imbalance in 'dm_prepare_ioctl' - wrong count at exit\ndrivers/md/dm.c:543:13: warning: context imbalance in 'dm_unprepare_ioctl' - wrong count at exit\n\nFixes: 971888c46993f (\"dm: hold DM table for duration of ioctl rather than use blkdev_get\")\nCc: stable@vger.kernel.org\nSigned-off-by: Mike Snitzer <snitzer@redhat.com> \nDate: 2020-12-04 - 20:25:18 \nAuthor: Mike Snitzer"}, {"id": "f05c4403db5bba881d4964e731f6da35be46aabd", "date": "2020-12-04", "metadata": "Message: dm: fix double RCU unlock in dm_dax_zero_page_range() error path\n\nRemove redundant dm_put_live_table() in dm_dax_zero_page_range() error\npath to fix sparse warning:\ndrivers/md/dm.c:1208:9: warning: context imbalance in 'dm_dax_zero_page_range' - unexpected unlock\n\nFixes: cdf6cdcd3b99a (\"dm,dax: Add dax zero_page_range operation\")\nCc: stable@vger.kernel.org\nSigned-off-by: Mike Snitzer <snitzer@redhat.com> \nDate: 2020-12-04 - 20:19:27 \nAuthor: Mike Snitzer"}, {"id": "3ee16db390b42b8a21f2ad2ea2518f3469c6e532", "date": "2020-11-30", "metadata": "Message: dm: fix IO splitting\n\nCommit 882ec4e609c1 (\"dm table: stack 'chunk_sectors' limit to account\nfor target-specific splitting\") caused a couple regressions:\n1) Using lcm_not_zero() when stacking chunk_sectors was a bug because\n   chunk_sectors must reflect the most limited of all devices in the\n   IO stack.\n2) DM targets that set max_io_len but that do _not_ provide an\n   .iterate_devices method no longer had there IO split properly.\n\nAnd commit 5091cdec56fa (\"dm: change max_io_len() to use\nblk_max_size_offset()\") also caused a regression where DM no longer\nsupported varied (per target) IO splitting. The implication being the\npotential for severely reduced performance for IO stacks that use a DM\ntarget like dm-cache to hide performance limitations of a slower\ndevice (e.g. one that requires 4K IO splitting).\n\nComing full circle: Fix all these issues by discontinuing stacking\nchunk_sectors up using ti->max_io_len in dm_calculate_queue_limits(),\nadd optional chunk_sectors override argument to blk_max_size_offset()\nand update DM's max_io_len() to pass ti->max_io_len to its\nblk_max_size_offset() call.\n\nPassing in an optional chunk_sectors override to blk_max_size_offset()\nallows for code reuse of block's centralized calculation for max IO\nsize based on provided offset and split boundary.\n\nFixes: 882ec4e609c1 (\"dm table: stack 'chunk_sectors' limit to account for target-specific splitting\")\nFixes: 5091cdec56fa (\"dm: change max_io_len() to use blk_max_size_offset()\")\nCc: stable@vger.kernel.org\nReported-by: John Dorminy <jdorminy@redhat.com>\nReported-by: Bruce Johnston <bjohnsto@redhat.com>\nReported-by: Kirill Tkhai <ktkhai@virtuozzo.com>\nReviewed-by: John Dorminy <jdorminy@redhat.com>\nSigned-off-by: Mike Snitzer <snitzer@redhat.com>\nReviewed-by: Jens Axboe <axboe@kernel.dk> \nDate: 2020-11-30 - 15:57:43 \nAuthor: Mike Snitzer"}, {"id": "e87297fa080a7ed6b431873c771b3801cab573f5", "date": "2020-12-04", "metadata": "Message: Merge tag 'drm-fixes-2020-12-04' of git://anongit.freedesktop.org/drm/drm\n\nPull drm fixes from Dave Airlie:\n \"This week's regular fixes.\n\n  i915 has fixes for a few races, use-after-free, and gpu hangs. Tegra\n  just has some minor fixes that I didn't see much point in hanging on\n  to. The nouveau fix is for all pre-nv50 cards and was reported a few\n  times. Otherwise it's just some amdgpu, and a few misc fixes.\n\n  Summary:\n\n  amdgpu:\n   - SMU11 manual fan fix\n   - Renoir display clock fix\n   - VCN3 dynamic powergating fix\n\n  i915:\n   - Program mocs:63 for cache eviction on gen9 (Chris)\n   - Protect context lifetime with RCU (Chris)\n   - Split the breadcrumb spinlock between global and contexts (Chris)\n   - Retain default context state across shrinking (Venkata)\n   - Limit frequency drop to RPe on parking (Chris)\n   - Return earlier from intel_modeset_init() without display (Jani)\n   - Defer initial modeset until after GGTT is initialized (Chris)\n\n  nouveau:\n   - pre-nv50 regression fix\n\n  rockchip:\n   - uninitialised LVDS property fix\n\n  omap:\n   - bridge fix\n\n  panel:\n   - race fix\n\n  mxsfb:\n   - fence sync fix\n   - modifiers fix\n\n  tegra:\n   - idr init fix\n   - sor fixes\n   - output/of cleanup fix\"\n\n* tag 'drm-fixes-2020-12-04' of git://anongit.freedesktop.org/drm/drm: (22 commits)\n  drm/amdgpu/vcn3.0: remove old DPG workaround\n  drm/amdgpu/vcn3.0: stall DPG when WPTR/RPTR reset\n  drm/amd/display: Init clock value by current vbios CLKs\n  drm/amdgpu/pm/smu11: Fix fan set speed bug\n  drm/i915/display: Defer initial modeset until after GGTT is initialised\n  drm/i915/display: return earlier from intel_modeset_init() without display\n  drm/i915/gt: Limit frequency drop to RPe on parking\n  drm/i915/gt: Retain default context state across shrinking\n  drm/i915/gt: Split the breadcrumb spinlock between global and contexts\n  drm/i915/gt: Protect context lifetime with RCU\n  drm/i915/gt: Program mocs:63 for cache eviction on gen9\n  drm/omap: sdi: fix bridge enable/disable\n  drm/panel: sony-acx565akm: Fix race condition in probe\n  drm/rockchip: Avoid uninitialized use of endpoint id in LVDS\n  drm/tegra: sor: Disable clocks on error in tegra_sor_init()\n  drm/nouveau: make sure ret is initialized in nouveau_ttm_io_mem_reserve\n  drm: mxsfb: Implement .format_mod_supported\n  drm: mxsfb: fix fence synchronization\n  drm/tegra: output: Do not put OF node twice\n  drm/tegra: replace idr_init() by idr_init_base()\n  ... \nDate: 2020-12-04 - 17:25:22 \nAuthor: Linus Torvalds"}, {"id": "c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9", "date": "2020-12-03", "metadata": "Message: tty: Fix ->session locking\n\nCurrently, locking of ->session is very inconsistent; most places\nprotect it using the legacy tty mutex, but disassociate_ctty(),\n__do_SAK(), tiocspgrp() and tiocgsid() don't.\nTwo of the writers hold the ctrl_lock (because they already need it for\n->pgrp), but __proc_set_tty() doesn't do that yet.\n\nOn a PREEMPT=y system, an unprivileged user can theoretically abuse\nthis broken locking to read 4 bytes of freed memory via TIOCGSID if\ntiocgsid() is preempted long enough at the right point. (Other things\nmight also go wrong, especially if root-only ioctls are involved; I'm\nnot sure about that.)\n\nChange the locking on ->session such that:\n\n - tty_lock() is held by all writers: By making disassociate_ctty()\n   hold it. This should be fine because the same lock can already be\n   taken through the call to tty_vhangup_session().\n   The tricky part is that we need to shorten the area covered by\n   siglock to be able to take tty_lock() without ugly retry logic; as\n   far as I can tell, this should be fine, since nothing in the\n   signal_struct is touched in the `if (tty)` branch.\n - ctrl_lock is held by all writers: By changing __proc_set_tty() to\n   hold the lock a little longer.\n - All readers that aren't holding tty_lock() hold ctrl_lock: By\n   adding locking to tiocgsid() and __do_SAK(), and expanding the area\n   covered by ctrl_lock in tiocspgrp().\n\nCc: stable@kernel.org\nSigned-off-by: Jann Horn <jannh@google.com>\nReviewed-by: Jiri Slaby <jirislaby@kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> \nDate: 2020-12-03 - 01:25:05 \nAuthor: Jann Horn"}, {"id": "54ffccbf053b5b6ca4f6e45094b942fab92a25fc", "date": "2020-12-03", "metadata": "Message: tty: Fix ->pgrp locking in tiocspgrp()\n\ntiocspgrp() takes two tty_struct pointers: One to the tty that userspace\npassed to ioctl() (`tty`) and one to the TTY being changed (`real_tty`).\nThese pointers are different when ioctl() is called with a master fd.\n\nTo properly lock real_tty->pgrp, we must take real_tty->ctrl_lock.\n\nThis bug makes it possible for racing ioctl(TIOCSPGRP, ...) calls on\nboth sides of a PTY pair to corrupt the refcount of `struct pid`,\nleading to use-after-free errors.\n\nFixes: 47f86834bbd4 (\"redo locking of tty->pgrp\")\nCC: stable@kernel.org\nSigned-off-by: Jann Horn <jannh@google.com>\nReviewed-by: Jiri Slaby <jirislaby@kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> \nDate: 2020-12-03 - 01:25:04 \nAuthor: Jann Horn"}, {"id": "a4b98a7512f18534ce33a7e98e49115af59ffa00", "date": "2020-11-30", "metadata": "Message: usb: gadget: f_fs: Use local copy of descriptors for userspace copy\n\nThe function may be unbound causing the ffs_ep and its descriptors\nto be freed while userspace is in the middle of an ioctl requesting\nthe same descriptors. Avoid dangling pointer reference by first\nmaking a local copy of desctiptors before releasing the spinlock.\n\nFixes: c559a3534109 (\"usb: gadget: f_fs: add ioctl returning ep descriptor\")\nReviewed-by: Peter Chen <peter.chen@nxp.com>\nSigned-off-by: Vamsi Krishna Samavedam <vskrishn@codeaurora.org>\nSigned-off-by: Jack Pham <jackp@codeaurora.org>\nCc: stable <stable@vger.kernel.org>\nLink: https://lore.kernel.org/r/20201130203453.28154-1-jackp@codeaurora.org\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> \nDate: 2020-11-30 - 20:34:53 \nAuthor: Vamsi Krishna Samavedam"}, {"id": "45c5775460f32ed8cdb7c16986ae1a2c254346b3", "date": "2020-11-30", "metadata": "Message: usb: ohci-omap: Fix descriptor conversion\n\nThere were a bunch of issues with the patch converting the\nOMAP1 OSK board to use descriptors for controlling the USB\nhost:\n\n- The chip label was incorrect\n- The GPIO offset was off-by-one\n- The code should use sleeping accessors\n\nThis patch tries to fix all issues at the same time.\n\nCc: Aaro Koskinen <aaro.koskinen@iki.fi>\nReported-by: Aaro Koskinen <aaro.koskinen@iki.fi>\nFixes: 15d157e87443 (\"usb: ohci-omap: Convert to use GPIO descriptors\")\nSigned-off-by: Linus Walleij <linus.walleij@linaro.org>\nLink: https://lore.kernel.org/r/20201130083033.29435-1-linus.walleij@linaro.org\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> \nDate: 2020-11-30 - 08:30:33 \nAuthor: Linus Walleij"}, {"id": "97ad4a77f23e30801d2c0ef0c12b59f0e5760e6e", "date": "2020-12-04", "metadata": "Message: Revert \"usb-storage: fix sdev->host->dma_dev\"\n\nThis reverts commit 0154012f8018bba4d9971d1007c12ffd48539ddb as Hans\nreports it causes problems on some systems.  Until a \"real\" fix for this\ncan be found, revert this change to get normal functionality back.\n\nLink: https://lore.kernel.org/r/70ca74c2-4a80-e25b-eca9-a63a75516673@redhat.com\nCc: Tom Yan <tom.ty89@gmail.com>\nCc: Alan Stern <stern@rowland.harvard.edu>\nTested-by: Hans de Goede <hdegoede@redhat.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> \nDate: 2020-12-04 - 15:01:23 \nAuthor: Greg Kroah-Hartman"}, {"id": "d5c65d32dc240bf600d9e54250a8133e93ece60a", "date": "2020-12-04", "metadata": "Message: Revert \"uas: fix sdev->host->dma_dev\"\n\nThis reverts commit 558033c2828f832ab3b68c6f8b8710e0de6faef0 as Hans\nreports it causes problems on some systems.  Until a \"real\" fix for this\ncan be found, revert this change to get normal functionality back.\n\nLink: https://lore.kernel.org/r/70ca74c2-4a80-e25b-eca9-a63a75516673@redhat.com\nCc: Tom Yan <tom.ty89@gmail.com>\nCc: Alan Stern <stern@rowland.harvard.edu>\nTested-by: Hans de Goede <hdegoede@redhat.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> \nDate: 2020-12-04 - 15:00:34 \nAuthor: Greg Kroah-Hartman"}, {"id": "da881ded10a65885cdcb87ab817eea3acf23dcf9", "date": "2020-12-04", "metadata": "Message: Revert \"uas: bump hw_max_sectors to 2048 blocks for SS or faster drives\"\n\nThis reverts commit 5df7ef7d32fec1d6d1c34dbec019b461a12ce870 as Hans\nreports it causes problems on some systems.  Until a \"real\" fix for this\ncan be found, revert this change to get normal functionality back.\n\nLink: https://lore.kernel.org/r/70ca74c2-4a80-e25b-eca9-a63a75516673@redhat.com\nCc: Tom Yan <tom.ty89@gmail.com>\nCc: Alan Stern <stern@rowland.harvard.edu>\nTested-by: Hans de Goede <hdegoede@redhat.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> \nDate: 2020-12-04 - 14:59:27 \nAuthor: Greg Kroah-Hartman"}, {"id": "b48a7e755939940136266248e79f9e4bdbe99521", "date": "2020-12-04", "metadata": "Message: Merge tag 'usb-serial-5.10-rc7' of https://git.kernel.org/pub/scm/linux/kernel/git/johan/usb-serial into usb-linus\n\nJohan writes:\n\nUSB-serial fixes for 5.10-rc7\n\nHere's a fix for a regression in the option driver which has been\nbackported to the stable trees and fix for a small memory leak on open\nin the kl5kusb105 driver.\n\nIncluded are also various new device ids.\n\nAll but the memleak fix has been in linux-next and with no reported\nissues.\n\n* tag 'usb-serial-5.10-rc7' of https://git.kernel.org/pub/scm/linux/kernel/git/johan/usb-serial:\n  USB: serial: kl5kusb105: fix memleak on open\n  USB: serial: ch341: sort device-id entries\n  USB: serial: ch341: add new Product ID for CH341A\n  USB: serial: option: fix Quectel BG96 matching\n  USB: serial: option: add support for Thales Cinterion EXS82\n  USB: serial: option: add Fibocom NL668 variants \nDate: 2020-12-04 - 12:15:55 \nAuthor: Greg Kroah-Hartman"}, {"id": "3f203f057edfcf6bd02c6b942799262bfcf31f73", "date": "2020-12-04", "metadata": "Message: USB: serial: kl5kusb105: fix memleak on open\n\nFix memory leak of control-message transfer buffer on successful open().\n\nFixes: 6774d5f53271 (\"USB: serial: kl5kusb105: fix open error path\")\nCc: stable@vger.kernel.org\nSigned-off-by: Johan Hovold <johan@kernel.org> \nDate: 2020-12-04 - 08:55:19 \nAuthor: Johan Hovold"}, {"id": "de9b485d1dc993f1fb579b5d15a8176284627f4a", "date": "2020-12-04", "metadata": "Message: Merge tag 'drm-misc-fixes-2020-12-03' of git://anongit.freedesktop.org/drm/drm-misc into drm-fixes\n\nOne bridge fix for OMAP, one for a race condition in a panel, two for\nuninitialized variables in rockchip and nouveau, and two fixes for mxsfb\nto fix a regression with modifiers and a fix for a fence synchronization\nissue.\n\nSigned-off-by: Dave Airlie <airlied@redhat.com>\n\nFrom: Maxime Ripard <maxime@cerno.tech>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201203125943.h2ft2xoywunt5orl@gilmour \nDate: 2020-12-04 - 01:53:43 \nAuthor: Dave Airlie"}, {"id": "5353219ffdff68f861684a642388d6e926547698", "date": "2020-12-04", "metadata": "Message: Merge tag 'amd-drm-fixes-5.10-2020-12-02' of git://people.freedesktop.org/~agd5f/linux into drm-fixes\n\namd-drm-fixes-5.10-2020-12-02:\n\namdgpu:\n- SMU11 manual fan fix\n- Renoir display clock fix\n- VCN3 dynamic powergating fix\n\nSigned-off-by: Dave Airlie <airlied@redhat.com>\nFrom: Alex Deucher <alexdeucher@gmail.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201203044815.41257-1-alexander.deucher@amd.com \nDate: 2020-12-04 - 01:48:37 \nAuthor: Dave Airlie"}, {"id": "94cfbd05e46a31cc181e7ac6bc4b32ac09f8864f", "date": "2020-12-04", "metadata": "Message: Merge tag 'drm-intel-fixes-2020-12-03' of git://anongit.freedesktop.org/drm/drm-intel into drm-fixes\n\nFixes for GPU hang, null dereference, suspend-resume, power consumption, and use-after-free.\n\n- Program mocs:63 for cache eviction on gen9 (Chris)\n- Protect context lifetime with RCU (Chris)\n- Split the breadcrumb spinlock between global and contexts (Chris)\n- Retain default context state across shrinking (Venkata)\n- Limit frequency drop to RPe on parking (Chris)\n- Return earlier from intel_modeset_init() without display (Jani)\n- Defer initial modeset until after GGTT is initialized (Chris)\n\nSigned-off-by: Dave Airlie <airlied@redhat.com>\n\nFrom: Rodrigo Vivi <rodrigo.vivi@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201203134705.GA1575873@intel.com \nDate: 2020-12-04 - 01:45:37 \nAuthor: Dave Airlie"}, {"id": "ea64370bcae126a88cd26a16f1abcc23ab2b9a55", "date": "2020-11-30", "metadata": "Message: cifs: refactor create_sd_buf() and and avoid corrupting the buffer\n\nWhen mounting with \"idsfromsid\" mount option, Azure\ncorrupted the owner SIDs due to excessive padding\ncaused by placing the owner fields at the end of the\nsecurity descriptor on create.  Placing owners at the\nfront of the security descriptor (rather than the end)\nis also safer, as the number of ACEs (that follow it)\nare variable.\n\nSigned-off-by: Ronnie Sahlberg <lsahlber@redhat.com>\nSuggested-by: Rohith Surabattula <rohiths@microsoft.com>\nCC: Stable <stable@vger.kernel.org> # v5.8\nSigned-off-by: Steve French <stfrench@microsoft.com> \nDate: 2020-11-30 - 01:29:20 \nAuthor: Ronnie Sahlberg"}, {"id": "59463eb88829f646aed13283fd84d02a475334fe", "date": "2020-12-03", "metadata": "Message: cifs: add NULL check for ses->tcon_ipc\n\nIn some scenarios (DFS and BAD_NETWORK_NAME) set_root_set() can be\ncalled with a NULL ses->tcon_ipc.\n\nSigned-off-by: Aurelien Aptel <aaptel@suse.com>\nReviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>\nCC: Stable <stable@vger.kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com> \nDate: 2020-12-03 - 18:46:08 \nAuthor: Aurelien Aptel"}, {"id": "796317848517292eb951d8876773b98867cf3c28", "date": "2020-12-03", "metadata": "Message: smb3: set COMPOUND_FID to FileID field of subsequent compound request\n\nFor an operation compounded with an SMB2 CREATE request, client must set\nCOMPOUND_FID(0xFFFFFFFFFFFFFFFF) to FileID field of smb2 ioctl.\n\nSigned-off-by: Namjae Jeon <namjae.jeon@samsung.com>\nFixes: 2e4564b31b645 (\"smb3: add support stat of WSL reparse points for special file types\")\nReviewed-by: Aurelien Aptel <aaptel@suse.com>\nReviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>\nSigned-off-by: Steve French <stfrench@microsoft.com> \nDate: 2020-12-03 - 03:31:36 \nAuthor: Namjae Jeon"}, {"id": "bbe2ba04c5a92a49db8a42c850a5a2f6481e47eb", "date": "2020-12-03", "metadata": "Message: Merge tag 'net-5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net\n\nPull networking fixes from Jakub Kicinski:\n \"Networking fixes for 5.10-rc7, including fixes from bpf, netfilter,\n  wireless drivers, wireless mesh and can.\n\n  Current release - regressions:\n\n   - mt76: usb: fix crash on device removal\n\n  Current release - always broken:\n\n   - xsk: Fix umem cleanup from wrong context in socket destruct\n\n  Previous release - regressions:\n\n   - net: ip6_gre: set dev->hard_header_len when using header_ops\n\n   - ipv4: Fix TOS mask in inet_rtm_getroute()\n\n   - net, xsk: Avoid taking multiple skbuff references\n\n  Previous release - always broken:\n\n   - net/x25: prevent a couple of overflows\n\n   - netfilter: ipset: prevent uninit-value in hash_ip6_add\n\n   - geneve: pull IP header before ECN decapsulation\n\n   - mpls: ensure LSE is pullable in TC and openvswitch paths\n\n   - vxlan: respect needed_headroom of lower device\n\n   - batman-adv: Consider fragmentation for needed packet headroom\n\n   - can: drivers: don't count arbitration loss as an error\n\n   - netfilter: bridge: reset skb->pkt_type after POST_ROUTING traversal\n\n   - inet_ecn: Fix endianness of checksum update when setting ECT(1)\n\n   - ibmvnic: fix various corner cases around reset handling\n\n   - net/mlx5: fix rejecting unsupported Connect-X6DX SW steering\n\n   - net/mlx5: Enforce HW TX csum offload with kTLS\"\n\n* tag 'net-5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net: (62 commits)\n  net/mlx5: DR, Proper handling of unsupported Connect-X6DX SW steering\n  net/mlx5e: kTLS, Enforce HW TX csum offload with kTLS\n  net: mlx5e: fix fs_tcp.c build when IPV6 is not enabled\n  net/mlx5: Fix wrong address reclaim when command interface is down\n  net/sched: act_mpls: ensure LSE is pullable before reading it\n  net: openvswitch: ensure LSE is pullable before reading it\n  net: skbuff: ensure LSE is pullable before decrementing the MPLS ttl\n  net: mvpp2: Fix error return code in mvpp2_open()\n  chelsio/chtls: fix a double free in chtls_setkey()\n  rtw88: debug: Fix uninitialized memory in debugfs code\n  vxlan: fix error return code in __vxlan_dev_create()\n  net: pasemi: fix error return code in pasemi_mac_open()\n  cxgb3: fix error return code in t3_sge_alloc_qset()\n  net/x25: prevent a couple of overflows\n  dpaa_eth: copy timestamp fields to new skb in A-050385 workaround\n  net: ip6_gre: set dev->hard_header_len when using header_ops\n  mt76: usb: fix crash on device removal\n  iwlwifi: pcie: add some missing entries for AX210\n  iwlwifi: pcie: invert values of NO_160 device config entries\n  iwlwifi: pcie: add one missing entry for AX210\n  ... \nDate: 2020-12-03 - 21:10:11 \nAuthor: Linus Torvalds"}, {"id": "fee5be18524f961de653fe6103f927c84ebbfd38", "date": "2020-12-03", "metadata": "Message: Merge tag 's390-5.10-6' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull s390 fixes from Heiko Carstens:\n \"One commit is fixing lockdep irq state tracing which broke with -rc6.\n\n  The other one fixes logical vs physical CPU address mixup in our PCI\n  code.\n\n  Summary:\n\n   - fix lockdep irq state tracing\n\n   - fix logical vs physical CPU address confusion in PCI code\"\n\n* tag 's390-5.10-6' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390: fix irq state tracing\n  s390/pci: fix CPU address in MSI for directed IRQ \nDate: 2020-12-03 - 19:58:26 \nAuthor: Linus Torvalds"}, {"id": "c82a505c007fb754af144d5157e05fa7fd858157", "date": "2020-12-03", "metadata": "Message: Merge tag '9p-for-5.10-rc7' of git://github.com/martinetd/linux\n\nPull 9p fixes from Dominique Martinet:\n \"Restore splice functionality for 9p\"\n\n* tag '9p-for-5.10-rc7' of git://github.com/martinetd/linux:\n  fs: 9p: add generic splice_write file operation\n  fs: 9p: add generic splice_read file operations \nDate: 2020-12-03 - 19:47:13 \nAuthor: Linus Torvalds"}, {"id": "6f076ce6ab1631abf566a6fb830c02fe5797be9a", "date": "2020-12-03", "metadata": "Message: Merge branch 'mlx5-fixes-2020-12-01'\n\nSaeed Mahameed says:\n\n====================\nmlx5 fixes 2020-12-01\n\nThis series introduces some fixes to mlx5 driver.\n====================\n\nLink: https://lore.kernel.org/r/20201203043946.235385-1-saeedm@nvidia.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-03 - 19:18:37 \nAuthor: Jakub Kicinski"}, {"id": "d421e466c2373095f165ddd25cbabd6c5b077928", "date": "2020-12-03", "metadata": "Message: net/mlx5: DR, Proper handling of unsupported Connect-X6DX SW steering\n\nSTEs format for Connect-X5 and Connect-X6DX different. Currently, on\nConnext-X6DX the SW steering would break at some point when building STEs\nw/o giving a proper error message. Fix this by checking the STE format of\nthe current device when initializing domain: add mlx5_ifc definitions for\nConnect-X6DX SW steering, read FW capability to get the current format\nversion, and check this version when domain is being created.\n\nFixes: 26d688e33f88 (\"net/mlx5: DR, Add Steering entry (STE) utilities\")\nSigned-off-by: Yevgeny Kliteynik <kliteyn@nvidia.com>\nSigned-off-by: Saeed Mahameed <saeedm@nvidia.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-03 - 04:39:46 \nAuthor: Yevgeny Kliteynik"}, {"id": "b336e6b25e2d053c482ee4339787e6428f390864", "date": "2020-12-03", "metadata": "Message: net/mlx5e: kTLS, Enforce HW TX csum offload with kTLS\n\nChecksum calculation cannot be done in SW for TX kTLS HW offloaded\npackets.\nOffload it to the device, disregard the declared state of the TX\ncsum offload feature.\n\nFixes: d2ead1f360e8 (\"net/mlx5e: Add kTLS TX HW offload support\")\nSigned-off-by: Tariq Toukan <tariqt@nvidia.com>\nReviewed-by: Maxim Mikityanskiy <maximmi@mellanox.com>\nReviewed-by: Boris Pismenny <borisp@nvidia.com>\nSigned-off-by: Saeed Mahameed <saeedm@nvidia.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-03 - 04:39:45 \nAuthor: Tariq Toukan"}, {"id": "8a78a440108e55ddd845b0ef46df575248667520", "date": "2020-12-03", "metadata": "Message: net: mlx5e: fix fs_tcp.c build when IPV6 is not enabled\n\nFix build when CONFIG_IPV6 is not enabled by making a function\nbe built conditionally.\n\nFixes these build errors and warnings:\n\n../drivers/net/ethernet/mellanox/mlx5/core/en_accel/fs_tcp.c: In function 'accel_fs_tcp_set_ipv6_flow':\n../include/net/sock.h:380:34: error: 'struct sock_common' has no member named 'skc_v6_daddr'; did you mean 'skc_daddr'?\n  380 | #define sk_v6_daddr  __sk_common.skc_v6_daddr\n      |                                  ^~~~~~~~~~~~\n../drivers/net/ethernet/mellanox/mlx5/core/en_accel/fs_tcp.c:55:14: note: in expansion of macro 'sk_v6_daddr'\n   55 |         &sk->sk_v6_daddr, 16);\n      |              ^~~~~~~~~~~\nAt top level:\n../drivers/net/ethernet/mellanox/mlx5/core/en_accel/fs_tcp.c:47:13: warning: 'accel_fs_tcp_set_ipv6_flow' defined but not used [-Wunused-function]\n   47 | static void accel_fs_tcp_set_ipv6_flow(struct mlx5_flow_spec *spec, struct sock *sk)\n\nFixes: 5229a96e59ec (\"net/mlx5e: Accel, Expose flow steering API for rules add/del\")\nSigned-off-by: Randy Dunlap <rdunlap@infradead.org>\nReported-by: kernel test robot <lkp@intel.com>\nSigned-off-by: Saeed Mahameed <saeedm@nvidia.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-03 - 04:39:44 \nAuthor: Randy Dunlap"}, {"id": "1d2bb5ad89f47d8ce8aedc70ef85059ab3870292", "date": "2020-12-03", "metadata": "Message: net/mlx5: Fix wrong address reclaim when command interface is down\n\nWhen command interface is down, driver to reclaim all 4K page chucks that\nwere hold by the Firmeware. Fix a bug for 64K page size systems, where\ndriver repeatedly released only the first chunk of the page.\n\nDefine helper function to fill 4K chunks for a given Firmware pages.\nIterate over all unreleased Firmware pages and call the hepler per each.\n\nFixes: 5adff6a08862 (\"net/mlx5: Fix incorrect page count when in internal error\")\nSigned-off-by: Eran Ben Elisha <eranbe@nvidia.com>\nSigned-off-by: Saeed Mahameed <saeedm@nvidia.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-03 - 04:39:43 \nAuthor: Eran Ben Elisha"}, {"id": "9608fa653059c3f72faab0c148ac8773c46e7314", "date": "2020-12-03", "metadata": "Message: net/sched: act_mpls: ensure LSE is pullable before reading it\n\nwhen 'act_mpls' is used to mangle the LSE, the current value is read from\nthe packet dereferencing 4 bytes at mpls_hdr(): ensure that the label is\ncontained in the skb \"linear\" area.\n\nFound by code inspection.\n\nv2:\n - use MPLS_HLEN instead of sizeof(new_lse), thanks to Jakub Kicinski\n\nFixes: 2a2ea50870ba (\"net: sched: add mpls manipulation actions to TC\")\nSigned-off-by: Davide Caratti <dcaratti@redhat.com>\nAcked-by: Guillaume Nault <gnault@redhat.com>\nLink: https://lore.kernel.org/r/3243506cba43d14858f3bd21ee0994160e44d64a.1606987058.git.dcaratti@redhat.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-03 - 09:37:52 \nAuthor: Davide Caratti"}, {"id": "43c13605bad44b8abbc9776d6e63f62ccb7a47d6", "date": "2020-12-03", "metadata": "Message: net: openvswitch: ensure LSE is pullable before reading it\n\nwhen openvswitch is configured to mangle the LSE, the current value is\nread from the packet dereferencing 4 bytes at mpls_hdr(): ensure that\nthe label is contained in the skb \"linear\" area.\n\nFound by code inspection.\n\nFixes: d27cf5c59a12 (\"net: core: add MPLS update core helper and use in OvS\")\nSigned-off-by: Davide Caratti <dcaratti@redhat.com>\nLink: https://lore.kernel.org/r/aa099f245d93218b84b5c056b67b6058ccf81a66.1606987185.git.dcaratti@redhat.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-03 - 09:46:06 \nAuthor: Davide Caratti"}, {"id": "13de4ed9e3a9ccbe54d05f7d5c773f69ecaf6c64", "date": "2020-12-03", "metadata": "Message: net: skbuff: ensure LSE is pullable before decrementing the MPLS ttl\n\nskb_mpls_dec_ttl() reads the LSE without ensuring that it is contained in\nthe skb \"linear\" area. Fix this calling pskb_may_pull() before reading the\ncurrent ttl.\n\nFound by code inspection.\n\nFixes: 2a2ea50870ba (\"net: sched: add mpls manipulation actions to TC\")\nReported-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>\nSigned-off-by: Davide Caratti <dcaratti@redhat.com>\nLink: https://lore.kernel.org/r/53659f28be8bc336c113b5254dc637cc76bbae91.1606987074.git.dcaratti@redhat.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-03 - 09:58:21 \nAuthor: Davide Caratti"}, {"id": "6392b5b28e0e00171018ecd3ced3554f95b9bb46", "date": "2020-12-03", "metadata": "Message: Merge tag 'wireless-drivers-2020-12-03' of git://git.kernel.org/pub/scm/linux/kernel/git/kvalo/wireless-drivers\n\nKalle Valo says:\n\n====================\nwireless-drivers fixes for v5.10\n\nSecond, and most likely final, set of fixes for v5.10. Small fixes and\nPCI id addtions.\n\niwlwifi\n * PCI id additions\nmt76\n * fix a kernel crash during device removal\nrtw88\n * fix uninitialized memory in debugfs code\n\n* tag 'wireless-drivers-2020-12-03' of git://git.kernel.org/pub/scm/linux/kernel/git/kvalo/wireless-drivers:\n  rtw88: debug: Fix uninitialized memory in debugfs code\n  mt76: usb: fix crash on device removal\n  iwlwifi: pcie: add some missing entries for AX210\n  iwlwifi: pcie: invert values of NO_160 device config entries\n  iwlwifi: pcie: add one missing entry for AX210\n  iwlwifi: update MAINTAINERS entry\n====================\n\nLink: https://lore.kernel.org/r/20201203183408.EE88AC43461@smtp.codeaurora.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-03 - 18:59:28 \nAuthor: Jakub Kicinski"}, {"id": "82a10dc7f0960735f40e8d7d3bee56934291600f", "date": "2020-12-03", "metadata": "Message: net: mvpp2: Fix error return code in mvpp2_open()\n\nFix to return negative error code -ENOENT from invalid configuration\nerror handling case instead of 0, as done elsewhere in this function.\n\nFixes: 4bb043262878 (\"net: mvpp2: phylink support\")\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: Wang Hai <wanghai38@huawei.com>\nReviewed-by: Andrew Lunn <andrew@lunn.ch>\nLink: https://lore.kernel.org/r/20201203141806.37966-1-wanghai38@huawei.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-03 - 14:18:06 \nAuthor: Wang Hai"}, {"id": "391119fb5c5c4bdb4d57c7ffeb5e8d18560783d1", "date": "2020-12-03", "metadata": "Message: chelsio/chtls: fix a double free in chtls_setkey()\n\nThe \"skb\" is freed by the transmit code in cxgb4_ofld_send() and we\nshouldn't use it again.  But in the current code, if we hit an error\nlater on in the function then the clean up code will call kfree_skb(skb)\nand so it causes a double free.\n\nSet the \"skb\" to NULL and that makes the kfree_skb() a no-op.\n\nFixes: d25f2f71f653 (\"crypto: chtls - Program the TLS session Key\")\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nLink: https://lore.kernel.org/r/X8ilb6PtBRLWiSHp@mwanda\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-03 - 08:44:31 \nAuthor: Dan Carpenter"}, {"id": "72d1249e2ffdbc344e465031ec5335fa3489d62e", "date": "2020-12-01", "metadata": "Message: uapi: fix statx attribute value overlap for DAX & MOUNT_ROOT\n\nSTATX_ATTR_MOUNT_ROOT and STATX_ATTR_DAX got merged with the same value,\nso one of them needs fixing.  Move STATX_ATTR_DAX.\n\nWhile we're in here, clarify the value-matching scheme for some of the\nattributes, and explain why the value for DAX does not match.\n\nFixes: 80340fe3605c (\"statx: add mount_root\")\nFixes: 712b2698e4c0 (\"fs/stat: Define DAX statx attribute\")\nLink: https://lore.kernel.org/linux-fsdevel/7027520f-7c79-087e-1d00-743bdefa1a1e@redhat.com/\nLink: https://lore.kernel.org/lkml/20201202214629.1563760-1-ira.weiny@intel.com/\nReported-by: David Howells <dhowells@redhat.com>\nSigned-off-by: Eric Sandeen <sandeen@redhat.com>\nReviewed-by: David Howells <dhowells@redhat.com>\nReviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Ira Weiny <ira.weiny@intel.com>\nCc: <stable@vger.kernel.org> # 5.8\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-01 - 23:21:40 \nAuthor: Eric Sandeen"}, {"id": "062c9cdf60a1e581b1002d372f1cf8e745fe3c16", "date": "2020-12-03", "metadata": "Message: pwm: sl28cpld: fix getting driver data in pwm callbacks\n\nCurrently .get_state() and .apply() use dev_get_drvdata() on the struct\ndevice related to the pwm chip.  This only works after .probe() called\nplatform_set_drvdata() which in this driver happens only after\npwmchip_add() and so comes possibly too late.\n\nInstead of setting the driver data earlier use the traditional\ncontainer_of approach as this way the driver data is conceptually and\ncomputational nearer.\n\nFixes: 9db33d221efc (\"pwm: Add support for sl28cpld PWM controller\")\nTested-by: Michael Walle <michael@walle.cc>\nSigned-off-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-03 - 08:41:42 \nAuthor: Uwe Kleine-K\u00f6nig"}, {"id": "4f134b89a24b965991e7c345b9a4591821f7c2a6", "date": "2020-11-30", "metadata": "Message: lib/syscall: fix syscall registers retrieval on 32-bit platforms\n\nLilith >_> and Claudio Bozzato of Cisco Talos security team reported\nthat collect_syscall() improperly casts the syscall registers to 64-bit\nvalues leaking the uninitialized last 24 bytes on 32-bit platforms, that\nare visible in /proc/self/syscall.\n\nThe cause is that info->data.args are u64 while syscall_get_arguments()\nuses longs, as hinted by the bogus pointer cast in the function.\n\nLet's just proceed like the other call places, by retrieving the\nregisters into an array of longs before assigning them to the caller's\narray.  This was successfully tested on x86_64, i386 and ppc32.\n\nReference: CVE-2020-28588, TALOS-2020-1211\nFixes: 631b7abacd02 (\"ptrace: Remove maxargs from task_current_syscall()\")\nCc: Greg KH <greg@kroah.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nTested-by: Michael Ellerman <mpe@ellerman.id.au> (ppc32)\nSigned-off-by: Willy Tarreau <w@1wt.eu>\nReviewed-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-11-30 - 07:36:48 \nAuthor: Willy Tarreau"}, {"id": "8dcc0e19dfbd73ad6b3172924d6da8f7f3f8b3b0", "date": "2020-12-03", "metadata": "Message: x86/platform/uv: Fix UV4 hub revision adjustment\n\nCurrently, UV4 is incorrectly identified as UV4A and UV4A as UV5. Hub\nchip starts with revision 1, fix it.\n\n [ bp: Massage commit message. ]\n\nFixes: 647128f1536e (\"x86/platform/uv: Update UV MMRs for UV5\")\nSigned-off-by: Mike Travis <mike.travis@hpe.com>\nSigned-off-by: Borislav Petkov <bp@suse.de>\nReviewed-by: Steve Wahl <steve.wahl@hpe.com>\nAcked-by: Dimitri Sivanich <dimitri.sivanich@hpe.com>\nLink: https://lkml.kernel.org/r/20201203152252.371199-1-mike.travis@hpe.com \nDate: 2020-12-03 - 15:22:52 \nAuthor: Mike Travis"}, {"id": "74a8c816fa8fa7862df870660e9821abb56649fe", "date": "2020-12-03", "metadata": "Message: rtw88: debug: Fix uninitialized memory in debugfs code\n\nThis code does not ensure that the whole buffer is initialized and none\nof the callers check for errors so potentially none of the buffer is\ninitialized.  Add a memset to eliminate this bug.\n\nFixes: e3037485c68e (\"rtw88: new Realtek 802.11ac driver\")\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>\nLink: https://lore.kernel.org/r/X8ilOfVz3pf0T5ec@mwanda \nDate: 2020-12-03 - 08:43:37 \nAuthor: Dan Carpenter"}, {"id": "bf193bfc12dbc3754fc8a6e0e1e3702f1af2f772", "date": "2020-12-03", "metadata": "Message: USB: serial: ch341: sort device-id entries\n\nKeep the device-id entries sorted to make it easier to add new ones in\nthe right spot.\n\nReviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nCc: stable@vger.kernel.org\nSigned-off-by: Johan Hovold <johan@kernel.org> \nDate: 2020-12-03 - 09:11:59 \nAuthor: Johan Hovold"}, {"id": "46ee4abb10a07bd8f8ce910ee6b4ae6a947d7f63", "date": "2020-12-03", "metadata": "Message: USB: serial: ch341: add new Product ID for CH341A\n\nAdd PID for CH340 that's found on a ch341 based Programmer made by keeyees.\nThe specific device that contains the serial converter is described\nhere: http://www.keeyees.com/a/Products/ej/36.html\n\nThe driver works flawlessly as soon as the new PID (0x5512) is added to\nit.\n\nSigned-off-by: Jan-Niklas Burfeind <kernel@aiyionpri.me>\nCc: stable@vger.kernel.org\nSigned-off-by: Johan Hovold <johan@kernel.org> \nDate: 2020-12-03 - 03:03:59 \nAuthor: Jan-Niklas Burfeind"}, {"id": "fc17db8aa4c53cbd2d5469bb0521ea0f0a6dbb27", "date": "2020-11-26", "metadata": "Message: perf/x86/intel: Check PEBS status correctly\n\nThe kernel cannot disambiguate when 2+ PEBS counters overflow at the\nsame time. This is what the comment for this code suggests.  However,\nI see the comparison is done with the unfiltered p->status which is a\ncopy of IA32_PERF_GLOBAL_STATUS at the time of the sample. This\nregister contains more than the PEBS counter overflow bits. It also\nincludes many other bits which could also be set.\n\nSigned-off-by: Namhyung Kim <namhyung@kernel.org>\nSigned-off-by: Stephane Eranian <eranian@google.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nLink: https://lkml.kernel.org/r/20201126110922.317681-2-namhyung@kernel.org \nDate: 2020-11-26 - 11:09:22 \nAuthor: Stephane Eranian"}, {"id": "5debf02131227d39988e44adf5090fb796fa8466", "date": "2020-11-26", "metadata": "Message: perf/x86/intel: Fix a warning on x86_pmu_stop() with large PEBS\n\nThe commit 3966c3feca3f (\"x86/perf/amd: Remove need to check \"running\"\nbit in NMI handler\") introduced this.  It seems x86_pmu_stop can be\ncalled recursively (like when it losts some samples) like below:\n\n  x86_pmu_stop\n    intel_pmu_disable_event  (x86_pmu_disable)\n      intel_pmu_pebs_disable\n        intel_pmu_drain_pebs_nhm  (x86_pmu_drain_pebs_buffer)\n          x86_pmu_stop\n\nWhile commit 35d1ce6bec13 (\"perf/x86/intel/ds: Fix x86_pmu_stop\nwarning for large PEBS\") fixed it for the normal cases, there's\nanother path to call x86_pmu_stop() recursively when a PEBS error was\ndetected (like two or more counters overflowed at the same time).\n\nLike in the Kan's previous fix, we can skip the interrupt accounting\nfor large PEBS, so check the iregs which is set for PMI only.\n\nFixes: 3966c3feca3f (\"x86/perf/amd: Remove need to check \"running\" bit in NMI handler\")\nReported-by: John Sperbeck <jsperbeck@google.com>\nSuggested-by: Peter Zijlstra <peterz@infradead.org>\nSigned-off-by: Namhyung Kim <namhyung@kernel.org>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nLink: https://lkml.kernel.org/r/20201126110922.317681-1-namhyung@kernel.org \nDate: 2020-11-26 - 11:09:21 \nAuthor: Namhyung Kim"}, {"id": "4d916140bf28ff027997144ea1bb4299e1536f87", "date": "2020-11-30", "metadata": "Message: intel_idle: Build fix\n\nBecause CONFIG_ soup.\n\nFixes: 6e1d2bc675bd (\"intel_idle: Fix intel_idle() vs tracing\")\nReported-by: Randy Dunlap <rdunlap@infradead.org>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nLink: https://lkml.kernel.org/r/20201130115402.GO3040@hirez.programming.kicks-ass.net \nDate: 2020-11-30 - 11:54:34 \nAuthor: Peter Zijlstra"}, {"id": "efd6d85a18102241538dd1cc257948a0dbe6fae6", "date": "2020-05-19", "metadata": "Message: drm/amdgpu/vcn3.0: remove old DPG workaround\n\nPort from VCN2.5\nSCRATCH2 is used to keep decode wptr as a workaround\nwhich fix a hardware DPG decode wptr update bug for\nvcn2.5 beforehand.\n\nSigned-off-by: Boyuan Zhang <boyuan.zhang@amd.com>\nReviewed-by: James Zhu <James.Zhu@amd.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com>\nCc: stable@vger.kernel.org # 5.9.x \nDate: 2020-05-19 - 15:38:44 \nAuthor: Boyuan Zhang"}, {"id": "ac2db9488cf21de0be7899c1e5963e5ac0ff351f", "date": "2020-05-10", "metadata": "Message: drm/amdgpu/vcn3.0: stall DPG when WPTR/RPTR reset\n\nPort from VCN2.5\nAdd vcn dpg harware synchronization to fix race condition\nissue between vcn driver and hardware.\n\nSigned-off-by: Boyuan Zhang <boyuan.zhang@amd.com>\nReviewed-by: James Zhu <James.Zhu@amd.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com>\nCc: stable@vger.kernel.org # 5.9.x \nDate: 2020-05-10 - 19:47:03 \nAuthor: Boyuan Zhang"}, {"id": "7e0b367db85ef7b91399006253759a024eab7653", "date": "2020-11-12", "metadata": "Message: drm/amd/display: Init clock value by current vbios CLKs\n\n[Why]\nWhile booting into OS, driver updates DPP/DISP CLKs.\nBut init clock value is zero which is invalid.\n\n[How]\nGet current clocks value to update init clocks.\nTo avoid underflow.\n\nSigned-off-by: Brandon Syu <Brandon.Syu@amd.com>\nReviewed-by: Tony Cheng <Tony.Cheng@amd.com>\nAcked-by: Aurabindo Pillai <aurabindo.pillai@amd.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com> \nDate: 2020-11-12 - 07:35:52 \nAuthor: Brandon Syu"}, {"id": "acab02c1af43d3a9051524579b1c3dcfbfa5479d", "date": "2020-11-27", "metadata": "Message: drm/amdgpu/pm/smu11: Fix fan set speed bug\n\nFix fan set speed calculation.\n\nSuggested-by: Kenneth Feng <kenneth.feng@amd.com>\nSigned-off-by: Arunpravin <Arunpravin.PaneerSelvam@amd.com>\nAcked-by: Alex Deucher <alexander.deucher@amd.com>\nReviewed-by: Kenneth Feng <kenneth.feng@amd.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com>\nCc: stable@vger.kernel.org \nDate: 2020-11-27 - 16:10:24 \nAuthor: Arunpravin"}, {"id": "832e09798c261cf58de3a68cfcc6556408c16a5a", "date": "2020-12-02", "metadata": "Message: vxlan: fix error return code in __vxlan_dev_create()\n\nFix to return a negative error code from the error handling\ncase instead of 0, as done elsewhere in this function.\n\nFixes: 0ce1822c2a08 (\"vxlan: add adjacent link to limit depth level\")\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>\nLink: https://lore.kernel.org/r/1606903122-2098-1-git-send-email-zhangchangzhong@huawei.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-02 - 09:58:42 \nAuthor: Zhang Changzhong"}, {"id": "aba84871bd4f52c4dfcf3ad5d4501a6c9d2de90e", "date": "2020-12-02", "metadata": "Message: net: pasemi: fix error return code in pasemi_mac_open()\n\nFix to return a negative error code from the error handling\ncase instead of 0, as done elsewhere in this function.\n\nFixes: 72b05b9940f0 (\"pasemi_mac: RX/TX ring management cleanup\")\nFixes: 8d636d8bc5ff (\"pasemi_mac: jumbo frame support\")\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>\nLink: https://lore.kernel.org/r/1606903035-1838-1-git-send-email-zhangchangzhong@huawei.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-02 - 09:57:15 \nAuthor: Zhang Changzhong"}, {"id": "ff9924897f8bfed82e61894b373ab9d2dfea5b10", "date": "2020-12-02", "metadata": "Message: cxgb3: fix error return code in t3_sge_alloc_qset()\n\nFix to return a negative error code from the error handling\ncase instead of 0, as done elsewhere in this function.\n\nFixes: b1fb1f280d09 (\"cxgb3 - Fix dma mapping error path\")\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>\nAcked-by: Raju Rangoju <rajur@chelsio.com>\nLink: https://lore.kernel.org/r/1606902965-1646-1-git-send-email-zhangchangzhong@huawei.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-02 - 09:56:05 \nAuthor: Zhang Changzhong"}, {"id": "aac06646aa85772eed49931d721e917209cabb51", "date": "2020-12-03", "metadata": "Message: Merge tag 'drm/tegra/for-5.10-rc7' of ssh://git.freedesktop.org/git/tegra/linux into drm-fixes\n\ndrm/tegra: Fixes for v5.10-rc7\n\nThis is a set of small fixes for various issues found during the last\ncouple of weeks.\n\nSigned-off-by: Dave Airlie <airlied@redhat.com>\n\nFrom: Thierry Reding <thierry.reding@gmail.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201127145324.125776-1-thierry.reding@gmail.com \nDate: 2020-12-03 - 01:34:06 \nAuthor: Dave Airlie"}, {"id": "6ee50c8e262a0f0693dad264c3c99e30e6442a56", "date": "2020-12-01", "metadata": "Message: net/x25: prevent a couple of overflows\n\nThe .x25_addr[] address comes from the user and is not necessarily\nNUL terminated.  This leads to a couple problems.  The first problem is\nthat the strlen() in x25_bind() can read beyond the end of the buffer.\n\nThe second problem is more subtle and could result in memory corruption.\nThe call tree is:\n  x25_connect()\n  --> x25_write_internal()\n      --> x25_addr_aton()\n\nThe .x25_addr[] buffers are copied to the \"addresses\" buffer from\nx25_write_internal() so it will lead to stack corruption.\n\nVerify that the strings are NUL terminated and return -EINVAL if they\nare not.\n\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nFixes: a9288525d2ae (\"X25: Dont let x25_bind use addresses containing characters\")\nReported-by: \"kiyin(\u5c39\u4eae)\" <kiyin@tencent.com>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nAcked-by: Martin Schiller <ms@dev.tdt.de>\nLink: https://lore.kernel.org/r/X8ZeAKm8FnFpN//B@mwanda\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-01 - 15:15:12 \nAuthor: Dan Carpenter"}, {"id": "34816d20f173a90389c8a7e641166d8ea9dce70a", "date": "2020-12-03", "metadata": "Message: Merge tag 'gfs2-v5.10-rc5-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/gfs2/linux-gfs2\n\nPull gfs2 fixes from Andreas Gruenbacher:\n \"Various gfs2 fixes\"\n\n* tag 'gfs2-v5.10-rc5-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/gfs2/linux-gfs2:\n  gfs2: Fix deadlock between gfs2_{create_inode,inode_lookup} and delete_work_func\n  gfs2: Upgrade shared glocks for atime updates\n  gfs2: Don't freeze the file system during unmount\n  gfs2: check for empty rgrp tree in gfs2_ri_update\n  gfs2: set lockdep subclass for iopen glocks\n  gfs2: Fix deadlock dumping resource group glocks \nDate: 2020-12-03 - 01:25:23 \nAuthor: Linus Torvalds"}, {"id": "ccc9e67ab26feda7e62749bb54c05d7abe07dca9", "date": "2020-11-25", "metadata": "Message: drm/i915/display: Defer initial modeset until after GGTT is initialised\n\nPrior to sanitizing the GGTT, the only operations allowed in\nintel_display_init_nogem() are those to reserve the preallocated (and\nactive) regions in the GGTT leftover from the BIOS. Trying to allocate a\nGGTT vma (such as intel_pin_and_fence_fb_obj during the initial modeset)\nmay then conflict with other preallocated regions that have not yet been\nprotected.\n\nMove the initial modesetting from the end of init_nogem to the beginning\nof init so that any vma pinning (either framebuffers or DSB, for example),\nis after the GGTT is ready to handle it.\n\nThis will prevent the DSB object from being destroyed too early:\n\n[   53.449241] BUG: KASAN: use-after-free in i915_init_ggtt+0x324/0x9e0 [i915]\n[   53.449309] Read of size 8 at addr ffff88811b1e8070 by task systemd-udevd/345\n\n[   53.449399] CPU: 1 PID: 345 Comm: systemd-udevd Tainted: G        W         5.10.0-rc5+ #12\n[   53.449409] Call Trace:\n[   53.449418]  dump_stack+0x9a/0xcc\n[   53.449558]  ? i915_init_ggtt+0x324/0x9e0 [i915]\n[   53.449565]  print_address_description.constprop.0+0x3e/0x60\n[   53.449577]  ? _raw_spin_lock_irqsave+0x4e/0x50\n[   53.449718]  ? i915_init_ggtt+0x324/0x9e0 [i915]\n[   53.449849]  ? i915_init_ggtt+0x324/0x9e0 [i915]\n[   53.449857]  kasan_report.cold+0x1f/0x37\n[   53.449993]  ? i915_init_ggtt+0x324/0x9e0 [i915]\n[   53.450130]  i915_init_ggtt+0x324/0x9e0 [i915]\n[   53.450273]  ? i915_ggtt_suspend+0x1f0/0x1f0 [i915]\n[   53.450281]  ? static_obj+0x69/0x80\n[   53.450289]  ? lockdep_init_map_waits+0xa9/0x310\n[   53.450431]  ? intel_wopcm_init+0x96/0x3d0 [i915]\n[   53.450581]  ? i915_gem_init+0x75/0x2d0 [i915]\n[   53.450720]  i915_gem_init+0x75/0x2d0 [i915]\n[   53.450852]  i915_driver_probe+0x8c2/0x1210 [i915]\n[   53.450993]  ? i915_pm_prepare+0x630/0x630 [i915]\n[   53.451006]  ? check_chain_key+0x1e7/0x2e0\n[   53.451025]  ? __pm_runtime_resume+0x58/0xb0\n[   53.451157]  i915_pci_probe+0xa6/0x2b0 [i915]\n[   53.451285]  ? i915_pci_remove+0x40/0x40 [i915]\n[   53.451295]  ? lockdep_hardirqs_on_prepare+0x124/0x230\n[   53.451302]  ? _raw_spin_unlock_irqrestore+0x42/0x50\n[   53.451309]  ? lockdep_hardirqs_on+0xbf/0x130\n[   53.451315]  ? preempt_count_sub+0xf/0xb0\n[   53.451321]  ? _raw_spin_unlock_irqrestore+0x2f/0x50\n[   53.451335]  pci_device_probe+0xf9/0x190\n[   53.451350]  really_probe+0x17f/0x5b0\n[   53.451365]  driver_probe_device+0x13a/0x1c0\n[   53.451376]  device_driver_attach+0x82/0x90\n[   53.451386]  ? device_driver_attach+0x90/0x90\n[   53.451391]  __driver_attach+0xab/0x190\n[   53.451401]  ? device_driver_attach+0x90/0x90\n[   53.451407]  bus_for_each_dev+0xe4/0x140\n[   53.451414]  ? subsys_dev_iter_exit+0x10/0x10\n[   53.451423]  ? __list_add_valid+0x2b/0xa0\n[   53.451440]  bus_add_driver+0x227/0x2e0\n[   53.451454]  driver_register+0xd3/0x150\n[   53.451585]  i915_init+0x92/0xac [i915]\n[   53.451592]  ? 0xffffffffa0a20000\n[   53.451598]  do_one_initcall+0xb6/0x3b0\n[   53.451606]  ? trace_event_raw_event_initcall_finish+0x150/0x150\n[   53.451614]  ? __kasan_kmalloc.constprop.0+0xc2/0xd0\n[   53.451627]  ? kmem_cache_alloc_trace+0x4a4/0x8e0\n[   53.451634]  ? kasan_unpoison_shadow+0x33/0x40\n[   53.451649]  do_init_module+0xf8/0x350\n[   53.451662]  load_module+0x43de/0x47f0\n[   53.451716]  ? module_frob_arch_sections+0x20/0x20\n[   53.451731]  ? rw_verify_area+0x5f/0x130\n[   53.451780]  ? __do_sys_finit_module+0x10d/0x1a0\n[   53.451785]  __do_sys_finit_module+0x10d/0x1a0\n[   53.451792]  ? __ia32_sys_init_module+0x40/0x40\n[   53.451800]  ? seccomp_do_user_notification.isra.0+0x5c0/0x5c0\n[   53.451829]  ? rcu_read_lock_bh_held+0xb0/0xb0\n[   53.451835]  ? mark_held_locks+0x24/0x90\n[   53.451856]  do_syscall_64+0x33/0x80\n[   53.451863]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n[   53.451868] RIP: 0033:0x7fde09b4470d\n[   53.451875] Code: 00 c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 53 f7 0c 00 f7 d8 64 89 01 48\n[   53.451880] RSP: 002b:00007ffd6abc1718 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\n[   53.451890] RAX: ffffffffffffffda RBX: 000056444e528150 RCX: 00007fde09b4470d\n[   53.451895] RDX: 0000000000000000 RSI: 00007fde09a21ded RDI: 000000000000000f\n[   53.451899] RBP: 0000000000020000 R08: 0000000000000000 R09: 0000000000000000\n[   53.451904] R10: 000000000000000f R11: 0000000000000246 R12: 00007fde09a21ded\n[   53.451909] R13: 0000000000000000 R14: 000056444e329200 R15: 000056444e528150\n\n[   53.451957] Allocated by task 345:\n[   53.451995]  kasan_save_stack+0x1b/0x40\n[   53.452001]  __kasan_kmalloc.constprop.0+0xc2/0xd0\n[   53.452006]  kmem_cache_alloc+0x1cd/0x8d0\n[   53.452146]  i915_vma_instance+0x126/0xb70 [i915]\n[   53.452304]  i915_gem_object_ggtt_pin_ww+0x222/0x3f0 [i915]\n[   53.452446]  intel_dsb_prepare+0x14f/0x230 [i915]\n[   53.452588]  intel_atomic_commit+0x183/0x690 [i915]\n[   53.452730]  intel_initial_commit+0x2bc/0x2f0 [i915]\n[   53.452871]  intel_modeset_init_nogem+0xa02/0x2af0 [i915]\n[   53.452995]  i915_driver_probe+0x8af/0x1210 [i915]\n[   53.453120]  i915_pci_probe+0xa6/0x2b0 [i915]\n[   53.453125]  pci_device_probe+0xf9/0x190\n[   53.453131]  really_probe+0x17f/0x5b0\n[   53.453136]  driver_probe_device+0x13a/0x1c0\n[   53.453142]  device_driver_attach+0x82/0x90\n[   53.453148]  __driver_attach+0xab/0x190\n[   53.453153]  bus_for_each_dev+0xe4/0x140\n[   53.453158]  bus_add_driver+0x227/0x2e0\n[   53.453164]  driver_register+0xd3/0x150\n[   53.453286]  i915_init+0x92/0xac [i915]\n[   53.453292]  do_one_initcall+0xb6/0x3b0\n[   53.453297]  do_init_module+0xf8/0x350\n[   53.453302]  load_module+0x43de/0x47f0\n[   53.453307]  __do_sys_finit_module+0x10d/0x1a0\n[   53.453312]  do_syscall_64+0x33/0x80\n[   53.453318]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\n[   53.453345] Freed by task 82:\n[   53.453379]  kasan_save_stack+0x1b/0x40\n[   53.453384]  kasan_set_track+0x1c/0x30\n[   53.453389]  kasan_set_free_info+0x1b/0x30\n[   53.453394]  __kasan_slab_free+0x112/0x160\n[   53.453399]  kmem_cache_free+0xb2/0x3f0\n[   53.453536]  i915_gem_flush_free_objects+0x31a/0x3b0 [i915]\n[   53.453542]  process_one_work+0x519/0x9f0\n[   53.453547]  worker_thread+0x75/0x5c0\n[   53.453552]  kthread+0x1da/0x230\n[   53.453557]  ret_from_fork+0x22/0x30\n\n[   53.453584] The buggy address belongs to the object at ffff88811b1e8040\n                which belongs to the cache i915_vma of size 968\n[   53.453692] The buggy address is located 48 bytes inside of\n                968-byte region [ffff88811b1e8040, ffff88811b1e8408)\n[   53.453792] The buggy address belongs to the page:\n[   53.453842] page:00000000b35f7048 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff88811b1ef940 pfn:0x11b1e8\n[   53.453847] head:00000000b35f7048 order:3 compound_mapcount:0 compound_pincount:0\n[   53.453853] flags: 0x8000000000010200(slab|head)\n[   53.453860] raw: 8000000000010200 ffff888115596248 ffff888115596248 ffff8881155b6340\n[   53.453866] raw: ffff88811b1ef940 0000000000170001 00000001ffffffff 0000000000000000\n[   53.453870] page dumped because: kasan: bad access detected\n\n[   53.453895] Memory state around the buggy address:\n[   53.453944]  ffff88811b1e7f00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[   53.454011]  ffff88811b1e7f80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[   53.454079] >ffff88811b1e8000: fc fc fc fc fc fc fc fc fa fb fb fb fb fb fb fb\n[   53.454146]                                                              ^\n[   53.454211]  ffff88811b1e8080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[   53.454279]  ffff88811b1e8100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[   53.454347] ==================================================================\n[   53.454414] Disabling lock debugging due to kernel taint\n[   53.454434] general protection fault, probably for non-canonical address 0xdead0000000000d0: 0000 [#1] PREEMPT SMP KASAN PTI\n[   53.454446] CPU: 1 PID: 345 Comm: systemd-udevd Tainted: G    B   W         5.10.0-rc5+ #12\n[   53.454592] RIP: 0010:i915_init_ggtt+0x26f/0x9e0 [i915]\n[   53.454602] Code: 89 8d 48 ff ff ff 4c 8d 60 d0 49 39 c7 0f 84 37 02 00 00 4c 89 b5 40 ff ff ff 4d 8d bc 24 90 00 00 00 4c 89 ff e8 c1 97 f8 e0 <49> 83 bc 24 90 00 00 00 00 0f 84 0f 02 00 00 49 8d 7c 24 08 e8 a8\n[   53.454618] RSP: 0018:ffff88812247f430 EFLAGS: 00010286\n[   53.454625] RAX: 0000000000000000 RBX: ffff888136440000 RCX: ffffffffa03fb78f\n[   53.454633] RDX: 0000000000000000 RSI: 0000000000000008 RDI: dead000000000160\n[   53.454641] RBP: ffff88812247f500 R08: ffffffff8113589f R09: 0000000000000000\n[   53.454648] R10: ffffffff83063843 R11: fffffbfff060c708 R12: dead0000000000d0\n[   53.454656] R13: ffff888136449ba0 R14: 0000000000002000 R15: dead000000000160\n[   53.454664] FS:  00007fde095c4880(0000) GS:ffff88840c880000(0000) knlGS:0000000000000000\n[   53.454672] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   53.454679] CR2: 00007fef132b4f28 CR3: 000000012245c002 CR4: 00000000003706e0\n[   53.454686] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   53.454693] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[   53.454700] Call Trace:\n[   53.454833]  ? i915_ggtt_suspend+0x1f0/0x1f0 [i915]\n\nReported-by: Matthew Auld <matthew.auld@intel.com>\nFixes: afeda4f3b1c8 (\"drm/i915/dsb: Pre allocate and late cleanup of cmd buffer\")\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: Ville Syrj\u00e4l\u00e4 <ville.syrjala@linux.intel.com>\nCc: Matthew Auld <matthew.auld@intel.com>\nCc: Lucas De Marchi <lucas.demarchi@intel.com>\nTested-by: Matthew Auld <matthew.auld@intel.com>\nReviewed-by: Matthew Auld <matthew.auld@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201125193032.29282-1-chris@chris-wilson.co.uk\n(cherry picked from commit b3bf99daaee96a141536ce5c60a0d6dba6ec1d23)\nSigned-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com> \nDate: 2020-11-25 - 19:30:32 \nAuthor: Chris Wilson"}, {"id": "37eade64eb11c6d548c9a7030ccc655decfb8fa0", "date": "2020-11-06", "metadata": "Message: drm/i915/display: return earlier from intel_modeset_init() without display\n\n!HAS_DISPLAY() implies !HAS_OVERLAY(), skipping overlay setup anyway, so\nreturn earlier from intel_modeset_init() for clarity.\n\nCc: Ville Syrj\u00e4l\u00e4 <ville.syrjala@linux.intel.com>\nSigned-off-by: Jani Nikula <jani.nikula@intel.com>\nSigned-off-by: Lucas De Marchi <lucas.demarchi@intel.com>\nReviewed-by: Jos\u00e9 Roberto de Souza <jose.souza@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201106225531.920641-4-lucas.demarchi@intel.com\n(cherry picked from commit 71c8415d0daa78ef1295743d0e11ba0214d0a9b9)\nSigned-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com> \nDate: 2020-11-06 - 22:55:27 \nAuthor: Jani Nikula"}, {"id": "aff76ab795364569b1cac58c1d0bc7df956e3899", "date": "2020-11-24", "metadata": "Message: drm/i915/gt: Limit frequency drop to RPe on parking\n\nWe treat idling the GT (intel_rps_park) as a downclock event, and reduce\nthe frequency we intend to restart the GT with. Since the two workloads\nare likely related (e.g. a compositor rendering every 16ms), we want to\ncarry the frequency and load information from across the idling.\nHowever, we do also need to update the frequencies so that workloads\nthat run for less than 1ms are autotuned by RPS (otherwise we leave\ncompositors running at max clocks, draining excess power). Conversely,\nif we try to run too slowly, the next workload has to run longer. Since\nthere is a hysteresis in the power graph, below a certain frequency\nrunning a short workload for longer consumes more energy than running it\nslightly higher for less time. The exact balance point is unknown\nbeforehand, but measurements with 30fps media playback indicate that RPe\nis a better choice.\n\nReported-by: Edward Baker <edward.baker@intel.com>\nTested-by: Edward Baker <edward.baker@intel.com>\nFixes: 043cd2d14ede (\"drm/i915/gt: Leave rps->cur_freq on unpark\")\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: Edward Baker <edward.baker@intel.com>\nCc: Andi Shyti <andi.shyti@intel.com>\nCc: Lyude Paul <lyude@redhat.com>\nCc: <stable@vger.kernel.org> # v5.8+\nReviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>\nReviewed-by: Andi Shyti <andi.shyti@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201124183521.28623-1-chris@chris-wilson.co.uk\n(cherry picked from commit f7ed83cc1925f0b8ce2515044d674354035c3af9)\nSigned-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com> \nDate: 2020-11-24 - 18:35:21 \nAuthor: Chris Wilson"}, {"id": "78b2eb8a1f10f366681acad8d21c974c1f66791a", "date": "2020-11-27", "metadata": "Message: drm/i915/gt: Retain default context state across shrinking\n\nAs we use a shmemfs file to hold the context state, when not in use it\nmay be swapped out, such as across suspend. Since we wrote into the\nshmemfs without marking the pages as dirty, the contents may be dropped\ninstead of being written back to swap. On re-using the shmemfs file,\nsuch as creating a new context after resume, the contents of that file\nwere likely garbage and so the new context could then hang the GPU.\n\nSimply mark the page as being written when copying into the shmemfs\nfile, and it the new contents will be retained across swapout.\n\nFixes: be1cb55a07bf (\"drm/i915/gt: Keep a no-frills swappable copy of the default context state\")\nCc: Sudeep Dutt <sudeep.dutt@intel.com>\nCc: Matthew Auld <matthew.auld@intel.com>\nCc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nCc: Ramalingam C <ramalingam.c@intel.com>\nSigned-off-by: CQ Tang <cq.tang@intel.com>\nSigned-off-by: Venkata Ramana Nayana <venkata.ramana.nayana@intel.com>\nReviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: <stable@vger.kernel.org> # v5.8+\nLink: https://patchwork.freedesktop.org/patch/msgid/20201127120718.454037-161-matthew.auld@intel.com\n(cherry picked from commit a9d71f76ccfd309f3bd5f7c9b60e91a4decae792)\nSigned-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com> \nDate: 2020-11-27 - 12:07:16 \nAuthor: Venkata Ramana Nayana"}, {"id": "2bfdf302465a5eab941e551e2869a96bb473f66f", "date": "2020-11-26", "metadata": "Message: drm/i915/gt: Split the breadcrumb spinlock between global and contexts\n\nAs we funnel more and more contexts into the breadcrumbs on an engine,\nthe hold time of b->irq_lock grows. As we may then contend with the\nb->irq_lock during request submission, this increases the burden upon\nthe engine->active.lock and so directly impacts both our execution\nlatency and client latency. If we split the b->irq_lock by introducing a\nper-context spinlock to manage the signalers within a context, we then\nonly need the b->irq_lock for enabling/disabling the interrupt and can\navoid taking the lock for walking the list of contexts within the signal\nworker. Even with the current setup, this greatly reduces the number of\ntimes we have to take and fight for b->irq_lock.\n\nFurthermore, this closes the race between enabling the signaling context\nwhile it is in the process of being signaled and removed:\n\n<4>[  416.208555] list_add corruption. prev->next should be next (ffff8881951d5910), but was dead000000000100. (prev=ffff8882781bb870).\n<4>[  416.208573] WARNING: CPU: 7 PID: 0 at lib/list_debug.c:28 __list_add_valid+0x4d/0x70\n<4>[  416.208575] Modules linked in: i915(+) vgem snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_codec_generic ledtrig_audio mei_hdcp x86_pkg_temp_thermal coretemp ax88179_178a usbnet mii crct10dif_pclmul snd_intel_dspcfg crc32_pclmul snd_hda_codec snd_hwdep ghash_clmulni_intel snd_hda_core e1000e snd_pcm ptp pps_core mei_me mei prime_numbers intel_lpss_pci [last unloaded: i915]\n<4>[  416.208611] CPU: 7 PID: 0 Comm: swapper/7 Tainted: G     U            5.8.0-CI-CI_DRM_8852+ #1\n<4>[  416.208614] Hardware name: Intel Corporation Ice Lake Client Platform/IceLake Y LPDDR4x T4 RVP TLC, BIOS ICLSFWR1.R00.3212.A00.1905212112 05/21/2019\n<4>[  416.208627] RIP: 0010:__list_add_valid+0x4d/0x70\n<4>[  416.208631] Code: c3 48 89 d1 48 c7 c7 60 18 33 82 48 89 c2 e8 ea e0 b6 ff 0f 0b 31 c0 c3 48 89 c1 4c 89 c6 48 c7 c7 b0 18 33 82 e8 d3 e0 b6 ff <0f> 0b 31 c0 c3 48 89 f2 4c 89 c1 48 89 fe 48 c7 c7 00 19 33 82 e8\n<4>[  416.208633] RSP: 0018:ffffc90000280e18 EFLAGS: 00010086\n<4>[  416.208636] RAX: 0000000000000000 RBX: ffff888250a44880 RCX: 0000000000000105\n<4>[  416.208639] RDX: 0000000000000105 RSI: ffffffff82320c5b RDI: 00000000ffffffff\n<4>[  416.208641] RBP: ffff8882781bb870 R08: 0000000000000000 R09: 0000000000000001\n<4>[  416.208643] R10: 00000000054d2957 R11: 000000006abbd991 R12: ffff8881951d58c8\n<4>[  416.208646] R13: ffff888286073880 R14: ffff888286073848 R15: ffff8881951d5910\n<4>[  416.208669] FS:  0000000000000000(0000) GS:ffff88829c180000(0000) knlGS:0000000000000000\n<4>[  416.208671] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n<4>[  416.208673] CR2: 0000556231326c48 CR3: 0000000005610001 CR4: 0000000000760ee0\n<4>[  416.208675] PKRU: 55555554\n<4>[  416.208677] Call Trace:\n<4>[  416.208679]  <IRQ>\n<4>[  416.208751]  i915_request_enable_breadcrumb+0x278/0x400 [i915]\n<4>[  416.208839]  __i915_request_submit+0xca/0x2a0 [i915]\n<4>[  416.208892]  __execlists_submission_tasklet+0x480/0x1830 [i915]\n<4>[  416.208942]  execlists_submission_tasklet+0xc4/0x130 [i915]\n<4>[  416.208947]  tasklet_action_common.isra.17+0x6c/0x1c0\n<4>[  416.208954]  __do_softirq+0xdf/0x498\n<4>[  416.208960]  ? handle_fasteoi_irq+0x150/0x150\n<4>[  416.208964]  asm_call_on_stack+0xf/0x20\n<4>[  416.208966]  </IRQ>\n<4>[  416.208969]  do_softirq_own_stack+0xa1/0xc0\n<4>[  416.208972]  irq_exit_rcu+0xb5/0xc0\n<4>[  416.208976]  common_interrupt+0xf7/0x260\n<4>[  416.208980]  asm_common_interrupt+0x1e/0x40\n<4>[  416.208985] RIP: 0010:cpuidle_enter_state+0xb6/0x410\n<4>[  416.208987] Code: 00 31 ff e8 9c 3e 89 ff 80 7c 24 0b 00 74 12 9c 58 f6 c4 02 0f 85 31 03 00 00 31 ff e8 e3 6c 90 ff e8 fe a4 94 ff fb 45 85 ed <0f> 88 c7 02 00 00 49 63 c5 4c 2b 24 24 48 8d 14 40 48 8d 14 90 48\n<4>[  416.208989] RSP: 0018:ffffc90000143e70 EFLAGS: 00000206\n<4>[  416.208991] RAX: 0000000000000007 RBX: ffffe8ffffda8070 RCX: 0000000000000000\n<4>[  416.208993] RDX: 0000000000000000 RSI: ffffffff8238b4ee RDI: ffffffff8233184f\n<4>[  416.208995] RBP: ffffffff826b4e00 R08: 0000000000000000 R09: 0000000000000000\n<4>[  416.208997] R10: 0000000000000001 R11: 0000000000000000 R12: 00000060e7f24a8f\n<4>[  416.208998] R13: 0000000000000003 R14: 0000000000000003 R15: 0000000000000003\n<4>[  416.209012]  cpuidle_enter+0x24/0x40\n<4>[  416.209016]  do_idle+0x22f/0x2d0\n<4>[  416.209022]  cpu_startup_entry+0x14/0x20\n<4>[  416.209025]  start_secondary+0x158/0x1a0\n<4>[  416.209030]  secondary_startup_64+0xa4/0xb0\n<4>[  416.209039] irq event stamp: 10186977\n<4>[  416.209042] hardirqs last  enabled at (10186976): [<ffffffff810b9363>] tasklet_action_common.isra.17+0xe3/0x1c0\n<4>[  416.209044] hardirqs last disabled at (10186977): [<ffffffff81a5e5ed>] _raw_spin_lock_irqsave+0xd/0x50\n<4>[  416.209047] softirqs last  enabled at (10186968): [<ffffffff810b9a1a>] irq_enter_rcu+0x6a/0x70\n<4>[  416.209049] softirqs last disabled at (10186969): [<ffffffff81c00f4f>] asm_call_on_stack+0xf/0x20\n\n<4>[  416.209317] list_del corruption, ffff8882781bb870->next is LIST_POISON1 (dead000000000100)\n<4>[  416.209317] WARNING: CPU: 7 PID: 46 at lib/list_debug.c:47 __list_del_entry_valid+0x4e/0x90\n<4>[  416.209317] Modules linked in: i915(+) vgem snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_codec_generic ledtrig_audio mei_hdcp x86_pkg_temp_thermal coretemp ax88179_178a usbnet mii crct10dif_pclmul snd_intel_dspcfg crc32_pclmul snd_hda_codec snd_hwdep ghash_clmulni_intel snd_hda_core e1000e snd_pcm ptp pps_core mei_me mei prime_numbers intel_lpss_pci [last unloaded: i915]\n<4>[  416.209317] CPU: 7 PID: 46 Comm: ksoftirqd/7 Tainted: G     U  W         5.8.0-CI-CI_DRM_8852+ #1\n<4>[  416.209317] Hardware name: Intel Corporation Ice Lake Client Platform/IceLake Y LPDDR4x T4 RVP TLC, BIOS ICLSFWR1.R00.3212.A00.1905212112 05/21/2019\n<4>[  416.209317] RIP: 0010:__list_del_entry_valid+0x4e/0x90\n<4>[  416.209317] Code: 2e 48 8b 32 48 39 fe 75 3a 48 8b 50 08 48 39 f2 75 48 b8 01 00 00 00 c3 48 89 fe 48 89 c2 48 c7 c7 38 19 33 82 e8 62 e0 b6 ff <0f> 0b 31 c0 c3 48 89 fe 48 c7 c7 70 19 33 82 e8 4e e0 b6 ff 0f 0b\n<4>[  416.209317] RSP: 0018:ffffc90000280de8 EFLAGS: 00010086\n<4>[  416.209317] RAX: 0000000000000000 RBX: ffff8882781bb848 RCX: 0000000000010104\n<4>[  416.209317] RDX: 0000000000010104 RSI: ffffffff8238b4ee RDI: 00000000ffffffff\n<4>[  416.209317] RBP: ffff8882781bb880 R08: 0000000000000000 R09: 0000000000000001\n<4>[  416.209317] R10: 000000009fb6666e R11: 00000000feca9427 R12: ffffc90000280e18\n<4>[  416.209317] R13: ffff8881951d5930 R14: dead0000000000d8 R15: ffff8882781bb880\n<4>[  416.209317] FS:  0000000000000000(0000) GS:ffff88829c180000(0000) knlGS:0000000000000000\n<4>[  416.209317] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n<4>[  416.209317] CR2: 0000556231326c48 CR3: 0000000005610001 CR4: 0000000000760ee0\n<4>[  416.209317] PKRU: 55555554\n<4>[  416.209317] Call Trace:\n<4>[  416.209317]  <IRQ>\n<4>[  416.209317]  remove_signaling_context.isra.13+0xd/0x70 [i915]\n<4>[  416.209513]  signal_irq_work+0x1f7/0x4b0 [i915]\n\nThis is caused by virtual engines where although we take the breadcrumb\nlock on each of the active engines, they may be different engines on\ndifferent requests, It turns out that the b->irq_lock was not a\nsufficient proxy for the engine->active.lock in the case of more than\none request, so introduce an explicit lock around ce->signals.\n\nv2: ce->signal_lock is acquired with only RCU protection and so must be\ntreated carefully and not cleared during reallocation. We also then need\nto confirm that the ce we lock is the same as we found in the breadcrumb\nlist.\n\nCloses: https://gitlab.freedesktop.org/drm/intel/-/issues/2276\nFixes: c18636f76344 (\"drm/i915: Remove requirement for holding i915_request.lock for breadcrumbs\")\nFixes: 2854d866327a (\"drm/i915/gt: Replace intel_engine_transfer_stale_breadcrumbs\")\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nReviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201126140407.31952-4-chris@chris-wilson.co.uk\n(cherry picked from commit c744d50363b714783bbc88d986cc16def13710f7)\nSigned-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com> \nDate: 2020-11-26 - 14:04:06 \nAuthor: Chris Wilson"}, {"id": "9261a1db80bc81dd445cd6dcfb466b632ad9faa8", "date": "2020-11-26", "metadata": "Message: drm/i915/gt: Protect context lifetime with RCU\n\nAllow a brief period for continued access to a dead intel_context by\ndeferring the release of the struct until after an RCU grace period.\nAs we are using a dedicated slab cache for the contexts, we can defer\nthe release of the slab pages via RCU, with the caveat that individual\nstructs may be reused from the freelist within an RCU grace period. To\nhandle that, we have to avoid clearing members of the zombie struct.\n\nThis is required for a later patch to handle locking around virtual\nrequests in the signaler, as those requests may want to move between\nengines and be destroyed while we are holding b->irq_lock on a physical\nengine.\n\nv2: Drop mutex_reinit(), if we never mark the mutex as destroyed we\ndon't need to reset the debug code, at the loss of having the mutex\ndebug code spot us attempting to destroy a locked mutex.\nv3: As the intended use will remain strongly referenced counted, with\nvery little inflight access across reuse, drop the ctor.\nv4: Drop the unrequired change to remove the temporary reference around\ndropping the active context, and add back some more missing ctor\noperations.\nv5: The ctor is back. Tvrtko spotted that ce->signal_lock [introduced\nlater] maybe accessed under RCU and so needs special care not to be\nreinitialised.\nv6: Don't mix SLAB_TYPESAFE_BY_RCU and RCU list iteration.\n\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nReviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201126140407.31952-3-chris@chris-wilson.co.uk\n(cherry picked from commit 14d1eaf08845c534963c83f754afe0cb14cb2512)\nSigned-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com> \nDate: 2020-11-26 - 14:04:05 \nAuthor: Chris Wilson"}, {"id": "61e6fe59ede155881a622f5901551b1cc8748f6a", "date": "2020-10-09", "metadata": "Message: i2c: imx: Don't generate STOP condition if arbitration has been lost\n\nIf arbitration is lost, the master automatically changes to slave mode.\nI2SR_IBB may or may not be reset by hardware. Raising a STOP condition\nby resetting I2CR_MSTA has no effect and will not clear I2SR_IBB.\n\nSo calling i2c_imx_bus_busy() is not required and would busy-wait until\ntimeout.\n\nSigned-off-by: Christian Eggers <ceggers@arri.de>\nTested (not extensively) on Vybrid VF500 (Toradex VF50):\nTested-by: Krzysztof Kozlowski <krzk@kernel.org>\nAcked-by: Oleksij Rempel <o.rempel@pengutronix.de>\nCc: stable@vger.kernel.org # Requires trivial backporting, simple remove\n                           # the 3rd argument from the calls to\n                           # i2c_imx_bus_busy().\nSigned-off-by: Wolfram Sang <wsa@kernel.org> \nDate: 2020-10-09 - 11:03:20 \nAuthor: Christian Eggers"}, {"id": "1de67a3dee7a279ebe4d892b359fe3696938ec15", "date": "2020-10-09", "metadata": "Message: i2c: imx: Check for I2SR_IAL after every byte\n\nArbitration Lost (IAL) can happen after every single byte transfer. If\narbitration is lost, the I2C hardware will autonomously switch from\nmaster mode to slave. If a transfer is not aborted in this state,\nconsecutive transfers will not be executed by the hardware and will\ntimeout.\n\nSigned-off-by: Christian Eggers <ceggers@arri.de>\nTested (not extensively) on Vybrid VF500 (Toradex VF50):\nTested-by: Krzysztof Kozlowski <krzk@kernel.org>\nAcked-by: Oleksij Rempel <o.rempel@pengutronix.de>\nCc: stable@vger.kernel.org\nSigned-off-by: Wolfram Sang <wsa@kernel.org> \nDate: 2020-10-09 - 11:03:19 \nAuthor: Christian Eggers"}, {"id": "384a9565f70a876c2e78e58c5ca0bbf0547e4f6d", "date": "2020-10-09", "metadata": "Message: i2c: imx: Fix reset of I2SR_IAL flag\n\nAccording to the \"VFxxx Controller Reference Manual\" (and the comment\nblock starting at line 97), Vybrid requires writing a one for clearing\nan interrupt flag. Syncing the method for clearing I2SR_IIF in\ni2c_imx_isr().\n\nSigned-off-by: Christian Eggers <ceggers@arri.de>\nFixes: 4b775022f6fd (\"i2c: imx: add struct to hold more configurable quirks\")\nReviewed-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nAcked-by: Oleksij Rempel <o.rempel@pengutronix.de>\nCc: stable@vger.kernel.org\nSigned-off-by: Wolfram Sang <wsa@kernel.org> \nDate: 2020-10-09 - 11:03:18 \nAuthor: Christian Eggers"}, {"id": "3bb61aa61828499a7d0f5e560051625fd02ae7e4", "date": "2020-12-02", "metadata": "Message: Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull arm64 fixes from Will Deacon:\n \"I'm sad to say that we've got an unusually large arm64 fixes pull for\n  rc7 which addresses numerous significant instrumentation issues with\n  our entry code.\n\n  Without these patches, lockdep is hopelessly unreliable in some\n  configurations [1,2] and syzkaller is therefore not a lot of use\n  because it's so noisy.\n\n  Although much of this has always been broken, it appears to have been\n  exposed more readily by other changes such as 044d0d6de9f5 (\"lockdep:\n  Only trace IRQ edges\") and general lockdep improvements around IRQ\n  tracing and NMIs.\n\n  Fixing this properly required moving much of the instrumentation hooks\n  from our entry assembly into C, which Mark has been working on for the\n  last few weeks. We're not quite ready to move to the recently added\n  generic functions yet, but the code here has been deliberately written\n  to mimic that closely so we can look at cleaning things up once we\n  have a bit more breathing room.\n\n  Having said all that, the second version of these patches was posted\n  last week and I pushed it into our CI (kernelci and cki) along with a\n  commit which forced on PROVE_LOCKING, NOHZ_FULL and\n  CONTEXT_TRACKING_FORCE. The result? We found a real bug in the\n  md/raid10 code [3].\n\n  Oh, and there's also a really silly typo patch that's unrelated.\n\n  Summary:\n\n   - Fix numerous issues with instrumentation and exception entry\n\n   - Fix hideous typo in unused register field definition\"\n\n[1] https://lore.kernel.org/r/CACT4Y+aAzoJ48Mh1wNYD17pJqyEcDnrxGfApir=-j171TnQXhw@mail.gmail.com\n[2] https://lore.kernel.org/r/20201119193819.GA2601289@elver.google.com\n[3] https://lore.kernel.org/r/94c76d5e-466a-bc5f-e6c2-a11b65c39f83@redhat.com\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: mte: Fix typo in macro definition\n  arm64: entry: fix EL1 debug transitions\n  arm64: entry: fix NMI {user, kernel}->kernel transitions\n  arm64: entry: fix non-NMI kernel<->kernel transitions\n  arm64: ptrace: prepare for EL1 irq/rcu tracking\n  arm64: entry: fix non-NMI user<->kernel transitions\n  arm64: entry: move el1 irq/nmi logic to C\n  arm64: entry: prepare ret_to_user for function call\n  arm64: entry: move enter_from_user_mode to entry-common.c\n  arm64: entry: mark entry code as noinstr\n  arm64: mark idle code as noinstr\n  arm64: syscall: exit userspace before unmasking exceptions \nDate: 2020-12-02 - 20:27:37 \nAuthor: Linus Torvalds"}, {"id": "2c6ffa9e9b11bdfa267fe05ad1e98d3491b4224f", "date": "2020-12-02", "metadata": "Message: Merge tag 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost\n\nPull vdpa fixes from Michael Tsirkin:\n \"A couple of fixes that surfaced at the last minute\"\n\n* tag 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost:\n  vhost_vdpa: return -EFAULT if copy_to_user() fails\n  vdpa: mlx5: fix vdpa/vhost dependencies \nDate: 2020-12-02 - 20:20:11 \nAuthor: Linus Torvalds"}, {"id": "bb95d60783f1ac85883c7ae33cafa85236b6179e", "date": "2020-12-02", "metadata": "Message: Merge tag 'sound-5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound\n\nPull sound fixes from Takashi Iwai:\n \"Here are the pending sound fixes for 5.10: all small device-specific\n  fixes, and nothing particular stands out, so far\"\n\n* tag 'sound-5.10-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:\n  ALSA: hda/realtek: Add mute LED quirk to yet another HP x360 model\n  ALSA: hda/realtek: Fix bass speaker DAC assignment on Asus Zephyrus G14\n  ALSA: hda/generic: Add option to enforce preferred_dacs pairs\n  ALSA: usb-audio: US16x08: fix value count for level meters\n  ALSA: hda/realtek - Add new codec supported for ALC897\n  ASoC: rt5682: change SAR voltage threshold\n  ASoC: wm_adsp: fix error return code in wm_adsp_load()\n  ALSA: hda/realtek: Enable headset of ASUS UX482EG & B9400CEA with ALC294\n  ASoC: qcom: Fix enabling BCLK and LRCLK in LPAIF invalid state\n  ALSA: hda/realtek - Fixed Dell AIO wrong sound tone\n  ASoC: Intel: bytcr_rt5640: Fix HP Pavilion x2 Detachable quirks \nDate: 2020-12-02 - 20:14:03 \nAuthor: Linus Torvalds"}, {"id": "8a02ec8f35779335b81577903832c2b3c495e979", "date": "2020-12-02", "metadata": "Message: Merge tag 'trace-v5.10-rc6-bootconfig' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull bootconfig fixes from Steven Rostedt:\n \"Have bootconfig size and checksum be little endian\n\n  In case the bootconfig is created on one kind of endian machine, and\n  then read on the other kind of endian kernel, the size and checksum\n  will be incorrect. Instead, have both the size and checksum always be\n  little endian and have the tool and the kernel convert it from little\n  endian to or from the host endian\"\n\n* tag 'trace-v5.10-rc6-bootconfig' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  docs: bootconfig: Add the endianness of fields\n  tools/bootconfig: Store size and checksum in footer as le32\n  bootconfig: Load size and checksum in the footer as le32 \nDate: 2020-12-02 - 20:09:36 \nAuthor: Linus Torvalds"}, {"id": "07500a6085806d97039ebcba8d9b8b29129f0106", "date": "2020-12-01", "metadata": "Message: dpaa_eth: copy timestamp fields to new skb in A-050385 workaround\n\nThe timestamp fields should be copied to new skb too in\nA-050385 workaround for later TX timestamping handling.\n\nFixes: 3c68b8fffb48 (\"dpaa_eth: FMan erratum A050385 workaround\")\nSigned-off-by: Yangbo Lu <yangbo.lu@nxp.com>\nAcked-by: Camelia Groza <camelia.groza@nxp.com>\nLink: https://lore.kernel.org/r/20201201075258.1875-1-yangbo.lu@nxp.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-01 - 07:52:58 \nAuthor: Yangbo Lu"}, {"id": "832ba596494b2c9eac7760259eff2d8b7dcad0ee", "date": "2020-11-30", "metadata": "Message: net: ip6_gre: set dev->hard_header_len when using header_ops\n\nsyzkaller managed to crash the kernel using an NBMA ip6gre interface. I\ncould reproduce it creating an NBMA ip6gre interface and forwarding\ntraffic to it:\n\n  skbuff: skb_under_panic: text:ffffffff8250e927 len:148 put:44 head:ffff8c03c7a33\n  ------------[ cut here ]------------\n  kernel BUG at net/core/skbuff.c:109!\n  Call Trace:\n  skb_push+0x10/0x10\n  ip6gre_header+0x47/0x1b0\n  neigh_connected_output+0xae/0xf0\n\nip6gre tunnel provides its own header_ops->create, and sets it\nconditionally when initializing the tunnel in NBMA mode. When\nheader_ops->create is used, dev->hard_header_len should reflect the\nlength of the header created. Otherwise, when not used,\ndev->needed_headroom should be used.\n\nFixes: eb95f52fc72d (\"net: ipv6_gre: Fix GRO to work on IPv6 over GRE tap\")\nCc: Maria Pasechnik <mariap@mellanox.com>\nSigned-off-by: Antoine Tenart <atenart@kernel.org>\nLink: https://lore.kernel.org/r/20201130161911.464106-1-atenart@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-11-30 - 16:19:11 \nAuthor: Antoine Tenart"}, {"id": "807982017730cfe853fce49ba26d453e31c84898", "date": "2020-11-26", "metadata": "Message: mt76: usb: fix crash on device removal\n\nCurrently 'while (q->queued > 0)' loop was removed from mt76u_stop_tx()\ncode. This causes crash on device removal as we try to cleanup empty\nqueue:\n\n[   96.495571] kernel BUG at include/linux/skbuff.h:2297!\n[   96.498983] invalid opcode: 0000 [#1] SMP PTI\n[   96.501162] CPU: 3 PID: 27 Comm: kworker/3:0 Not tainted 5.10.0-rc5+ #11\n[   96.502754] Hardware name: LENOVO 20DGS08H00/20DGS08H00, BIOS J5ET48WW (1.19 ) 08/27/2015\n[   96.504378] Workqueue: usb_hub_wq hub_event\n[   96.505983] RIP: 0010:skb_pull+0x2d/0x30\n[   96.507576] Code: 00 00 8b 47 70 39 c6 77 1e 29 f0 89 47 70 3b 47 74 72 17 48 8b 87 c8 00 00 00 89 f6 48 01 f0 48 89 87 c8 00 00 00 c3 31 c0 c3 <0f> 0b 90 0f 1f 44 00 00 53 48 89 fb 48 8b bf c8 00 00 00 8b 43 70\n[   96.509296] RSP: 0018:ffffb11b801639b8 EFLAGS: 00010287\n[   96.511038] RAX: 000000001c6939ed RBX: ffffb11b801639f8 RCX: 0000000000000000\n[   96.512964] RDX: ffffb11b801639f8 RSI: 0000000000000018 RDI: ffff90c64e4fb800\n[   96.514710] RBP: ffff90c654551ee0 R08: ffff90c652bce7a8 R09: ffffb11b80163728\n[   96.516450] R10: 0000000000000001 R11: 0000000000000001 R12: ffff90c64e4fb800\n[   96.519749] R13: 0000000000000010 R14: 0000000000000020 R15: ffff90c64e352ce8\n[   96.523455] FS:  0000000000000000(0000) GS:ffff90c96eec0000(0000) knlGS:0000000000000000\n[   96.527171] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   96.530900] CR2: 0000242556f18288 CR3: 0000000146a10002 CR4: 00000000003706e0\n[   96.534678] Call Trace:\n[   96.538418]  mt76x02u_tx_complete_skb+0x1f/0x50 [mt76x02_usb]\n[   96.542231]  mt76_queue_tx_complete+0x23/0x50 [mt76]\n[   96.546028]  mt76u_stop_tx.cold+0x71/0xa2 [mt76_usb]\n[   96.549797]  mt76x0u_stop+0x2f/0x90 [mt76x0u]\n[   96.553638]  drv_stop+0x33/0xd0 [mac80211]\n[   96.557449]  ieee80211_do_stop+0x558/0x860 [mac80211]\n[   96.561262]  ? dev_deactivate_many+0x298/0x2d0\n[   96.565101]  ieee80211_stop+0x16/0x20 [mac80211]\n\nFix that by adding while loop again. We need loop, not just single\ncheck, to clean all pending entries.\n\nAdditionally move mt76_worker_disable/enable after !mt76_has_tx_pending()\nas we want to tx_worker to run to process tx queues, while we wait for\nexactly that.\n\nI was a bit worried about accessing q->queued without lock, but\nmt76_worker_disable() -> kthread_park() should assure this value will\nbe seen updated on other cpus.\n\nFixes: fe5b5ab52e9d (\"mt76: unify queue tx cleanup code\")\nSigned-off-by: Stanislaw Gruszka <stf_xl@wp.pl>\nAcked-by: Felix Fietkau <nbd@nbd.name>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>\nLink: https://lore.kernel.org/r/20201126125520.72912-1-stf_xl@wp.pl \nDate: 2020-11-26 - 12:55:20 \nAuthor: Stanislaw Gruszka"}, {"id": "9b15596c5006d82b2f82810e8cbf80d8c6e7e7b4", "date": "2020-12-02", "metadata": "Message: iwlwifi: pcie: add some missing entries for AX210\n\nSome subsytem device IDs were missing from the list, so some AX210\ndevices were not recognized.  Add them.\n\nSigned-off-by: Golan Ben Ami <golan.ben.ami@intel.com>\nSigned-off-by: Luca Coelho <luciano.coelho@intel.com>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>\nLink: https://lore.kernel.org/r/iwlwifi.20201202143859.a06ba7540449.I7390305d088a49c1043c9b489154fe057989c18f@changeid\nLink: https://lore.kernel.org/r/20201121003411.9450-1-ikegami.t@gmail.com \nDate: 2020-12-02 - 12:41:51 \nAuthor: Golan Ben Ami"}, {"id": "568d3434178b00274615190a19d29c3d235b4e6d", "date": "2020-12-02", "metadata": "Message: iwlwifi: pcie: invert values of NO_160 device config entries\n\nThe NO_160 flag specifies if the device doesn't have 160 MHz support,\nbut we errorneously assumed the opposite.  If the flag was set, we\nwere considering that 160 MHz was supported, but it's actually the\nopposite.  Fix it by inverting the bits, i.e. NO_160 is 0x1 and 160\nis 0x0.\n\nFixes: d6f2134a3831 (\"iwlwifi: add mac/rf types and 160MHz to the device tables\")\nSigned-off-by: Luca Coelho <luciano.coelho@intel.com>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>\nLink: https://lore.kernel.org/r/iwlwifi.20201202143859.375bec857ccb.I83884286b688965293e9810381808039bd7eedae@changeid \nDate: 2020-12-02 - 12:41:50 \nAuthor: Luca Coelho"}, {"id": "5febcdef30902fa870128b9789b873199f13aff1", "date": "2020-12-02", "metadata": "Message: iwlwifi: pcie: add one missing entry for AX210\n\nThe 0x0024 subsytem device ID was missing from the list, so some AX210\ndevices were not recognized.  Add it.\n\nSigned-off-by: Luca Coelho <luciano.coelho@intel.com>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>\nLink: https://lore.kernel.org/r/iwlwifi.20201202143859.308eab4db42c.I3763196cd3f7bb36f3dcabf02ec4e7c4fe859c0f@changeid \nDate: 2020-12-02 - 12:41:49 \nAuthor: Luca Coelho"}, {"id": "abfccc3af786bb33210e39638268ea3a7bf80e63", "date": "2020-11-29", "metadata": "Message: iwlwifi: update MAINTAINERS entry\n\nReflect the fact that the linuxwifi@intel.com address will disappear,\nand that neither Emmanuel nor myself are really much involved with\nthe maintenance these days.\n\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>\nSigned-off-by: Luca Coelho <luciano.coelho@intel.com>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>\nLink: https://lore.kernel.org/r/iwlwifi.20201129151117.a25afe6d2c7f.I8f13a5689dd353825fb2b9bd5b6f0fbce92cb12b@changeid \nDate: 2020-11-29 - 13:14:38 \nAuthor: Johannes Berg"}, {"id": "b1cae1f84a0f609a34ebcaa087fbecef32f69882", "date": "2020-12-02", "metadata": "Message: s390: fix irq state tracing\n\nWith commit 58c644ba512c (\"sched/idle: Fix arch_cpu_idle() vs\ntracing\") common code calls arch_cpu_idle() with a lockdep state that\ntells irqs are on.\n\nThis doesn't work very well for s390: psw_idle() will enable interrupts\nto wait for an interrupt. As soon as an interrupt occurs the interrupt\nhandler will verify if the old context was psw_idle(). If that is the\ncase the interrupt enablement bits in the old program status word will\nbe cleared.\n\nA subsequent test in both the external as well as the io interrupt\nhandler checks if in the old context interrupts were enabled. Due to\nthe above patching of the old program status word it is assumed the\nold context had interrupts disabled, and therefore a call to\nTRACE_IRQS_OFF (aka trace_hardirqs_off_caller) is skipped. Which in\nturn makes lockdep incorrectly \"think\" that interrupts are enabled\nwithin the interrupt handler.\n\nFix this by unconditionally calling TRACE_IRQS_OFF when entering\ninterrupt handlers. Also call unconditionally TRACE_IRQS_ON when\nleaving interrupts handlers.\n\nThis leaves the special psw_idle() case, which now returns with\ninterrupts disabled, but has an \"irqs on\" lockdep state. So callers of\npsw_idle() must adjust the state on their own, if required. This is\ncurrently only __udelay_disabled().\n\nFixes: 58c644ba512c (\"sched/idle: Fix arch_cpu_idle() vs tracing\")\nAcked-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-02 - 10:46:01 \nAuthor: Heiko Carstens"}, {"id": "a2bd4097b3ec242f4de4924db463a9c94530e03a", "date": "2020-11-26", "metadata": "Message: s390/pci: fix CPU address in MSI for directed IRQ\n\nThe directed MSIs are delivered to CPUs whose address is\nwritten to the MSI message address. The current code assumes\nthat a CPU logical number (as it is seen by the kernel)\nis also the CPU address.\n\nThe above assumption is not correct, as the CPU address\nis rather the value returned by STAP instruction. That\nvalue does not necessarily match the kernel logical CPU\nnumber.\n\nFixes: e979ce7bced2 (\"s390/pci: provide support for CPU directed interrupts\")\nCc: <stable@vger.kernel.org> # v5.2+\nSigned-off-by: Alexander Gordeev <agordeev@linux.ibm.com>\nReviewed-by: Halil Pasic <pasic@linux.ibm.com>\nReviewed-by: Niklas Schnelle <schnelle@linux.ibm.com>\nSigned-off-by: Niklas Schnelle <schnelle@linux.ibm.com>\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-11-26 - 17:00:37 \nAuthor: Alexander Gordeev"}, {"id": "14718b3e129b058cb716a60c6faf40ef68661c54", "date": "2020-11-30", "metadata": "Message: i2c: qcom: Fix IRQ error misassignement\n\nDuring cci_isr() errors read from register fields belonging to\ni2c master1 are currently assigned to the status field belonging to\ni2c master0. This patch corrects this error, and always assigns\nmaster1 errors to the status field of master1.\n\nFixes: e517526195de (\"i2c: Add Qualcomm CCI I2C driver\")\nReported-by: Loic Poulain <loic.poulain@linaro.org>\nSuggested-by: Loic Poulain <loic.poulain@linaro.org>\nSigned-off-by: Robert Foss <robert.foss@linaro.org>\nReviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>\nSigned-off-by: Wolfram Sang <wsa@kernel.org> \nDate: 2020-11-30 - 10:04:45 \nAuthor: Robert Foss"}, {"id": "e9acf0298c664f825e6f1158f2a97341bf9e03ca", "date": "2020-11-16", "metadata": "Message: i2c: qup: Fix error return code in qup_i2c_bam_schedule_desc()\n\nFix to return the error code from qup_i2c_change_state()\ninstaed of 0 in qup_i2c_bam_schedule_desc().\n\nFixes: fbf9921f8b35d9b2 (\"i2c: qup: Fix error handling\")\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: Zhihao Cheng <chengzhihao1@huawei.com>\nReviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>\nSigned-off-by: Wolfram Sang <wsa@kernel.org> \nDate: 2020-11-16 - 14:10:58 \nAuthor: Zhihao Cheng"}, {"id": "a1ee28117077c3bf24e5ab6324c835eaab629c45", "date": "2020-11-28", "metadata": "Message: powerpc/64s/powernv: Fix memory corruption when saving SLB entries on MCE\n\nThis can be hit by an HPT guest running on an HPT host and bring down\nthe host, so it's quite important to fix.\n\nFixes: 7290f3b3d3e6 (\"powerpc/64s/powernv: machine check dump SLB contents\")\nCc: stable@vger.kernel.org # v5.4+\nSigned-off-by: Nicholas Piggin <npiggin@gmail.com>\nAcked-by: Mahesh Salgaonkar <mahesh@linux.ibm.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/20201128070728.825934-2-npiggin@gmail.com \nDate: 2020-11-28 - 07:07:21 \nAuthor: Nicholas Piggin"}, {"id": "2c602741b51daa12f8457f222ce9ce9c4825d067", "date": "2020-12-02", "metadata": "Message: vhost_vdpa: return -EFAULT if copy_to_user() fails\n\nThe copy_to_user() function returns the number of bytes remaining to be\ncopied but this should return -EFAULT to the user.\n\nFixes: 1b48dc03e575 (\"vhost: vdpa: report iova range\")\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nLink: https://lore.kernel.org/r/X8c32z5EtDsMyyIL@mwanda\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nAcked-by: Jason Wang <jasowang@redhat.com>\nReviewed-by: Stefano Garzarella <sgarzare@redhat.com> \nDate: 2020-12-02 - 06:44:43 \nAuthor: Dan Carpenter"}, {"id": "98701a2a861fa87a5055cf2809758e8725e8b146", "date": "2020-11-28", "metadata": "Message: vdpa: mlx5: fix vdpa/vhost dependencies\n\ndrivers/vdpa/mlx5/ uses vhost_iotlb*() interfaces, so select\nVHOST_IOTLB to make them be built.\n\nHowever, if VHOST_IOTLB is the only VHOST symbol that is\nset/enabled, the object file still won't be built because\ndrivers/Makefile won't descend into drivers/vhost/ to build it,\nso make drivers/Makefile build the needed binary whenever\nVHOST_IOTLB is set, like it does for VHOST_RING.\n\nFixes these build errors:\nERROR: modpost: \"vhost_iotlb_itree_next\" [drivers/vdpa/mlx5/mlx5_vdpa.ko] undefined!\nERROR: modpost: \"vhost_iotlb_itree_first\" [drivers/vdpa/mlx5/mlx5_vdpa.ko] undefined!\n\nFixes: 29064bfdabd5 (\"vdpa/mlx5: Add support library for mlx5 VDPA implementation\")\nFixes: aff90770e54c (\"vdpa/mlx5: Fix dependency on MLX5_CORE\")\nReported-by: kernel test robot <lkp@intel.com>\nSigned-off-by: Randy Dunlap <rdunlap@infradead.org>\nCc: Eli Cohen <eli@mellanox.com>\nCc: Parav Pandit <parav@mellanox.com>\nCc: \"Michael S. Tsirkin\" <mst@redhat.com>\nCc: Jason Wang <jasowang@redhat.com>\nCc: virtualization@lists.linux-foundation.org\nCc: Saeed Mahameed <saeedm@nvidia.com>\nCc: Leon Romanovsky <leonro@nvidia.com>\nCc: netdev@vger.kernel.org\nLink: https://lore.kernel.org/r/20201128213905.27409-1-rdunlap@infradead.org\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nAcked-by: Jason Wang <jasowang@redhat.com> \nDate: 2020-11-28 - 21:39:05 \nAuthor: Randy Dunlap"}, {"id": "4179b00c04d18ea7013f68d578d80f3c9d13150a", "date": "2020-12-01", "metadata": "Message: geneve: pull IP header before ECN decapsulation\n\nIP_ECN_decapsulate() and IP6_ECN_decapsulate() assume\nIP header is already pulled.\n\ngeneve does not ensure this yet.\n\nFixing this generically in IP_ECN_decapsulate() and\nIP6_ECN_decapsulate() is not possible, since callers\npass a pointer that might be freed by pskb_may_pull()\n\nsyzbot reported :\n\nBUG: KMSAN: uninit-value in __INET_ECN_decapsulate include/net/inet_ecn.h:238 [inline]\nBUG: KMSAN: uninit-value in INET_ECN_decapsulate+0x345/0x1db0 include/net/inet_ecn.h:260\nCPU: 1 PID: 8941 Comm: syz-executor.0 Not tainted 5.10.0-rc4-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nCall Trace:\n <IRQ>\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x21c/0x280 lib/dump_stack.c:118\n kmsan_report+0xf7/0x1e0 mm/kmsan/kmsan_report.c:118\n __msan_warning+0x5f/0xa0 mm/kmsan/kmsan_instr.c:197\n __INET_ECN_decapsulate include/net/inet_ecn.h:238 [inline]\n INET_ECN_decapsulate+0x345/0x1db0 include/net/inet_ecn.h:260\n geneve_rx+0x2103/0x2980 include/net/inet_ecn.h:306\n geneve_udp_encap_recv+0x105c/0x1340 drivers/net/geneve.c:377\n udp_queue_rcv_one_skb+0x193a/0x1af0 net/ipv4/udp.c:2093\n udp_queue_rcv_skb+0x282/0x1050 net/ipv4/udp.c:2167\n udp_unicast_rcv_skb net/ipv4/udp.c:2325 [inline]\n __udp4_lib_rcv+0x399d/0x5880 net/ipv4/udp.c:2394\n udp_rcv+0x5c/0x70 net/ipv4/udp.c:2564\n ip_protocol_deliver_rcu+0x572/0xc50 net/ipv4/ip_input.c:204\n ip_local_deliver_finish net/ipv4/ip_input.c:231 [inline]\n NF_HOOK include/linux/netfilter.h:301 [inline]\n ip_local_deliver+0x583/0x8d0 net/ipv4/ip_input.c:252\n dst_input include/net/dst.h:449 [inline]\n ip_rcv_finish net/ipv4/ip_input.c:428 [inline]\n NF_HOOK include/linux/netfilter.h:301 [inline]\n ip_rcv+0x5c3/0x840 net/ipv4/ip_input.c:539\n __netif_receive_skb_one_core net/core/dev.c:5315 [inline]\n __netif_receive_skb+0x1ec/0x640 net/core/dev.c:5429\n process_backlog+0x523/0xc10 net/core/dev.c:6319\n napi_poll+0x420/0x1010 net/core/dev.c:6763\n net_rx_action+0x35c/0xd40 net/core/dev.c:6833\n __do_softirq+0x1a9/0x6fa kernel/softirq.c:298\n asm_call_irq_on_stack+0xf/0x20\n </IRQ>\n __run_on_irqstack arch/x86/include/asm/irq_stack.h:26 [inline]\n run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:77 [inline]\n do_softirq_own_stack+0x6e/0x90 arch/x86/kernel/irq_64.c:77\n do_softirq kernel/softirq.c:343 [inline]\n __local_bh_enable_ip+0x184/0x1d0 kernel/softirq.c:195\n local_bh_enable+0x36/0x40 include/linux/bottom_half.h:32\n rcu_read_unlock_bh include/linux/rcupdate.h:730 [inline]\n __dev_queue_xmit+0x3a9b/0x4520 net/core/dev.c:4167\n dev_queue_xmit+0x4b/0x60 net/core/dev.c:4173\n packet_snd net/packet/af_packet.c:2992 [inline]\n packet_sendmsg+0x86f9/0x99d0 net/packet/af_packet.c:3017\n sock_sendmsg_nosec net/socket.c:651 [inline]\n sock_sendmsg net/socket.c:671 [inline]\n __sys_sendto+0x9dc/0xc80 net/socket.c:1992\n __do_sys_sendto net/socket.c:2004 [inline]\n __se_sys_sendto+0x107/0x130 net/socket.c:2000\n __x64_sys_sendto+0x6e/0x90 net/socket.c:2000\n do_syscall_64+0x9f/0x140 arch/x86/entry/common.c:48\n entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nFixes: 2d07dc79fe04 (\"geneve: add initial netdev driver for GENEVE tunnels\")\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: syzbot <syzkaller@googlegroups.com>\nLink: https://lore.kernel.org/r/20201201090507.4137906-1-eric.dumazet@gmail.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-01 - 09:05:07 \nAuthor: Eric Dumazet"}, {"id": "2867e1eac61016f59b3d730e3f7aa488e186e917", "date": "2020-11-30", "metadata": "Message: inet_ecn: Fix endianness of checksum update when setting ECT(1)\n\nWhen adding support for propagating ECT(1) marking in IP headers it seems I\nsuffered from endianness-confusion in the checksum update calculation: In\nfact the ECN field is in the *lower* bits of the first 16-bit word of the\nIP header when calculating in network byte order. This means that the\naddition performed to update the checksum field was wrong; let's fix that.\n\nFixes: b723748750ec (\"tunnel: Propagate ECT(1) when decapsulating as recommended by RFC6040\")\nReported-by: Jonathan Morton <chromatix99@gmail.com>\nTested-by: Pete Heist <pete@heistp.net>\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>\nLink: https://lore.kernel.org/r/20201130183705.17540-1-toke@redhat.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-11-30 - 18:37:05 \nAuthor: Toke H\u00f8iland-J\u00f8rgensen"}, {"id": "509a15421674b9e1a3e1916939d0d0efd3e578da", "date": "2020-12-01", "metadata": "Message: Merge tag '5.10-rc6-smb3-fixes' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs fixes from Steve French:\n \"Two smb3 fixes for stable\"\n\n* tag '5.10-rc6-smb3-fixes' of git://git.samba.org/sfrench/cifs-2.6:\n  cifs: fix potential use-after-free in cifs_echo_request()\n  cifs: allow syscalls to be restarted in __smb_send_rqst() \nDate: 2020-12-01 - 23:43:53 \nAuthor: Linus Torvalds"}, {"id": "ef6900acc89ecfc78ceb0eb1605c954dd6f2ca05", "date": "2020-12-01", "metadata": "Message: Merge tag 'trace-v5.10-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing fixes from Steven Rostedt:\n\n - Use correct timestamp variable for ring buffer write stamp update\n\n - Fix up before stamp and write stamp when crossing ring buffer sub\n   buffers\n\n - Keep a zero delta in ring buffer in slow path if cmpxchg fails\n\n - Fix trace_printk static buffer for archs that care\n\n - Fix ftrace record accounting for ftrace ops with trampolines\n\n - Fix DYNAMIC_FTRACE_WITH_DIRECT_CALLS dependency\n\n - Remove WARN_ON in hwlat tracer that triggers on something that is OK\n\n - Make \"my_tramp\" trampoline in ftrace direct sample code global\n\n - Fixes in the bootconfig tool for better alignment management\n\n* tag 'trace-v5.10-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace:\n  ring-buffer: Always check to put back before stamp when crossing pages\n  ftrace: Fix DYNAMIC_FTRACE_WITH_DIRECT_CALLS dependency\n  ftrace: Fix updating FTRACE_FL_TRAMP\n  tracing: Fix alignment of static buffer\n  tracing: Remove WARN_ON in start_thread()\n  samples/ftrace: Mark my_tramp[12]? global\n  ring-buffer: Set the right timestamp in the slow path of __rb_reserve_next()\n  ring-buffer: Update write stamp with the correct ts\n  docs: bootconfig: Update file format on initrd image\n  tools/bootconfig: Align the bootconfig applied initrd image size to 4\n  tools/bootconfig: Fix to check the write failure correctly\n  tools/bootconfig: Fix errno reference after printf() \nDate: 2020-12-01 - 23:30:18 \nAuthor: Linus Torvalds"}, {"id": "0643334902fcdc770e2d9555811200213339a3f6", "date": "2020-11-30", "metadata": "Message: tipc: fix incompatible mtu of transmission\n\nIn commit 682cd3cf946b6\n(\"tipc: confgiure and apply UDP bearer MTU on running links\"), we\nintroduced a function to change UDP bearer MTU and applied this new value\nacross existing per-link. However, we did not apply this new MTU value at\nnode level. This lead to packet dropped at link level if its size is\ngreater than new MTU value.\n\nTo fix this issue, we also apply this new MTU value for node level.\n\nFixes: 682cd3cf946b6 (\"tipc: confgiure and apply UDP bearer MTU on running links\")\nAcked-by: Jon Maloy <jmaloy@redhat.com>\nSigned-off-by: Hoang Le <hoang.h.le@dektech.com.au>\nLink: https://lore.kernel.org/r/20201130025544.3602-1-hoang.h.le@dektech.com.au\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-11-30 - 02:55:44 \nAuthor: Hoang Le"}, {"id": "857c4c0a8b2888d806f4308c58f59a6a81a1dee9", "date": "2020-11-13", "metadata": "Message: dm writecache: remove BUG() and fail gracefully instead\n\nBuilding on arch/s390/ results in this build error:\n\ncc1: some warnings being treated as errors\n../drivers/md/dm-writecache.c: In function 'persistent_memory_claim':\n../drivers/md/dm-writecache.c:323:1: error: no return statement in function returning non-void [-Werror=return-type]\n\nFix this by replacing the BUG() with an -EOPNOTSUPP return.\n\nFixes: 48debafe4f2f (\"dm: add writecache target\")\nReported-by: Randy Dunlap <rdunlap@infradead.org>\nSigned-off-by: Mike Snitzer <snitzer@redhat.com> \nDate: 2020-11-13 - 22:52:28 \nAuthor: Mike Snitzer"}, {"id": "e7b624183d921b49ef0a96329f21647d38865ee9", "date": "2020-11-13", "metadata": "Message: dm table: Remove BUG_ON(in_interrupt())\n\nThe BUG_ON(in_interrupt()) in dm_table_event() is a historic leftover from\na rework of the dm table code which changed the calling context.\n\nIssuing a BUG for a wrong calling context is frowned upon and\nin_interrupt() is deprecated and only covering parts of the wrong\ncontexts. The sanity check for the context is covered by\nCONFIG_DEBUG_ATOMIC_SLEEP and other debug facilities already.\n\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>\nSigned-off-by: Mike Snitzer <snitzer@redhat.com> \nDate: 2020-11-13 - 14:19:10 \nAuthor: Thomas Gleixner"}, {"id": "89478335718c98557f10470a9bc5c555b9261c4e", "date": "2020-11-11", "metadata": "Message: dm: fix bug with RCU locking in dm_blk_report_zones\n\nThe dm_get_live_table() function makes RCU read lock so\ndm_put_live_table() must be called even if dm_table map is not found.\n\nFixes: e76239a3748c9 (\"block: add a report_zones method\")\nCc: stable@vger.kernel.org\nSigned-off-by: Sergei Shtepa <sergei.shtepa@veeam.com>\nSigned-off-by: Mike Snitzer <snitzer@redhat.com> \nDate: 2020-11-11 - 12:55:46 \nAuthor: Sergei Shtepa"}, {"id": "35d2835d2ac41dc0b3e3469f8e2b08ce9709ace8", "date": "2020-11-11", "metadata": "Message: Revert \"dm cache: fix arm link errors with inline\"\n\nThis reverts commit 43aeaa29573924df76f44eda2bbd94ca36e407b5.\n\nSince commit 0bddd227f3dc (\"Documentation: update for gcc 4.9 requirement\")\nthe minimum supported version of GCC is gcc-4.9. It's now safe to remove\nthis code.\n\nLink: https://github.com/ClangBuiltLinux/linux/issues/427\nSigned-off-by: Nick Desaulniers <ndesaulniers@google.com>\nAcked-by: Mikulas Patocka <mpatocka@redhat.com>\nSigned-off-by: Mike Snitzer <snitzer@redhat.com> \nDate: 2020-11-11 - 02:41:40 \nAuthor: Nick Desaulniers"}, {"id": "960f4f8a4e60da610af73c1264673f71f5a36efd", "date": "2020-12-01", "metadata": "Message: fs: 9p: add generic splice_write file operation\n\nThe default splice operations got removed recently, add it back to 9p\nwith iter_file_splice_write like many other filesystems do.\n\nLink: http://lkml.kernel.org/r/1606837496-21717-1-git-send-email-asmadeus@codewreck.org\nFixes: 36e2c7421f02 (\"fs: don't allow splice read/write without explicit ops\")\nSigned-off-by: Dominique Martinet <asmadeus@codewreck.org>\nAcked-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>\nReviewed-by: Christoph Hellwig <hch@lst.de> \nDate: 2020-12-01 - 15:09:37 \nAuthor: Dominique Martinet"}, {"id": "f43691b59fae581ca83349539c686ecf4a01e42d", "date": "2020-12-01", "metadata": "Message: Merge tag 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost\n\nPull vhost fixes from Michael Tsirkin:\n \"A couple of minor fixes\"\n\n* tag 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost:\n  vhost-vdpa: fix page pinning leakage in error path (rework)\n  vringh: fix vringh_iov_push_*() documentation\n  vhost scsi: fix lun reset completion handling \nDate: 2020-12-01 - 20:11:09 \nAuthor: Linus Torvalds"}, {"id": "14483cbf040fcb38113497161088a1ce8ce5d713", "date": "2020-11-29", "metadata": "Message: net: broadcom CNIC: requires MMU\n\nThe CNIC kconfig symbol selects UIO and UIO depends on MMU.\nSince 'select' does not follow dependency chains, add the same MMU\ndependency to CNIC.\n\nQuietens this kconfig warning:\n\nWARNING: unmet direct dependencies detected for UIO\n  Depends on [n]: MMU [=n]\n  Selected by [m]:\n  - CNIC [=m] && NETDEVICES [=y] && ETHERNET [=y] && NET_VENDOR_BROADCOM [=y] && PCI [=y] && (IPV6 [=m] || IPV6 [=m]=n)\n\nFixes: adfc5217e9db (\"broadcom: Move the Broadcom drivers\")\nSigned-off-by: Randy Dunlap <rdunlap@infradead.org>\nCc: Jeff Kirsher <jeffrey.t.kirsher@intel.com>\nCc: Rasesh Mody <rmody@marvell.com>\nCc: GR-Linux-NIC-Dev@marvell.com\nCc: \"David S. Miller\" <davem@davemloft.net>\nCc: Jakub Kicinski <kuba@kernel.org>\nCc: netdev@vger.kernel.org\nLink: https://lore.kernel.org/r/20201129070843.3859-1-rdunlap@infradead.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-11-29 - 07:08:43 \nAuthor: Randy Dunlap"}, {"id": "de7b3f8164cfdf99879ed7ca1d53bace25700929", "date": "2020-12-01", "metadata": "Message: Merge branch 'ibmvnic-Bug-fixes-for-queue-descriptor-processing'\n\nThomas Falcon says:\n\n====================\nibmvnic: Bug fixes for queue descriptor processing\n\nThis series resolves a few issues in the ibmvnic driver's\nRX buffer and TX completion processing. The first patch\nincludes memory barriers to synchronize queue descriptor\nreads. The second patch fixes a memory leak that could\noccur if the device returns a TX completion with an error\ncode in the descriptor, in which case the respective socket\nbuffer and other relevant data structures may not be freed\nor updated properly.\n\nv3: Correct length of Fixes tags, requested by Jakub Kicinski\n\nv2: Provide more detailed comments explaining specifically what\n    reads are being ordered, suggested by Michael Ellerman\n====================\n\nSigned-off-by: David S. Miller <davem@davemloft.net> \nDate: 2020-12-01 - 18:09:04 \nAuthor: David S. Miller"}, {"id": "ba246c175116e2e8fa4fdfa5f8e958e086a9a818", "date": "2020-12-01", "metadata": "Message: ibmvnic: Fix TX completion error handling\n\nTX completions received with an error return code are not\nbeing processed properly. When an error code is seen, do not\nproceed to the next completion before cleaning up the existing\nentry's data structures.\n\nFixes: 032c5e82847a (\"Driver for IBM System i/p VNIC protocol\")\nSigned-off-by: Thomas Falcon <tlfalcon@linux.ibm.com>\nSigned-off-by: David S. Miller <davem@davemloft.net> \nDate: 2020-12-01 - 15:52:11 \nAuthor: Thomas Falcon"}, {"id": "b71ec952234610b4f90ef17a2fdcb124d5320070", "date": "2020-12-01", "metadata": "Message: ibmvnic: Ensure that SCRQ entry reads are correctly ordered\n\nEnsure that received Subordinate Command-Response Queue (SCRQ)\nentries are properly read in order by the driver. These queues\nare used in the ibmvnic device to process RX buffer and TX completion\ndescriptors. dma_rmb barriers have been added after checking for a\npending descriptor to ensure the correct descriptor entry is checked\nand after reading the SCRQ descriptor to ensure the entire\ndescriptor is read before processing.\n\nFixes: 032c5e82847a (\"Driver for IBM System i/p VNIC protocol\")\nSigned-off-by: Thomas Falcon <tlfalcon@linux.ibm.com>\nSigned-off-by: David S. Miller <davem@davemloft.net> \nDate: 2020-12-01 - 15:52:10 \nAuthor: Thomas Falcon"}, {"id": "7e7986f9d3ba69a7375a41080a1f8c8012cb0923", "date": "2020-12-01", "metadata": "Message: block: use gcd() to fix chunk_sectors limit stacking\n\ncommit 22ada802ede8 (\"block: use lcm_not_zero() when stacking\nchunk_sectors\") broke chunk_sectors limit stacking. chunk_sectors must\nreflect the most limited of all devices in the IO stack.\n\nOtherwise malformed IO may result. E.g.: prior to this fix,\n->chunk_sectors = lcm_not_zero(8, 128) would result in\nblk_max_size_offset() splitting IO at 128 sectors rather than the\nrequired more restrictive 8 sectors.\n\nAnd since commit 07d098e6bbad (\"block: allow 'chunk_sectors' to be\nnon-power-of-2\") care must be taken to properly stack chunk_sectors to\nbe compatible with the possibility that a non-power-of-2 chunk_sectors\nmay be stacked. This is why gcd() is used instead of reverting back\nto using min_not_zero().\n\nFixes: 22ada802ede8 (\"block: use lcm_not_zero() when stacking chunk_sectors\")\nFixes: 07d098e6bbad (\"block: allow 'chunk_sectors' to be non-power-of-2\")\nReported-by: John Dorminy <jdorminy@redhat.com>\nReported-by: Bruce Johnston <bjohnsto@redhat.com>\nSigned-off-by: Mike Snitzer <snitzer@redhat.com>\nReviewed-by: John Dorminy <jdorminy@redhat.com>\nCc: stable@vger.kernel.org\nReviewed-by: Martin K. Petersen <martin.petersen@oracle.com>\nSigned-off-by: Jens Axboe <axboe@kernel.dk> \nDate: 2020-12-01 - 16:07:09 \nAuthor: Mike Snitzer"}, {"id": "8c3b55a299c325830a987de21dab6a89ecb71164", "date": "2020-12-01", "metadata": "Message: Input: atmel_mxt_ts - fix lost interrupts\n\nAfter commit 74d905d2d38a devices requiring the workaround for edge\ntriggered interrupts stopped working.\n\nThe hardware needs the quirk to be used before even proceeding to\ncheck if the quirk is needed because mxt_acquire_irq() is called\nbefore mxt_check_retrigen() is called and at this point pending IRQs\nneed to be checked, and if the workaround is not active, all\ninterrupts will be lost from this point.\n\nSolve this by switching the calls around.\n\nReported-by: Andre M\u00fcller <andre.muller@web.de>\nTested-by: Andre M\u00fcller <andre.muller@web.de>\nSuggested-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>\nFixes: 74d905d2d38a (\"Input: atmel_mxt_ts - only read messages in mxt_acquire_irq() when necessary\")\nSigned-off-by: Linus Walleij <linus.walleij@linaro.org>\nCc: stable@vger.kernel.org\nLink: https://lore.kernel.org/r/20201201123026.1416743-1-linus.walleij@linaro.org\nSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com> \nDate: 2020-12-01 - 17:55:29 \nAuthor: Linus Walleij"}, {"id": "1a16af33ba88ef25e206a13366379179cae79d23", "date": "2020-11-22", "metadata": "Message: fpga: Specify HAS_IOMEM dependency for FPGA_DFL\n\nBecause dfl.c uses the 'devm_ioremap', 'devm_iounmap',\n'devm_ioremap_resource', and 'devm_platform_ioremap_resource'\nfunctions, it should depend on HAS_IOMEM.\n\nThis fixes make allyesconfig under UML (ARCH=um), which doesn't provide\nHAS_IOMEM.\n\n[mdf@kernel.org: Removed \"drivers: \" in commit message]\nFixes: 89eb35e810a8 (\"fpga: dfl: map feature mmio resources in their own feature drivers\")\nSigned-off-by: David Gow <davidgow@google.com>\nSigned-off-by: Moritz Fischer <mdf@kernel.org>\nLink: https://lore.kernel.org/r/20201122001549.107023-2-mdf@kernel.org\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> \nDate: 2020-11-22 - 00:15:49 \nAuthor: David Gow"}, {"id": "cf03f316ad20dac16b5adae3f6dedd7d188c7f65", "date": "2020-12-01", "metadata": "Message: fs: 9p: add generic splice_read file operations\n\nThe v9fs file operations were missing the splice_read operations, which\nbreaks sendfile() of files on such a filesystem. I discovered this while\ntrying to load an eBPF program using iproute2 inside a 'virtme' environment\nwhich uses 9pfs for the virtual file system. iproute2 relies on sendfile()\nwith an AF_ALG socket to hash files, which was erroring out in the virtual\nenvironment.\n\nSince generic_file_splice_read() seems to just implement splice_read in\nterms of the read_iter operation, I simply added the generic implementation\nto the file operations, which fixed the error I was seeing. A quick grep\nindicates that this is what most other file systems do as well.\n\nLink: http://lkml.kernel.org/r/20201201135409.55510-1-toke@redhat.com\nFixes: 36e2c7421f02 (\"fs: don't allow splice read/write without explicit ops\")\nSigned-off-by: Toke H\u00f8iland-J\u00f8rgensen <toke@redhat.com>\nSigned-off-by: Dominique Martinet <asmadeus@codewreck.org> \nDate: 2020-12-01 - 13:54:09 \nAuthor: Toke H\u00f8iland-J\u00f8rgensen"}, {"id": "fae3a13d2a3d49a89391889808428cf1e72afbd7", "date": "2020-11-30", "metadata": "Message: x86/resctrl: Fix AMD L3 QOS CDP enable/disable\n\nWhen the AMD QoS feature CDP (code and data prioritization) is enabled\nor disabled, the CDP bit in MSR 0000_0C81 is written on one of the CPUs\nin an L3 domain (core complex). That is not correct - the CDP bit needs\nto be updated on all the logical CPUs in the domain.\n\nThis was not spelled out clearly in the spec earlier. The specification\nhas been updated and the updated document, \"AMD64 Technology Platform\nQuality of Service Extensions Publication # 56375 Revision: 1.02 Issue\nDate: October 2020\" is available now. Refer the section: Code and Data\nPrioritization.\n\nFix the issue by adding a new flag arch_has_per_cpu_cfg in rdt_cache\ndata structure.\n\nThe documentation can be obtained at:\nhttps://developer.amd.com/wp-content/resources/56375.pdf\nLink: https://bugzilla.kernel.org/show_bug.cgi?id=206537\n\n [ bp: Massage commit message. ]\n\nFixes: 4d05bf71f157 (\"x86/resctrl: Introduce AMD QOS feature\")\nSigned-off-by: Babu Moger <babu.moger@amd.com>\nSigned-off-by: Borislav Petkov <bp@suse.de>\nReviewed-by: Reinette Chatre <reinette.chatre@intel.com>\nLink: https://lkml.kernel.org/r/160675180380.15628.3309402017215002347.stgit@bmoger-ubuntu \nDate: 2020-11-30 - 15:57:20 \nAuthor: Babu Moger"}, {"id": "d5750cd3c5486e9c0fa11100df01de8ca0c13fa7", "date": "2020-11-19", "metadata": "Message: kbuild: Disable CONFIG_LD_ORPHAN_WARN for ld.lld 10.0.1\n\nld.lld 10.0.1 spews a bunch of various warnings about .rela sections,\nalong with a few others. Newer versions of ld.lld do not have these\nwarnings. As a result, do not add '--orphan-handling=warn' to\nLDFLAGS_vmlinux if ld.lld's version is not new enough.\n\nLink: https://github.com/ClangBuiltLinux/linux/issues/1187\nLink: https://github.com/ClangBuiltLinux/linux/issues/1193\nReported-by: Arvind Sankar <nivedita@alum.mit.edu>\nReported-by: kernelci.org bot <bot@kernelci.org>\nReported-by: Mark Brown <broonie@kernel.org>\nReviewed-by: Kees Cook <keescook@chromium.org>\nSigned-off-by: Nathan Chancellor <natechancellor@gmail.com>\nReviewed-by: Nick Desaulniers <ndesaulniers@google.com>\nSigned-off-by: Masahiro Yamada <masahiroy@kernel.org> \nDate: 2020-11-19 - 20:46:58 \nAuthor: Nathan Chancellor"}, {"id": "59612b24f78a0b61fe078ec9dff2e48e9cec52c0", "date": "2020-11-19", "metadata": "Message: kbuild: Hoist '--orphan-handling' into Kconfig\n\nCurrently, '--orphan-handling=warn' is spread out across four different\narchitectures in their respective Makefiles, which makes it a little\nunruly to deal with in case it needs to be disabled for a specific\nlinker version (in this case, ld.lld 10.0.1).\n\nTo make it easier to control this, hoist this warning into Kconfig and\nthe main Makefile so that disabling it is simpler, as the warning will\nonly be enabled in a couple places (main Makefile and a couple of\ncompressed boot folders that blow away LDFLAGS_vmlinx) and making it\nconditional is easier due to Kconfig syntax. One small additional\nbenefit of this is saving a call to ld-option on incremental builds\nbecause we will have already evaluated it for CONFIG_LD_ORPHAN_WARN.\n\nTo keep the list of supported architectures the same, introduce\nCONFIG_ARCH_WANT_LD_ORPHAN_WARN, which an architecture can select to\ngain this automatically after all of the sections are specified and size\nasserted. A special thanks to Kees Cook for the help text on this\nconfig.\n\nLink: https://github.com/ClangBuiltLinux/linux/issues/1187\nAcked-by: Kees Cook <keescook@chromium.org>\nAcked-by: Michael Ellerman <mpe@ellerman.id.au> (powerpc)\nReviewed-by: Nick Desaulniers <ndesaulniers@google.com>\nTested-by: Nick Desaulniers <ndesaulniers@google.com>\nSigned-off-by: Nathan Chancellor <natechancellor@gmail.com>\nSigned-off-by: Masahiro Yamada <masahiroy@kernel.org> \nDate: 2020-11-19 - 20:46:56 \nAuthor: Nathan Chancellor"}, {"id": "f54db39fbe40731c40aefdd3bc26e7d56d668c64", "date": "2020-11-30", "metadata": "Message: KVM: PPC: Book3S HV: XIVE: Fix vCPU id sanity check\n\nCommit 062cfab7069f (\"KVM: PPC: Book3S HV: XIVE: Make VP block size\nconfigurable\") updated kvmppc_xive_vcpu_id_valid() in a way that\nallows userspace to trigger an assertion in skiboot and crash the host:\n\n[  696.186248988,3] XIVE[ IC 08  ] eq_blk != vp_blk (0 vs. 1) for target 0x4300008c/0\n[  696.186314757,0] Assert fail: hw/xive.c:2370:0\n[  696.186342458,0] Aborting!\nxive-kvCPU 0043 Backtrace:\n S: 0000000031e2b8f0 R: 0000000030013840   .backtrace+0x48\n S: 0000000031e2b990 R: 000000003001b2d0   ._abort+0x4c\n S: 0000000031e2ba10 R: 000000003001b34c   .assert_fail+0x34\n S: 0000000031e2ba90 R: 0000000030058984   .xive_eq_for_target.part.20+0xb0\n S: 0000000031e2bb40 R: 0000000030059fdc   .xive_setup_silent_gather+0x2c\n S: 0000000031e2bc20 R: 000000003005a334   .opal_xive_set_vp_info+0x124\n S: 0000000031e2bd20 R: 00000000300051a4   opal_entry+0x134\n --- OPAL call token: 0x8a caller R1: 0xc000001f28563850 ---\n\nXIVE maintains the interrupt context state of non-dispatched vCPUs in\nan internal VP structure. We allocate a bunch of those on startup to\naccommodate all possible vCPUs. Each VP has an id, that we derive from\nthe vCPU id for efficiency:\n\nstatic inline u32 kvmppc_xive_vp(struct kvmppc_xive *xive, u32 server)\n{\n\treturn xive->vp_base + kvmppc_pack_vcpu_id(xive->kvm, server);\n}\n\nThe KVM XIVE device used to allocate KVM_MAX_VCPUS VPs. This was\nlimitting the number of concurrent VMs because the VP space is\nlimited on the HW. Since most of the time, VMs run with a lot less\nvCPUs, commit 062cfab7069f (\"KVM: PPC: Book3S HV: XIVE: Make VP\nblock size configurable\") gave the possibility for userspace to\ntune the size of the VP block through the KVM_DEV_XIVE_NR_SERVERS\nattribute.\n\nThe check in kvmppc_pack_vcpu_id() was changed from\n\n\tcpu < KVM_MAX_VCPUS * xive->kvm->arch.emul_smt_mode\n\nto\n\n\tcpu < xive->nr_servers * xive->kvm->arch.emul_smt_mode\n\nThe previous check was based on the fact that the VP block had\nKVM_MAX_VCPUS entries and that kvmppc_pack_vcpu_id() guarantees\nthat packed vCPU ids are below KVM_MAX_VCPUS. We've changed the\nsize of the VP block, but kvmppc_pack_vcpu_id() has nothing to\ndo with it and it certainly doesn't ensure that the packed vCPU\nids are below xive->nr_servers. kvmppc_xive_vcpu_id_valid() might\nthus return true when the VM was configured with a non-standard\nVSMT mode, even if the packed vCPU id is higher than what we\nexpect. We end up using an unallocated VP id, which confuses\nOPAL. The assert in OPAL is probably abusive and should be\nconverted to a regular error that the kernel can handle, but\nwe shouldn't really use broken VP ids in the first place.\n\nFix kvmppc_xive_vcpu_id_valid() so that it checks the packed\nvCPU id is below xive->nr_servers, which is explicitly what we\nwant.\n\nFixes: 062cfab7069f (\"KVM: PPC: Book3S HV: XIVE: Make VP block size configurable\")\nCc: stable@vger.kernel.org # v5.5+\nSigned-off-by: Greg Kurz <groug@kaod.org>\nReviewed-by: C\u00e9dric Le Goater <clg@kaod.org>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/160673876747.695514.1809676603724514920.stgit@bahia.lan \nDate: 2020-11-30 - 12:19:27 \nAuthor: Greg Kurz"}, {"id": "c98fff7332dbd6e028969f8c2bda3d7bc7a024d8", "date": "2020-12-01", "metadata": "Message: USB: serial: option: fix Quectel BG96 matching\n\nThis is a partial revert of commit 2bb70f0a4b23 (\"USB: serial:\noption: support dynamic Quectel USB compositions\")\n\nThe Quectel BG96 is different from most other modern Quectel modems,\nhaving serial functions with 3 endpoints using ff/ff/ff and ff/fe/ff\nclass/subclass/protocol. Including it in the change to accommodate\ndynamic function mapping was incorrect.\n\nRevert to interface number matching for the BG96, assuming static\nlayout of the RMNET function on interface 4. This restores support\nfor the serial functions on interfaces 2 and 3.\n\nFull lsusb output for the BG96:\n\nBus 002 Device 003: ID 2c7c:0296\nDevice Descriptor:\n bLength                18\n bDescriptorType         1\n bcdUSB               2.00\n bDeviceClass            0 (Defined at Interface level)\n bDeviceSubClass         0\n bDeviceProtocol         0\n bMaxPacketSize0        64\n idVendor           0x2c7c\n idProduct          0x0296\n bcdDevice            0.00\n iManufacturer           3 Qualcomm, Incorporated\n iProduct                2 Qualcomm CDMA Technologies MSM\n iSerial                 4 d1098243\n bNumConfigurations      1\n Configuration Descriptor:\n   bLength                 9\n   bDescriptorType         2\n   wTotalLength          145\n   bNumInterfaces          5\n   bConfigurationValue     1\n   iConfiguration          1 Qualcomm Configuration\n   bmAttributes         0xe0\n     Self Powered\n     Remote Wakeup\n   MaxPower              500mA\n   Interface Descriptor:\n     bLength                 9\n     bDescriptorType         4\n     bInterfaceNumber        0\n     bAlternateSetting       0\n     bNumEndpoints           2\n     bInterfaceClass       255 Vendor Specific Class\n     bInterfaceSubClass    255 Vendor Specific Subclass\n     bInterfaceProtocol    255 Vendor Specific Protocol\n     iInterface              0\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x81  EP 1 IN\n       bmAttributes            2\n         Transfer Type            Bulk\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0200  1x 512 bytes\n       bInterval               0\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x01  EP 1 OUT\n       bmAttributes            2\n         Transfer Type            Bulk\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0200  1x 512 bytes\n       bInterval               0\n   Interface Descriptor:\n     bLength                 9\n     bDescriptorType         4\n     bInterfaceNumber        1\n     bAlternateSetting       0\n     bNumEndpoints           2\n     bInterfaceClass       255 Vendor Specific Class\n     bInterfaceSubClass    255 Vendor Specific Subclass\n     bInterfaceProtocol    255 Vendor Specific Protocol\n     iInterface              0\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x82  EP 2 IN\n       bmAttributes            2\n         Transfer Type            Bulk\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0200  1x 512 bytes\n       bInterval               0\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x02  EP 2 OUT\n       bmAttributes            2\n         Transfer Type            Bulk\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0200  1x 512 bytes\n       bInterval               0\n   Interface Descriptor:\n     bLength                 9\n     bDescriptorType         4\n     bInterfaceNumber        2\n     bAlternateSetting       0\n     bNumEndpoints           3\n     bInterfaceClass       255 Vendor Specific Class\n     bInterfaceSubClass    255 Vendor Specific Subclass\n     bInterfaceProtocol    255 Vendor Specific Protocol\n     iInterface              0\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x83  EP 3 IN\n       bmAttributes            3\n         Transfer Type            Interrupt\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0040  1x 64 bytes\n       bInterval               5\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x84  EP 4 IN\n       bmAttributes            2\n         Transfer Type            Bulk\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0200  1x 512 bytes\n       bInterval               0\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x03  EP 3 OUT\n       bmAttributes            2\n         Transfer Type            Bulk\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0200  1x 512 bytes\n       bInterval               0\n   Interface Descriptor:\n     bLength                 9\n     bDescriptorType         4\n     bInterfaceNumber        3\n     bAlternateSetting       0\n     bNumEndpoints           3\n     bInterfaceClass       255 Vendor Specific Class\n     bInterfaceSubClass    254\n     bInterfaceProtocol    255\n     iInterface              0\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x85  EP 5 IN\n       bmAttributes            3\n         Transfer Type            Interrupt\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0040  1x 64 bytes\n       bInterval               5\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x86  EP 6 IN\n       bmAttributes            2\n         Transfer Type            Bulk\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0200  1x 512 bytes\n       bInterval               0\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x04  EP 4 OUT\n       bmAttributes            2\n         Transfer Type            Bulk\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0200  1x 512 bytes\n       bInterval               0\n   Interface Descriptor:\n     bLength                 9\n     bDescriptorType         4\n     bInterfaceNumber        4\n     bAlternateSetting       0\n     bNumEndpoints           3\n     bInterfaceClass       255 Vendor Specific Class\n     bInterfaceSubClass    255 Vendor Specific Subclass\n     bInterfaceProtocol    255 Vendor Specific Protocol\n     iInterface              0\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x87  EP 7 IN\n       bmAttributes            3\n         Transfer Type            Interrupt\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0040  1x 64 bytes\n       bInterval               5\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x88  EP 8 IN\n       bmAttributes            2\n         Transfer Type            Bulk\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0200  1x 512 bytes\n       bInterval               0\n     Endpoint Descriptor:\n       bLength                 7\n       bDescriptorType         5\n       bEndpointAddress     0x05  EP 5 OUT\n       bmAttributes            2\n         Transfer Type            Bulk\n         Synch Type               None\n         Usage Type               Data\n       wMaxPacketSize     0x0200  1x 512 bytes\n       bInterval               0\nDevice Qualifier (for other device speed):\n bLength                10\n bDescriptorType         6\n bcdUSB               2.00\n bDeviceClass            0 (Defined at Interface level)\n bDeviceSubClass         0\n bDeviceProtocol         0\n bMaxPacketSize0        64\n bNumConfigurations      1\nDevice Status:     0x0000\n (Bus Powered)\n\nCc: Sebastian Sjoholm <sebastian.sjoholm@gmail.com>\nFixes: 2bb70f0a4b23 (\"USB: serial: option: support dynamic Quectel USB compositions\")\nSigned-off-by: Bj\u00f8rn Mork <bjorn@mork.no>\nCc: stable@vger.kernel.org\nSigned-off-by: Johan Hovold <johan@kernel.org> \nDate: 2020-12-01 - 10:03:18 \nAuthor: Bj\u00f8rn Mork"}, {"id": "2aab1561439032be2e98811dd0ddbeb5b2ae4c61", "date": "2020-12-01", "metadata": "Message: Input: xpad - support Ardwiino Controllers\n\nThis commit adds support for Ardwiino Controllers\n\nSigned-off-by: Sanjay Govind <sanjay.govind9@gmail.com>\nLink: https://lore.kernel.org/r/20201201071922.131666-1-sanjay.govind9@gmail.com\nCc: stable@vger.kernel.org\nSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com> \nDate: 2020-12-01 - 07:41:48 \nAuthor: Sanjay Govind"}, {"id": "a48491c65b513e5cdc3e7a886a4db915f848a5f5", "date": "2020-12-01", "metadata": "Message: Input: i8042 - add ByteSpeed touchpad to noloop table\n\nIt looks like the C15B laptop got another vendor: ByteSpeed LLC.\n\nAvoid AUX loopback on this touchpad as well, thus input subsystem will\nbe able to recognize a Synaptics touchpad in the AUX port.\n\nBugLink: https://bugs.launchpad.net/bugs/1906128\nSigned-off-by: Po-Hsu Lin <po-hsu.lin@canonical.com>\nLink: https://lore.kernel.org/r/20201201054723.5939-1-po-hsu.lin@canonical.com\nCc: stable@vger.kernel.org\nSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com> \nDate: 2020-12-01 - 06:39:40 \nAuthor: Po-Hsu Lin"}, {"id": "85dad327d9b58b4c9ce08189a2707167de392d23", "date": "2020-11-30", "metadata": "Message: scsi: mpt3sas: Increase IOCInit request timeout to 30s\n\nCurrently the IOCInit request message timeout is set to 10s. This is not\nsufficient in some scenarios such as during HBA FW downgrade operations.\n\nIncrease the IOCInit request timeout to 30s.\n\nLink: https://lore.kernel.org/r/20201130082733.26120-1-sreekanth.reddy@broadcom.com\nSigned-off-by: Sreekanth Reddy <sreekanth.reddy@broadcom.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com> \nDate: 2020-11-30 - 08:27:33 \nAuthor: Sreekanth Reddy"}, {"id": "42f687038bcc34aa919e0e4c29b04e4cda3f6a79", "date": "2020-11-25", "metadata": "Message: scsi: mpt3sas: Fix ioctl timeout\n\nCommit c1a6c5ac4278 (\"scsi: mpt3sas: For NVME device, issue a protocol\nlevel reset\") modified the ioctl path 'timeout' variable type to u8 from\nunsigned long, limiting the maximum timeout value that the driver can\nsupport to 255 seconds.\n\nIf the management application is requesting a higher value the resulting\ntimeout will be zero. The operation times out immediately and the ioctl\nrequest fails.\n\nChange datatype back to unsigned long.\n\nLink: https://lore.kernel.org/r/20201125094838.4340-1-suganath-prabu.subramani@broadcom.com\nFixes: c1a6c5ac4278 (\"scsi: mpt3sas: For NVME device, issue a protocol level reset\")\nCc: <stable@vger.kernel.org> #v4.18+\nSigned-off-by: Suganath Prabu S <suganath-prabu.subramani@broadcom.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com> \nDate: 2020-11-25 - 09:48:38 \nAuthor: Suganath Prabu S"}, {"id": "3b8c72d076c42bf27284cda7b2b2b522810686f8", "date": "2020-11-18", "metadata": "Message: scsi: storvsc: Validate length of incoming packet in storvsc_on_channel_callback()\n\nCheck that the packet is of the expected size at least, don't copy data\npast the packet.\n\nLink: https://lore.kernel.org/r/20201118145348.109879-1-parri.andrea@gmail.com\nCc: \"James E.J. Bottomley\" <jejb@linux.ibm.com>\nCc: \"Martin K. Petersen\" <martin.petersen@oracle.com>\nCc: linux-scsi@vger.kernel.org\nReported-by: Saruhan Karademir <skarade@microsoft.com>\nSigned-off-by: Andrea Parri (Microsoft) <parri.andrea@gmail.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com> \nDate: 2020-11-18 - 14:53:48 \nAuthor: Andrea Parri (Microsoft)"}], "links": [{"source": "0477e92881850d44910a7e94fc2c46f96faa131f", "target": "cd796ed3345030aa1bb332fe5c793b3dddaf56e7"}, {"source": "bcee5278958802b40ee8b26679155a6d9231783e", "target": "cd796ed3345030aa1bb332fe5c793b3dddaf56e7"}, {"source": "ab91292cb3e9f43d9c6839d7572d17b35bc21710", "target": "0477e92881850d44910a7e94fc2c46f96faa131f"}, {"source": "d49248eb25a223b238cd7687ea92b080f595a323", "target": "ab91292cb3e9f43d9c6839d7572d17b35bc21710"}, {"source": "264f53b41946dcabb2b3304190839ab5670c7825", "target": "ab91292cb3e9f43d9c6839d7572d17b35bc21710"}, {"source": "f5226f1d20c4113922dbe7742c416f06700c1ea9", "target": "d49248eb25a223b238cd7687ea92b080f595a323"}, {"source": "c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9", "target": "d49248eb25a223b238cd7687ea92b080f595a323"}, {"source": "8100a58044f8f502a53d90af96d6030767df0fbd", "target": "f5226f1d20c4113922dbe7742c416f06700c1ea9"}, {"source": "a4b98a7512f18534ce33a7e98e49115af59ffa00", "target": "f5226f1d20c4113922dbe7742c416f06700c1ea9"}, {"source": "9f6b28d498ba084dff970ad95796642f804ffcd8", "target": "8100a58044f8f502a53d90af96d6030767df0fbd"}, {"source": "84da009f06e60cf59d5e861f8e2101d2d3885517", "target": "8100a58044f8f502a53d90af96d6030767df0fbd"}, {"source": "592d9a0835c97f54744a7c3ce845c16735c0ab14", "target": "9f6b28d498ba084dff970ad95796642f804ffcd8"}, {"source": "fc17db8aa4c53cbd2d5469bb0521ea0f0a6dbb27", "target": "9f6b28d498ba084dff970ad95796642f804ffcd8"}, {"source": "ff615c98035729776a74f9c86c3b137ae35ac1d3", "target": "592d9a0835c97f54744a7c3ce845c16735c0ab14"}, {"source": "e6585a493921991653be1fd65c3aa3fb90b000ae", "target": "ff615c98035729776a74f9c86c3b137ae35ac1d3"}, {"source": "4d916140bf28ff027997144ea1bb4299e1536f87", "target": "ff615c98035729776a74f9c86c3b137ae35ac1d3"}, {"source": "12c0ab6658dea4709189c3730d2431c52808428e", "target": "e6585a493921991653be1fd65c3aa3fb90b000ae"}, {"source": "7d32358be8acb119dcfe39b6cf67ec6d94bf1fe7", "target": "e6585a493921991653be1fd65c3aa3fb90b000ae"}, {"source": "7059c2c00a2196865c2139083cbef47cd18109b6", "target": "12c0ab6658dea4709189c3730d2431c52808428e"}, {"source": "309d08d9b3a3659ab3f239d27d4e38b670b08fc9", "target": "12c0ab6658dea4709189c3730d2431c52808428e"}, {"source": "7a5bde37983d37783161681ff7c6122dfd081791", "target": "309d08d9b3a3659ab3f239d27d4e38b670b08fc9"}, {"source": "3351b16af4946fff0d46481d155fb91adb28b1f9", "target": "7a5bde37983d37783161681ff7c6122dfd081791"}, {"source": "573a259336f8c57739bdaf035aa7abbae7d9a713", "target": "3351b16af4946fff0d46481d155fb91adb28b1f9"}, {"source": "d8cbe8bfa7df3c680ddfd5e1eee3a5c86d8dc764", "target": "573a259336f8c57739bdaf035aa7abbae7d9a713"}, {"source": "4e60340c5ca560278c938726235bc0daa5fc8c7f", "target": "d8cbe8bfa7df3c680ddfd5e1eee3a5c86d8dc764"}, {"source": "b11a76b37a5aa7b07c3e3eeeaae20b25475bddd3", "target": "4e60340c5ca560278c938726235bc0daa5fc8c7f"}, {"source": "e91d8d78237de8d7120c320b3645b7100848f24d", "target": "b11a76b37a5aa7b07c3e3eeeaae20b25475bddd3"}, {"source": "8199be001a470209f5c938570cc199abb012fe53", "target": "e91d8d78237de8d7120c320b3645b7100848f24d"}, {"source": "becaba65f62f88e553ec92ed98370e9d2b18e629", "target": "8199be001a470209f5c938570cc199abb012fe53"}, {"source": "2bf509d96d84c3336d08375e8af34d1b85ee71c8", "target": "becaba65f62f88e553ec92ed98370e9d2b18e629"}, {"source": "11fb479ff5d9872ddff02dd533c16d60372c86b2", "target": "2bf509d96d84c3336d08375e8af34d1b85ee71c8"}, {"source": "33256ce194110874d4bc90078b577c59f9076c59", "target": "11fb479ff5d9872ddff02dd533c16d60372c86b2"}, {"source": "d5750cd3c5486e9c0fa11100df01de8ca0c13fa7", "target": "7d32358be8acb119dcfe39b6cf67ec6d94bf1fe7"}, {"source": "1a16af33ba88ef25e206a13366379179cae79d23", "target": "264f53b41946dcabb2b3304190839ab5670c7825"}, {"source": "12cb908a11b2544b5f53e9af856e6b6a90ed5533", "target": "84da009f06e60cf59d5e861f8e2101d2d3885517"}, {"source": "4e9a5ae8df5b3365183150f6df49e49dece80d8c", "target": "12cb908a11b2544b5f53e9af856e6b6a90ed5533"}, {"source": "8dcc0e19dfbd73ad6b3172924d6da8f7f3f8b3b0", "target": "4e9a5ae8df5b3365183150f6df49e49dece80d8c"}, {"source": "33256ce194110874d4bc90078b577c59f9076c59", "target": "7059c2c00a2196865c2139083cbef47cd18109b6"}, {"source": "8c3b55a299c325830a987de21dab6a89ecb71164", "target": "7059c2c00a2196865c2139083cbef47cd18109b6"}, {"source": "be1515bad737ee9efe9229ab8313a236bfa03c5c", "target": "33256ce194110874d4bc90078b577c59f9076c59"}, {"source": "2bf9545626f8d09f552ab86d0047a415fe9a07a0", "target": "33256ce194110874d4bc90078b577c59f9076c59"}, {"source": "619ca2664cc6ebf6ecaff347d15ee8093b634e0c", "target": "be1515bad737ee9efe9229ab8313a236bfa03c5c"}, {"source": "7e7986f9d3ba69a7375a41080a1f8c8012cb0923", "target": "be1515bad737ee9efe9229ab8313a236bfa03c5c"}, {"source": "32f741b02f1a84dd15cdaf74ea3c8d724f812318", "target": "619ca2664cc6ebf6ecaff347d15ee8093b634e0c"}, {"source": "d4e904198c5b46c140fdd04492df6ec31f1f03a5", "target": "32f741b02f1a84dd15cdaf74ea3c8d724f812318"}, {"source": "a1ee28117077c3bf24e5ab6324c835eaab629c45", "target": "32f741b02f1a84dd15cdaf74ea3c8d724f812318"}, {"source": "312b0bcd402a003053914e13d962e82be906cf41", "target": "d4e904198c5b46c140fdd04492df6ec31f1f03a5"}, {"source": "ea64370bcae126a88cd26a16f1abcc23ab2b9a55", "target": "d4e904198c5b46c140fdd04492df6ec31f1f03a5"}, {"source": "8762340561397fce0f0b41220ed9619101c870d0", "target": "312b0bcd402a003053914e13d962e82be906cf41"}, {"source": "85dad327d9b58b4c9ce08189a2707167de392d23", "target": "312b0bcd402a003053914e13d962e82be906cf41"}, {"source": "b3298500b23f0b53a8d81e0d5ad98a29db71f4f0", "target": "8762340561397fce0f0b41220ed9619101c870d0"}, {"source": "65f33b35722952fa076811d5686bfd8a611a80fa", "target": "8762340561397fce0f0b41220ed9619101c870d0"}, {"source": "c62dac0a35bb6d351cd568e97090c5fd3e7aa532", "target": "2bf9545626f8d09f552ab86d0047a415fe9a07a0"}, {"source": "61e6fe59ede155881a622f5901551b1cc8748f6a", "target": "c62dac0a35bb6d351cd568e97090c5fd3e7aa532"}, {"source": "bde3808bc8c2741ad3d804f84720409aee0c2972", "target": "65f33b35722952fa076811d5686bfd8a611a80fa"}, {"source": "e87297fa080a7ed6b431873c771b3801cab573f5", "target": "b3298500b23f0b53a8d81e0d5ad98a29db71f4f0"}, {"source": "bde3808bc8c2741ad3d804f84720409aee0c2972", "target": "b3298500b23f0b53a8d81e0d5ad98a29db71f4f0"}, {"source": "f05c4403db5bba881d4964e731f6da35be46aabd", "target": "bde3808bc8c2741ad3d804f84720409aee0c2972"}, {"source": "3ee16db390b42b8a21f2ad2ea2518f3469c6e532", "target": "f05c4403db5bba881d4964e731f6da35be46aabd"}, {"source": "857c4c0a8b2888d806f4308c58f59a6a81a1dee9", "target": "3ee16db390b42b8a21f2ad2ea2518f3469c6e532"}, {"source": "bbe2ba04c5a92a49db8a42c850a5a2f6481e47eb", "target": "e87297fa080a7ed6b431873c771b3801cab573f5"}, {"source": "de9b485d1dc993f1fb579b5d15a8176284627f4a", "target": "e87297fa080a7ed6b431873c771b3801cab573f5"}, {"source": "54ffccbf053b5b6ca4f6e45094b942fab92a25fc", "target": "c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9"}, {"source": "45c5775460f32ed8cdb7c16986ae1a2c254346b3", "target": "a4b98a7512f18534ce33a7e98e49115af59ffa00"}, {"source": "97ad4a77f23e30801d2c0ef0c12b59f0e5760e6e", "target": "45c5775460f32ed8cdb7c16986ae1a2c254346b3"}, {"source": "d5c65d32dc240bf600d9e54250a8133e93ece60a", "target": "97ad4a77f23e30801d2c0ef0c12b59f0e5760e6e"}, {"source": "da881ded10a65885cdcb87ab817eea3acf23dcf9", "target": "d5c65d32dc240bf600d9e54250a8133e93ece60a"}, {"source": "b48a7e755939940136266248e79f9e4bdbe99521", "target": "da881ded10a65885cdcb87ab817eea3acf23dcf9"}, {"source": "3f203f057edfcf6bd02c6b942799262bfcf31f73", "target": "b48a7e755939940136266248e79f9e4bdbe99521"}, {"source": "bf193bfc12dbc3754fc8a6e0e1e3702f1af2f772", "target": "3f203f057edfcf6bd02c6b942799262bfcf31f73"}, {"source": "5353219ffdff68f861684a642388d6e926547698", "target": "de9b485d1dc993f1fb579b5d15a8176284627f4a"}, {"source": "94cfbd05e46a31cc181e7ac6bc4b32ac09f8864f", "target": "5353219ffdff68f861684a642388d6e926547698"}, {"source": "efd6d85a18102241538dd1cc257948a0dbe6fae6", "target": "5353219ffdff68f861684a642388d6e926547698"}, {"source": "aac06646aa85772eed49931d721e917209cabb51", "target": "94cfbd05e46a31cc181e7ac6bc4b32ac09f8864f"}, {"source": "ccc9e67ab26feda7e62749bb54c05d7abe07dca9", "target": "94cfbd05e46a31cc181e7ac6bc4b32ac09f8864f"}, {"source": "59463eb88829f646aed13283fd84d02a475334fe", "target": "ea64370bcae126a88cd26a16f1abcc23ab2b9a55"}, {"source": "796317848517292eb951d8876773b98867cf3c28", "target": "59463eb88829f646aed13283fd84d02a475334fe"}, {"source": "509a15421674b9e1a3e1916939d0d0efd3e578da", "target": "796317848517292eb951d8876773b98867cf3c28"}, {"source": "fee5be18524f961de653fe6103f927c84ebbfd38", "target": "bbe2ba04c5a92a49db8a42c850a5a2f6481e47eb"}, {"source": "6f076ce6ab1631abf566a6fb830c02fe5797be9a", "target": "bbe2ba04c5a92a49db8a42c850a5a2f6481e47eb"}, {"source": "c82a505c007fb754af144d5157e05fa7fd858157", "target": "fee5be18524f961de653fe6103f927c84ebbfd38"}, {"source": "b1cae1f84a0f609a34ebcaa087fbecef32f69882", "target": "fee5be18524f961de653fe6103f927c84ebbfd38"}, {"source": "72d1249e2ffdbc344e465031ec5335fa3489d62e", "target": "c82a505c007fb754af144d5157e05fa7fd858157"}, {"source": "960f4f8a4e60da610af73c1264673f71f5a36efd", "target": "c82a505c007fb754af144d5157e05fa7fd858157"}, {"source": "9608fa653059c3f72faab0c148ac8773c46e7314", "target": "6f076ce6ab1631abf566a6fb830c02fe5797be9a"}, {"source": "d421e466c2373095f165ddd25cbabd6c5b077928", "target": "6f076ce6ab1631abf566a6fb830c02fe5797be9a"}, {"source": "b336e6b25e2d053c482ee4339787e6428f390864", "target": "d421e466c2373095f165ddd25cbabd6c5b077928"}, {"source": "8a78a440108e55ddd845b0ef46df575248667520", "target": "b336e6b25e2d053c482ee4339787e6428f390864"}, {"source": "1d2bb5ad89f47d8ce8aedc70ef85059ab3870292", "target": "8a78a440108e55ddd845b0ef46df575248667520"}, {"source": "9608fa653059c3f72faab0c148ac8773c46e7314", "target": "1d2bb5ad89f47d8ce8aedc70ef85059ab3870292"}, {"source": "43c13605bad44b8abbc9776d6e63f62ccb7a47d6", "target": "9608fa653059c3f72faab0c148ac8773c46e7314"}, {"source": "13de4ed9e3a9ccbe54d05f7d5c773f69ecaf6c64", "target": "43c13605bad44b8abbc9776d6e63f62ccb7a47d6"}, {"source": "6392b5b28e0e00171018ecd3ced3554f95b9bb46", "target": "13de4ed9e3a9ccbe54d05f7d5c773f69ecaf6c64"}, {"source": "82a10dc7f0960735f40e8d7d3bee56934291600f", "target": "6392b5b28e0e00171018ecd3ced3554f95b9bb46"}, {"source": "74a8c816fa8fa7862df870660e9821abb56649fe", "target": "6392b5b28e0e00171018ecd3ced3554f95b9bb46"}, {"source": "391119fb5c5c4bdb4d57c7ffeb5e8d18560783d1", "target": "82a10dc7f0960735f40e8d7d3bee56934291600f"}, {"source": "832e09798c261cf58de3a68cfcc6556408c16a5a", "target": "391119fb5c5c4bdb4d57c7ffeb5e8d18560783d1"}, {"source": "062c9cdf60a1e581b1002d372f1cf8e745fe3c16", "target": "72d1249e2ffdbc344e465031ec5335fa3489d62e"}, {"source": "4f134b89a24b965991e7c345b9a4591821f7c2a6", "target": "062c9cdf60a1e581b1002d372f1cf8e745fe3c16"}, {"source": "34816d20f173a90389c8a7e641166d8ea9dce70a", "target": "4f134b89a24b965991e7c345b9a4591821f7c2a6"}, {"source": "fae3a13d2a3d49a89391889808428cf1e72afbd7", "target": "8dcc0e19dfbd73ad6b3172924d6da8f7f3f8b3b0"}, {"source": "807982017730cfe853fce49ba26d453e31c84898", "target": "74a8c816fa8fa7862df870660e9821abb56649fe"}, {"source": "46ee4abb10a07bd8f8ce910ee6b4ae6a947d7f63", "target": "bf193bfc12dbc3754fc8a6e0e1e3702f1af2f772"}, {"source": "c98fff7332dbd6e028969f8c2bda3d7bc7a024d8", "target": "46ee4abb10a07bd8f8ce910ee6b4ae6a947d7f63"}, {"source": "5debf02131227d39988e44adf5090fb796fa8466", "target": "fc17db8aa4c53cbd2d5469bb0521ea0f0a6dbb27"}, {"source": "ac2db9488cf21de0be7899c1e5963e5ac0ff351f", "target": "efd6d85a18102241538dd1cc257948a0dbe6fae6"}, {"source": "7e0b367db85ef7b91399006253759a024eab7653", "target": "ac2db9488cf21de0be7899c1e5963e5ac0ff351f"}, {"source": "acab02c1af43d3a9051524579b1c3dcfbfa5479d", "target": "7e0b367db85ef7b91399006253759a024eab7653"}, {"source": "aba84871bd4f52c4dfcf3ad5d4501a6c9d2de90e", "target": "832e09798c261cf58de3a68cfcc6556408c16a5a"}, {"source": "ff9924897f8bfed82e61894b373ab9d2dfea5b10", "target": "aba84871bd4f52c4dfcf3ad5d4501a6c9d2de90e"}, {"source": "6ee50c8e262a0f0693dad264c3c99e30e6442a56", "target": "ff9924897f8bfed82e61894b373ab9d2dfea5b10"}, {"source": "07500a6085806d97039ebcba8d9b8b29129f0106", "target": "6ee50c8e262a0f0693dad264c3c99e30e6442a56"}, {"source": "3bb61aa61828499a7d0f5e560051625fd02ae7e4", "target": "34816d20f173a90389c8a7e641166d8ea9dce70a"}, {"source": "37eade64eb11c6d548c9a7030ccc655decfb8fa0", "target": "ccc9e67ab26feda7e62749bb54c05d7abe07dca9"}, {"source": "aff76ab795364569b1cac58c1d0bc7df956e3899", "target": "37eade64eb11c6d548c9a7030ccc655decfb8fa0"}, {"source": "78b2eb8a1f10f366681acad8d21c974c1f66791a", "target": "aff76ab795364569b1cac58c1d0bc7df956e3899"}, {"source": "2bfdf302465a5eab941e551e2869a96bb473f66f", "target": "78b2eb8a1f10f366681acad8d21c974c1f66791a"}, {"source": "9261a1db80bc81dd445cd6dcfb466b632ad9faa8", "target": "2bfdf302465a5eab941e551e2869a96bb473f66f"}, {"source": "1de67a3dee7a279ebe4d892b359fe3696938ec15", "target": "61e6fe59ede155881a622f5901551b1cc8748f6a"}, {"source": "384a9565f70a876c2e78e58c5ca0bbf0547e4f6d", "target": "1de67a3dee7a279ebe4d892b359fe3696938ec15"}, {"source": "14718b3e129b058cb716a60c6faf40ef68661c54", "target": "384a9565f70a876c2e78e58c5ca0bbf0547e4f6d"}, {"source": "2c6ffa9e9b11bdfa267fe05ad1e98d3491b4224f", "target": "3bb61aa61828499a7d0f5e560051625fd02ae7e4"}, {"source": "bb95d60783f1ac85883c7ae33cafa85236b6179e", "target": "2c6ffa9e9b11bdfa267fe05ad1e98d3491b4224f"}, {"source": "2c602741b51daa12f8457f222ce9ce9c4825d067", "target": "2c6ffa9e9b11bdfa267fe05ad1e98d3491b4224f"}, {"source": "8a02ec8f35779335b81577903832c2b3c495e979", "target": "bb95d60783f1ac85883c7ae33cafa85236b6179e"}, {"source": "509a15421674b9e1a3e1916939d0d0efd3e578da", "target": "8a02ec8f35779335b81577903832c2b3c495e979"}, {"source": "832ba596494b2c9eac7760259eff2d8b7dcad0ee", "target": "07500a6085806d97039ebcba8d9b8b29129f0106"}, {"source": "4179b00c04d18ea7013f68d578d80f3c9d13150a", "target": "832ba596494b2c9eac7760259eff2d8b7dcad0ee"}, {"source": "9b15596c5006d82b2f82810e8cbf80d8c6e7e7b4", "target": "807982017730cfe853fce49ba26d453e31c84898"}, {"source": "568d3434178b00274615190a19d29c3d235b4e6d", "target": "9b15596c5006d82b2f82810e8cbf80d8c6e7e7b4"}, {"source": "5febcdef30902fa870128b9789b873199f13aff1", "target": "568d3434178b00274615190a19d29c3d235b4e6d"}, {"source": "abfccc3af786bb33210e39638268ea3a7bf80e63", "target": "5febcdef30902fa870128b9789b873199f13aff1"}, {"source": "a2bd4097b3ec242f4de4924db463a9c94530e03a", "target": "b1cae1f84a0f609a34ebcaa087fbecef32f69882"}, {"source": "e9acf0298c664f825e6f1158f2a97341bf9e03ca", "target": "14718b3e129b058cb716a60c6faf40ef68661c54"}, {"source": "f54db39fbe40731c40aefdd3bc26e7d56d668c64", "target": "a1ee28117077c3bf24e5ab6324c835eaab629c45"}, {"source": "98701a2a861fa87a5055cf2809758e8725e8b146", "target": "2c602741b51daa12f8457f222ce9ce9c4825d067"}, {"source": "2867e1eac61016f59b3d730e3f7aa488e186e917", "target": "4179b00c04d18ea7013f68d578d80f3c9d13150a"}, {"source": "0643334902fcdc770e2d9555811200213339a3f6", "target": "2867e1eac61016f59b3d730e3f7aa488e186e917"}, {"source": "ef6900acc89ecfc78ceb0eb1605c954dd6f2ca05", "target": "509a15421674b9e1a3e1916939d0d0efd3e578da"}, {"source": "f43691b59fae581ca83349539c686ecf4a01e42d", "target": "ef6900acc89ecfc78ceb0eb1605c954dd6f2ca05"}, {"source": "14483cbf040fcb38113497161088a1ce8ce5d713", "target": "0643334902fcdc770e2d9555811200213339a3f6"}, {"source": "e7b624183d921b49ef0a96329f21647d38865ee9", "target": "857c4c0a8b2888d806f4308c58f59a6a81a1dee9"}, {"source": "89478335718c98557f10470a9bc5c555b9261c4e", "target": "e7b624183d921b49ef0a96329f21647d38865ee9"}, {"source": "35d2835d2ac41dc0b3e3469f8e2b08ce9709ace8", "target": "89478335718c98557f10470a9bc5c555b9261c4e"}, {"source": "cf03f316ad20dac16b5adae3f6dedd7d188c7f65", "target": "960f4f8a4e60da610af73c1264673f71f5a36efd"}, {"source": "de7b3f8164cfdf99879ed7ca1d53bace25700929", "target": "14483cbf040fcb38113497161088a1ce8ce5d713"}, {"source": "ba246c175116e2e8fa4fdfa5f8e958e086a9a818", "target": "de7b3f8164cfdf99879ed7ca1d53bace25700929"}, {"source": "b71ec952234610b4f90ef17a2fdcb124d5320070", "target": "ba246c175116e2e8fa4fdfa5f8e958e086a9a818"}, {"source": "2aab1561439032be2e98811dd0ddbeb5b2ae4c61", "target": "8c3b55a299c325830a987de21dab6a89ecb71164"}, {"source": "59612b24f78a0b61fe078ec9dff2e48e9cec52c0", "target": "d5750cd3c5486e9c0fa11100df01de8ca0c13fa7"}, {"source": "a48491c65b513e5cdc3e7a886a4db915f848a5f5", "target": "2aab1561439032be2e98811dd0ddbeb5b2ae4c61"}, {"source": "42f687038bcc34aa919e0e4c29b04e4cda3f6a79", "target": "85dad327d9b58b4c9ce08189a2707167de392d23"}, {"source": "3b8c72d076c42bf27284cda7b2b2b522810686f8", "target": "42f687038bcc34aa919e0e4c29b04e4cda3f6a79"}]}