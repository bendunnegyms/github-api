{"nodes": [{"id": "3644e2d2dda78e21edd8f5415b6d7ab03f5f54f3", "date": "2020-12-18 - LATEST", "metadata": "Message: mm/filemap: fix infinite loop in generic_file_buffered_read()\n\nIf iter->count is 0 and iocb->ki_pos is page aligned, this causes\nnr_pages to be 0.\n\nThen in generic_file_buffered_read_get_pages() find_get_pages_contig()\nreturns 0 - because we asked for 0 pages, so we call\ngeneric_file_buffered_read_no_cached_page() which attempts to add a page\nto the page cache, which fails with -EEXIST, and then we loop. Oops...\n\nSigned-off-by: Kent Overstreet <kent.overstreet@gmail.com>\nReported-by: Jens Axboe <axboe@kernel.dk>\nReviewed-by: Jens Axboe <axboe@kernel.dk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-18 - 09:07:11 \nAuthor: Kent Overstreet\nLATEST COMMIT"}, {"id": "a0b96314870f7eff6d15a242cb162dfc46b3c284", "date": "2020-12-18", "metadata": "Message: Merge tag 'xfs-5.11-merge-4' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux\n\nPull xfs updates from Darrick Wong:\n \"In this release we add the ability to set a 'needsrepair' flag\n  indicating that we /know/ the filesystem requires xfs_repair, but\n  other than that, it's the usual strengthening of metadata validation\n  and miscellaneous cleanups.\n\n  Summary:\n\n   - Introduce a \"needsrepair\" \"feature\" to flag a filesystem as needing\n     a pass through xfs_repair. This is key to enabling filesystem\n     upgrades (in xfs_db) that require xfs_repair to make minor\n     adjustments to metadata.\n\n   - Refactor parameter checking of recovered log intent items so that\n     we actually use the same validation code as them that generate the\n     intent items.\n\n   - Various fixes to online scrub not reacting correctly to directory\n     entries pointing to inodes that cannot be igetted.\n\n   - Refactor validation helpers for data and rt volume extents.\n\n   - Refactor XFS_TRANS_DQ_DIRTY out of existence.\n\n   - Fix a longstanding bug where mounting with \"uqnoenforce\" would\n     start user quotas in non-enforcing mode but /proc/mounts would\n     display \"usrquota\", implying that they are being enforced.\n\n   - Don't flag dax+reflink inodes as corruption since that is a valid\n     (but not fully functional) combination right now.\n\n   - Clean up raid stripe validation functions.\n\n   - Refactor the inode allocation code to be more straightforward.\n\n   - Small prep cleanup for idmapping support.\n\n   - Get rid of the xfs_buf_t typedef\"\n\n* tag 'xfs-5.11-merge-4' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux: (40 commits)\n  xfs: remove xfs_buf_t typedef\n  fs/xfs: convert comma to semicolon\n  xfs: open code updating i_mode in xfs_set_acl\n  xfs: remove xfs_vn_setattr_nonsize\n  xfs: kill ialloced in xfs_dialloc()\n  xfs: spilt xfs_dialloc() into 2 functions\n  xfs: move xfs_dialloc_roll() into xfs_dialloc()\n  xfs: move on-disk inode allocation out of xfs_ialloc()\n  xfs: introduce xfs_dialloc_roll()\n  xfs: convert noroom, okalloc in xfs_dialloc() to bool\n  xfs: don't catch dax+reflink inodes as corruption in verifier\n  xfs: fix the forward progress assertion in xfs_iwalk_run_callbacks\n  xfs: remove unneeded return value check for *init_cursor()\n  xfs: introduce xfs_validate_stripe_geometry()\n  xfs: show the proper user quota options\n  xfs: remove the unused XFS_B_FSB_OFFSET macro\n  xfs: remove unnecessary null check in xfs_generic_create\n  xfs: directly return if the delta equal to zero\n  xfs: check tp->t_dqinfo value instead of the XFS_TRANS_DQ_DIRTY flag\n  xfs: delete duplicated tp->t_dqinfo null check and allocation\n  ... \nDate: 2020-12-18 - 20:50:18 \nAuthor: Linus Torvalds"}, {"id": "4862c741bd440813cabc5e93351f0950c1cb19d9", "date": "2020-12-18", "metadata": "Message: Merge tag 'ktest-v5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-ktest\n\nPull ktest updates from Steven Rostedt:\n \"No new features. Just a couple of fixes that I had in my local\n  repository that fixed issues with sending the result emails\"\n\n* tag 'ktest-v5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-ktest:\n  ktest.pl: Fix the logic for truncating the size of the log file for email\n  ktest.pl: If size of log is too big to email, email error message \nDate: 2020-12-18 - 20:46:43 \nAuthor: Linus Torvalds"}, {"id": "c59c7588fc922e27c378a7e2a920b889bd6bf872", "date": "2020-12-18", "metadata": "Message: Merge tag 'drm-next-2020-12-18' of git://anongit.freedesktop.org/drm/drm\n\nPull more drm updates from Daniel Vetter:\n \"UAPI Changes:\n\n   - Only enable char/agp uapi when CONFIG_DRM_LEGACY is set\n\n  Cross-subsystem Changes:\n\n   - vma_set_file helper to make vma->vm_file changing less brittle,\n     acked by Andrew\n\n  Core Changes:\n\n   - dma-buf heaps improvements\n\n   - pass full atomic modeset state to driver callbacks\n\n   - shmem helpers: cached bo by default\n\n   - cleanups for fbdev, fb-helpers\n\n   - better docs for drm modes and SCALING_FITLER uapi\n\n   - ttm: fix dma32 page pool regression\n\n  Driver Changes:\n\n   - multi-hop regression fixes for amdgpu, radeon, nouveau\n\n   - lots of small amdgpu hw enabling fixes (display, pm, ...)\n\n   - fixes for imx, mcde, meson, some panels, virtio, qxl, i915, all\n     fairly minor\n\n   - some cleanups for legacy drm/fbdev drivers\"\n\n* tag 'drm-next-2020-12-18' of git://anongit.freedesktop.org/drm/drm: (117 commits)\n  drm/qxl: don't allocate a dma_address array\n  drm/nouveau: fix multihop when move doesn't work.\n  drm/i915/tgl: Fix REVID macros for TGL to fetch correct stepping\n  drm/i915: Fix mismatch between misplaced vma check and vma insert\n  drm/i915/perf: also include Gen11 in OATAILPTR workaround\n  Revert \"drm/i915: re-order if/else ladder for hpd_irq_setup\"\n  drm/amdgpu/disply: fix documentation warnings in display manager\n  drm/amdgpu: print mmhub client name for dimgrey_cavefish\n  drm/amdgpu: set mode1 reset as default for dimgrey_cavefish\n  drm/amd/display: Add get_dig_frontend implementation for DCEx\n  drm/radeon: remove h from printk format specifier\n  drm/amdgpu: remove h from printk format specifier\n  drm/amdgpu: Fix spelling mistake \"Heterogenous\" -> \"Heterogeneous\"\n  drm/amdgpu: fix regression in vbios reservation handling on headless\n  drm/amdgpu/SRIOV: Extend VF reset request wait period\n  drm/amdkfd: correct amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu log.\n  drm/amd/display: Adding prototype for dccg21_update_dpp_dto()\n  drm/amdgpu: print what method we are using for runtime pm\n  drm/amdgpu: simplify logic in atpx resume handling\n  drm/amdgpu: no need to call pci_ignore_hotplug for _PR3\n  ... \nDate: 2020-12-18 - 20:38:28 \nAuthor: Linus Torvalds"}, {"id": "432c19a8d965aa0123e0a81492492a7cb1da5257", "date": "2020-12-18", "metadata": "Message: Merge tag 'thermal-v5.11-2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/thermal/linux\n\nPull thermal fixlet from Daniel Lezcano:\n \"A trivial change which fell through the cracks:\n\n  Add Alder Lake support ACPI ids (Srinivas Pandruvada)\"\n\n* tag 'thermal-v5.11-2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/thermal/linux:\n  thermal: int340x: Support Alder Lake \nDate: 2020-12-18 - 20:19:37 \nAuthor: Linus Torvalds"}, {"id": "a087241716a6cea8518ca33839276a9648d91cef", "date": "2020-12-18", "metadata": "Message: Merge tag 's390-5.11-2' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux\n\nPull more s390 updates from Heiko Carstens:\n \"This is mainly to decouple udelay() and arch_cpu_idle() and simplify\n  both of them.\n\n  Summary:\n\n   - Always initialize kernel stack backchain when entering the kernel,\n     so that unwinding works properly.\n\n   - Fix stack unwinder test case to avoid rare interrupt stack\n     corruption.\n\n   - Simplify udelay() and just let it busy loop instead of implementing\n     a complex logic.\n\n   - arch_cpu_idle() cleanup.\n\n   - Some other minor improvements\"\n\n* tag 's390-5.11-2' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux:\n  s390/zcrypt: convert comma to semicolon\n  s390/idle: allow arch_cpu_idle() to be kprobed\n  s390/idle: remove raw_local_irq_save()/restore() from arch_cpu_idle()\n  s390/idle: merge enabled_wait() and arch_cpu_idle()\n  s390/delay: remove udelay_simple()\n  s390/irq: select HAVE_IRQ_EXIT_ON_IRQ_STACK\n  s390/delay: simplify udelay\n  s390/test_unwind: use timer instead of udelay\n  s390/test_unwind: fix CALL_ON_STACK tests\n  s390: make calls to TRACE_IRQS_OFF/TRACE_IRQS_ON balanced\n  s390: always clear kernel stack backchain before calling functions \nDate: 2020-12-18 - 19:08:06 \nAuthor: Linus Torvalds"}, {"id": "5ba836eb9fdb07843cfa004e511f333745adb76e", "date": "2020-12-18", "metadata": "Message: Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull more arm64 updates from Catalin Marinas:\n \"These are some some trivial updates that mostly fix/clean-up code\n  pushed during the merging window:\n\n   - Work around broken GCC 4.9 handling of \"S\" asm constraint\n\n   - Suppress W=1 missing prototype warnings\n\n   - Warn the user when a small VA_BITS value cannot map the available\n     memory\n\n   - Drop the useless update to per-cpu cycles\"\n\n* tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux:\n  arm64: Work around broken GCC 4.9 handling of \"S\" constraint\n  arm64: Warn the user when a small VA_BITS value wastes memory\n  arm64: entry: suppress W=1 prototype warnings\n  arm64: topology: Drop the useless update to per-cpu cycles \nDate: 2020-12-18 - 18:57:27 \nAuthor: Linus Torvalds"}, {"id": "e2ae634014d3a8839a99f8897b3f6346a133a33b", "date": "2020-12-18", "metadata": "Message: Merge tag 'riscv-for-linus-5.11-mw0' of git://git.kernel.org/pub/scm/linux/kernel/git/riscv/linux\n\nPull RISC-V updates from Palmer Dabbelt:\n \"We have a handful of new kernel features for 5.11:\n\n   - Support for the contiguous memory allocator.\n\n   - Support for IRQ Time Accounting\n\n   - Support for stack tracing\n\n   - Support for strict /dev/mem\n\n   - Support for kernel section protection\n\n  I'm being a bit conservative on the cutoff for this round due to the\n  timing, so this is all the new development I'm going to take for this\n  cycle (even if some of it probably normally would have been OK). There\n  are, however, some fixes on the list that I will likely be sending\n  along either later this week or early next week.\n\n  There is one issue in here: one of my test configurations\n  (PREEMPT{,_DEBUG}=y) fails to boot on QEMU 5.0.0 (from April) as of\n  the .text.init alignment patch.\n\n  With any luck we'll sort out the issue, but given how many bugs get\n  fixed all over the place and how unrelated those features seem my\n  guess is that we're just running into something that's been lurking\n  for a while and has already been fixed in the newer QEMU (though I\n  wouldn't be surprised if it's one of these implicit assumptions we\n  have in the boot flow). If it was hardware I'd be strongly inclined to\n  look more closely, but given that users can upgrade their simulators\n  I'm less worried about it\"\n\n* tag 'riscv-for-linus-5.11-mw0' of git://git.kernel.org/pub/scm/linux/kernel/git/riscv/linux:\n  arm64: Use the generic devmem_is_allowed()\n  arm: Use the generic devmem_is_allowed()\n  RISC-V: Use the new generic devmem_is_allowed()\n  lib: Add a generic version of devmem_is_allowed()\n  riscv: Fixed kernel test robot warning\n  riscv: kernel: Drop unused clean rule\n  riscv: provide memmove implementation\n  RISC-V: Move dynamic relocation section under __init\n  RISC-V: Protect all kernel sections including init early\n  RISC-V: Align the .init.text section\n  RISC-V: Initialize SBI early\n  riscv: Enable ARCH_STACKWALK\n  riscv: Make stack walk callback consistent with generic code\n  riscv: Cleanup stacktrace\n  riscv: Add HAVE_IRQ_TIME_ACCOUNTING\n  riscv: Enable CMA support\n  riscv: Ignore Image.* and loader.bin\n  riscv: Clean up boot dir\n  riscv: Fix compressed Image formats build\n  RISC-V: Add kernel image sections to the resource tree \nDate: 2020-12-18 - 18:43:07 \nAuthor: Linus Torvalds"}, {"id": "4efd7faba5e0687ae9143b7e6a19547ede20a7dd", "date": "2020-12-18", "metadata": "Message: Merge tag 'drm-intel-next-fixes-2020-12-18' of git://anongit.freedesktop.org/drm/drm-intel into drm-next\n\ndrm/i915 fixes for the merge window\n\nSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nFrom: Jani Nikula <jani.nikula@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/87zh2bp34m.fsf@intel.com \nDate: 2020-12-18 - 15:22:10 \nAuthor: Daniel Vetter"}, {"id": "f96f62597ea48cc15d6b16bddf05dc25437dcf2d", "date": "2020-12-18", "metadata": "Message: drm/qxl: don't allocate a dma_address array\n\nThat seems to be unused.\n\nDaniel: Mike reported a warning when booting with qxl, which this\npatch fixes:\n\n[    1.815561] WARNING: CPU: 7 PID: 355 at drivers/gpu/drm/ttm/ttm_pool.c:365 ttm_pool_alloc+0x41b/0x540 [ttm]\n\nSigned-off-by: Christian K\u00f6nig <christian.koenig@amd.com>\nReported-by: Mike Galbraith <efault@gmx.de>\nTested-by: Mike Galbraith <efault@gmx.de>\nReferences: https://lore.kernel.org/lkml/7cb43d5b-4e6a-defc-1ab6-5f713ad5a963@amd.com/\nReviewed-by: David Airlie <airlied@redhat.com>\n[davnet: bring commit message up to par.]\nSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201218134243.110884-1-christian.koenig@amd.com \nDate: 2020-12-18 - 13:42:43 \nAuthor: Christian K\u00f6nig"}, {"id": "660a59953f4ff8a4958e73f7618445ff537582b2", "date": "2020-12-17", "metadata": "Message: drm/nouveau: fix multihop when move doesn't work.\n\nAs per the radeon/amdgpu fix don't use multihop if hw moves\naren't enabled.\n\nReported-by: Mike Galbraith <efault@gmx.de>\nTested-by: Mike Galbraith <efault@gmx.de>\nFixes: 0c8c0659d747 (\"drm/nouveau/ttm: use multihop\")\nSigned-off-by: Dave Airlie <airlied@redhat.com>\nSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201217200943.30511-1-airlied@gmail.com \nDate: 2020-12-17 - 20:09:43 \nAuthor: Dave Airlie"}, {"id": "046f70d31ddb2069941aec54966fec5b7fbc7b7b", "date": "2020-12-03", "metadata": "Message: drm/i915/tgl: Fix REVID macros for TGL to fetch correct stepping\n\nFix TGL REVID macros to fetch correct display/gt stepping based\non SOC rev id from INTEL_REVID() macro. Previously, we were just\nreturning the first element of the revid array instead of using\nthe correct index based on SOC rev id.\n\nFixes: c33298cb34f5 (\"drm/i915/tgl: Fix stepping WA matching\")\nCc: Jos\u00e9 Roberto de Souza <jose.souza@intel.com>\nCc: Matt Roper <matthew.d.roper@intel.com>\nCc: Lucas De Marchi <lucas.demarchi@intel.com>\nCc: Jani Nikula <jani.nikula@intel.com>\nCc: Ville Syrj\u00e4l\u00e4 <ville.syrjala@linux.intel.com>\nSigned-off-by: Aditya Swarup <aditya.swarup@intel.com>\nReviewed-by: Lucas De Marchi <lucas.demarchi@intel.com>\nSigned-off-by: Lucas De Marchi <lucas.demarchi@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201203072359.156682-1-aditya.swarup@intel.com\n(cherry picked from commit 83dbd74f8243f020d1ad8a3a3b3cd0795067920e)\nSigned-off-by: Jani Nikula <jani.nikula@intel.com> \nDate: 2020-12-03 - 07:23:58 \nAuthor: Aditya Swarup"}, {"id": "0e53656ad8abc99e0a80c3de611e593ebbf55829", "date": "2020-12-16", "metadata": "Message: drm/i915: Fix mismatch between misplaced vma check and vma insert\n\nWhen inserting a VMA, we restrict the placement to the low 4G unless the\ncaller opts into using the full range. This was done to allow usersapce\nthe opportunity to transition slowly from a 32b address space, and to\navoid breaking inherent 32b assumptions of some commands.\n\nHowever, for insert we limited ourselves to 4G-4K, but on verification\nwe allowed the full 4G. This causes some attempts to bind a new buffer\nto sporadically fail with -ENOSPC, but at other times be bound\nsuccessfully.\n\ncommit 48ea1e32c39d (\"drm/i915/gen9: Set PIN_ZONE_4G end to 4GB - 1\npage\") suggests that there is a genuine problem with stateless addressing\nthat cannot utilize the last page in 4G and so we purposefully excluded\nit. This means that the quick pin pass may cause us to utilize a buggy\nplacement.\n\nReported-by: CQ Tang <cq.tang@intel.com>\nTestcase: igt/gem_exec_params/larger-than-life-batch\nFixes: 48ea1e32c39d (\"drm/i915/gen9: Set PIN_ZONE_4G end to 4GB - 1 page\")\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: CQ Tang <cq.tang@intel.com>\nReviewed-by: CQ Tang <cq.tang@intel.com>\nReviewed-by: Matthew Auld <matthew.auld@intel.com>\nCc: <stable@vger.kernel.org> # v4.5+\nLink: https://patchwork.freedesktop.org/patch/msgid/20201216092951.7124-1-chris@chris-wilson.co.uk\n(cherry picked from commit 5f22cc0b134ab702d7f64b714e26018f7288ffee)\nSigned-off-by: Jani Nikula <jani.nikula@intel.com> \nDate: 2020-12-16 - 09:29:51 \nAuthor: Chris Wilson"}, {"id": "dd0e2193b1e41efe611d265cea2719df4e59560f", "date": "2020-11-26", "metadata": "Message: drm/i915/perf: also include Gen11 in OATAILPTR workaround\n\nCI shows this workaround is also needed on Gen11.\n\nSigned-off-by: Lionel Landwerlin <lionel.g.landwerlin@intel.com>\nFixes: 059a0beb486344 (\"drm/i915/perf: workaround register corruption in OATAILPTR\")\nReviewed-by: Umesh Nerlige Ramappa <umesh.nerlige.ramappa@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201126105155.540350-1-lionel.g.landwerlin@intel.com\n(cherry picked from commit fa5d598b8cbab0af92bac48fd60e74a893550923)\nSigned-off-by: Jani Nikula <jani.nikula@intel.com> \nDate: 2020-11-26 - 10:51:55 \nAuthor: Lionel Landwerlin"}, {"id": "2ccf2e03868455e508b4dc9fbd1bb1daebf2222e", "date": "2020-11-27", "metadata": "Message: Revert \"drm/i915: re-order if/else ladder for hpd_irq_setup\"\n\nWe now use ilk_hpd_irq_setup for all GMCH platforms that do not have\nhotplug. These are early gen3 and gen2 devices that now explode on boot\nas they try to access non-existent registers.\n\nFixes: 794d61a19090 (\"drm/i915: re-order if/else ladder for hpd_irq_setup\")\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: Lucas De Marchi <lucas.demarchi@intel.com>\nCc: Jos\u00e9 Roberto de Souza <jose.souza@intel.com>\nCc: Jani Nikula <jani.nikula@linux.intel.com>\nReviewed-by: Jani Nikula <jani.nikula@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201127145748.29491-1-chris@chris-wilson.co.uk\n(cherry picked from commit e5346a1ff38a405c14ce8e595269e9b7dcfbb2e9)\nSigned-off-by: Jani Nikula <jani.nikula@intel.com> \nDate: 2020-11-27 - 14:57:48 \nAuthor: Chris Wilson"}, {"id": "a409ed156a90093a03fe6a93721ddf4c591eac87", "date": "2020-12-18", "metadata": "Message: Merge tag 'gpio-v5.11-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio\n\nPull GPIO updates from Linus Walleij:\n \"This is the bulk of the GPIO changes for the v5.11 kernel cycle:\n\n  Core changes:\n\n   - Retired the old set-up function for GPIO IRQ chips. All chips now\n     use the template struct gpio_irq_chip and pass that to the core to\n     be set up alongside the gpio_chip. We can finally get rid of the\n     old cruft.\n\n   - Some refactoring and clean up of the core code.\n\n   - Support edge event timestamps to be stamped using REALTIME (wall\n     clock) timestamps. We have found solid use cases for this, so we\n     support it.\n\n  New drivers:\n\n   - MStar MSC313 GPIO driver.\n\n   - HiSilicon GPIO driver.\n\n  Driver improvements:\n\n   - The PCA953x driver now also supports the NXP PCAL9554B/C chips.\n\n   - The mockup driver can now be probed from the device tree which is\n     pretty useful for virtual prototyping of devices.\n\n   - The Rcar driver now supports .get_multiple()\n\n   - The MXC driver dropped some legacy and became a pure device tree\n     client.\n\n   - The Exar driver was moved over to the IDA interface for\n     enumerating, and also switched over to using regmap for register\n     access\"\n\n* tag 'gpio-v5.11-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio: (87 commits)\n  MAINTAINERS: Remove reference to non-existing file\n  gpio: hisi: Do not require ACPI for COMPILE_TEST\n  MAINTAINERS: Add maintainer for HiSilicon GPIO driver\n  gpio: gpio-hisi: Add HiSilicon GPIO support\n  gpio: cs5535: Simplify the return expression of cs5535_gpio_probe()\n  gpiolib: irq hooks: fix recursion in gpiochip_irq_unmask\n  dt-bindings: mt7621-gpio: convert bindings to YAML format\n  gpiolib: cdev: Flag invalid GPIOs as used\n  gpio: put virtual gpio device into their own submenu\n  drivers: gpio: amd8111: use SPDX-License-Identifier\n  drivers: gpio: amd8111: prefer dev_err()/dev_info() over raw printk\n  drivers: gpio: bt8xx: prefer dev_err()/dev_warn() over of raw printk\n  gpio: Add TODO item for debugfs interface\n  gpio: just plain warning when nonexisting gpio requested\n  tools: gpio: add option to report wall-clock time to gpio-event-mon\n  tools: gpio: add support for reporting realtime event clock to lsgpio\n  gpiolib: cdev: allow edge event timestamps to be configured as REALTIME\n  gpio: msc313: MStar MSC313 GPIO driver\n  dt-bindings: gpio: Binding for MStar MSC313 GPIO controller\n  dt-bindings: gpio: Add a binding header for the MSC313 GPIO driver\n  ... \nDate: 2020-12-18 - 02:07:20 \nAuthor: Linus Torvalds"}, {"id": "345b17acb1aa7a443741d9220f66b30d5ddd7c39", "date": "2020-12-18", "metadata": "Message: Merge tag 'for-linus-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/uml\n\nPull UML updates from Richard Weinberger:\n\n - IRQ handling cleanups\n\n - Support for suspend\n\n - Various fixes for UML specific drivers: ubd, vector, xterm\n\n* tag 'for-linus-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/uml: (32 commits)\n  um: Fix build w/o CONFIG_PM_SLEEP\n  um: time-travel: Correct time event IRQ delivery\n  um: irq/sigio: Support suspend/resume handling of workaround IRQs\n  um: time-travel: Actually apply \"free-until\" optimisation\n  um: chan_xterm: Fix fd leak\n  um: tty: Fix handling of close in tty lines\n  um: Monitor error events in IRQ controller\n  um: allocate a guard page to helper threads\n  um: support some of ARCH_HAS_SET_MEMORY\n  um: time-travel: avoid multiple identical propagations\n  um: Fetch registers only for signals which need them\n  um: Support suspend to RAM\n  um: Allow PM with suspend-to-idle\n  um: time: Fix read_persistent_clock64() in time-travel\n  um: Simplify os_idle_sleep() and sleep longer\n  um: Simplify IRQ handling code\n  um: Remove IRQ_NONE type\n  um: irq: Reduce irq_reg allocation\n  um: irq: Clean up and rename struct irq_fd\n  um: Clean up alarm IRQ chip name\n  ... \nDate: 2020-12-18 - 01:56:44 \nAuthor: Linus Torvalds"}, {"id": "787fec8ac15cc693b9a7bc1b4a338b92483d993c", "date": "2020-12-18", "metadata": "Message: Merge tag 'for-linus-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/ubifs\n\nPull jffs2, ubi and ubifs updates from Richard Weinberger:\n \"JFFS2:\n   - Fix for a remount regression\n   - Fix for an abnormal GC exit\n   - Fix for a possible NULL pointer issue while mounting\n\n  UBI:\n   - Add support ECC-ed NOR flash\n   - Removal of dead code\n\n  UBIFS:\n   - Make node dumping debug code more reliable\n   - Various cleanups: less ifdefs, less typos\n   - Fix for an info leak\"\n\n* tag 'for-linus-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/ubifs:\n  ubifs: ubifs_dump_node: Dump all branches of the index node\n  ubifs: ubifs_dump_sleb: Remove unused function\n  ubifs: Pass node length in all node dumping callers\n  Revert \"ubifs: Fix out-of-bounds memory access caused by abnormal value of node_len\"\n  ubifs: Limit dumping length by size of memory which is allocated for the node\n  ubifs: Remove the redundant return in dbg_check_nondata_nodes_order\n  jffs2: Fix NULL pointer dereference in rp_size fs option parsing\n  ubifs: Fixed print foramt mismatch in ubifs\n  ubi: Do not zero out EC and VID on ECC-ed NOR flashes\n  jffs2: remove trailing semicolon in macro definition\n  ubifs: Fix error return code in ubifs_init_authentication()\n  ubifs: wbuf: Don't leak kernel memory to flash\n  ubi: Remove useless code in bytes_str_to_int\n  ubifs: Fix the printing type of c->big_lpt\n  jffs2: Allow setting rp_size to zero during remounting\n  jffs2: Fix ignoring mounting options problem during remounting\n  jffs2: Fix GC exit abnormally\n  ubifs: Code cleanup by removing ifdef macro surrounding\n  jffs2: Fix if/else empty body warnings\n  ubifs: Delete duplicated words + other fixes \nDate: 2020-12-18 - 01:46:34 \nAuthor: Linus Torvalds"}, {"id": "e13300bdaa68f5487000e66baed1ff69bcb510bf", "date": "2020-12-18", "metadata": "Message: Merge tag '5.11-rc-smb3' of git://git.samba.org/sfrench/cifs-2.6\n\nPull cifs updates from Steve French:\n \"The largest part are for support of the newer mount API which has been\n  needed for cifs/smb3 mounts for a long time due to the new API's\n  better handling of remount, and better error reporting. There are\n  three additional small cleanup patches for this being tested, that are\n  not included yet.\n\n  This series also includes addition of support for the SMB3 witness\n  protocol which can provide important notifications from the server to\n  client on server address or export or network changes. This can be\n  useful for example in order to be notified before the failure - when a\n  server's IP address changes (in the future it will allow us to support\n  server notifications of when a share is moved).\n\n  It also includes three patches for stable e.g. some that better handle\n  some confusing error messages during session establishment\"\n\n* tag '5.11-rc-smb3' of git://git.samba.org/sfrench/cifs-2.6: (55 commits)\n  cifs: update internal module version number\n  cifs: Fix support for remount when not changing rsize/wsize\n  cifs: handle \"guest\" mount parameter\n  cifs: correct four aliased mount parms to allow use of previous names\n  cifs: Tracepoints and logs for tracing credit changes.\n  cifs: fix use after free in cifs_smb3_do_mount()\n  cifs: fix rsize/wsize to be negotiated values\n  cifs: Fix some error pointers handling detected by static checker\n  smb3: remind users that witness protocol is experimental\n  cifs: update super_operations to show_devname\n  cifs: fix uninitialized variable in smb3_fs_context_parse_param\n  cifs: update mnt_cifs_flags during reconfigure\n  cifs: move update of flags into a separate function\n  cifs: remove ctx argument from cifs_setup_cifs_sb\n  cifs: do not allow changing posix_paths during remount\n  cifs: uncomplicate printing the iocharset parameter\n  cifs: don't create a temp nls in cifs_setup_ipc\n  cifs: simplify handling of cifs_sb/ctx->local_nls\n  cifs: we do not allow changing username/password/unc/... during remount\n  cifs: add initial reconfigure support\n  ... \nDate: 2020-12-18 - 01:41:37 \nAuthor: Linus Torvalds"}, {"id": "d64c6f96ba86bd8b97ed8d6762a8c8cc1770d214", "date": "2020-12-17", "metadata": "Message: Merge tag 'net-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net\n\nPull networking fixes from Jakub Kicinski:\n \"Current release - always broken:\n\n   - net/smc: fix access to parent of an ib device\n\n   - devlink: use _BITUL() macro instead of BIT() in the UAPI header\n\n   - handful of mptcp fixes\n\n  Previous release - regressions:\n\n   - intel: AF_XDP: clear the status bits for the next_to_use descriptor\n\n   - dpaa2-eth: fix the size of the mapped SGT buffer\n\n  Previous release - always broken:\n\n   - mptcp: fix security context on server socket\n\n   - ethtool: fix string set id check\n\n   - ethtool: fix error paths in ethnl_set_channels()\n\n   - lan743x: fix rx_napi_poll/interrupt ping-pong\n\n   - qca: ar9331: fix sleeping function called from invalid context bug\"\n\n* tag 'net-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net: (32 commits)\n  net/sched: sch_taprio: reset child qdiscs before freeing them\n  nfp: move indirect block cleanup to flower app stop callback\n  octeontx2-af: Fix undetected unmap PF error check\n  net: nixge: fix spelling mistake in Kconfig: \"Instuments\" -> \"Instruments\"\n  qlcnic: Fix error code in probe\n  mptcp: fix pending data accounting\n  mptcp: push pending frames when subflow has free space\n  mptcp: properly annotate nested lock\n  mptcp: fix security context on server socket\n  net/mlx5: Fix compilation warning for 32-bit platform\n  mptcp: clear use_ack and use_map when dropping other suboptions\n  devlink: use _BITUL() macro instead of BIT() in the UAPI header\n  net: korina: fix return value\n  net/smc: fix access to parent of an ib device\n  ethtool: fix error paths in ethnl_set_channels()\n  nfc: s3fwrn5: Remove unused NCI prop commands\n  nfc: s3fwrn5: Remove the delay for NFC sleep\n  phy: fix kdoc warning\n  tipc: do sanity check payload of a netlink message\n  use __netdev_notify_peers in hyperv\n  ... \nDate: 2020-12-17 - 21:45:24 \nAuthor: Linus Torvalds"}, {"id": "0c6c887835b59c10602add88057c9c06f265effe", "date": "2020-12-17", "metadata": "Message: Merge tag 'for-linus' of git://github.com/openrisc/linux\n\nPull OpenRISC updates from Stafford Horne:\n\n - New drivers and OpenRISC support for the LiteX platform\n\n - A bug fix to support userspace gdb debugging\n\n - Fixes one compile issue with blk-iocost\n\n* tag 'for-linus' of git://github.com/openrisc/linux:\n  openrisc: add local64.h to fix blk-iocost build\n  openrisc: fix trap for debugger breakpoint signalling\n  openrisc: add support for LiteX\n  drivers/tty/serial: add LiteUART driver\n  dt-bindings: serial: document LiteUART bindings\n  drivers/soc/litex: add LiteX SoC Controller driver\n  dt-bindings: soc: document LiteX SoC Controller bindings\n  dt-bindings: vendor: add vendor prefix for LiteX \nDate: 2020-12-17 - 21:41:27 \nAuthor: Linus Torvalds"}, {"id": "8a5be36b9303ae167468d4f5e1b3c090b9981396", "date": "2020-12-17", "metadata": "Message: Merge tag 'powerpc-5.11-1' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux\n\nPull powerpc updates from Michael Ellerman:\n\n - Switch to the generic C VDSO, as well as some cleanups of our VDSO\n   setup/handling code.\n\n - Support for KUAP (Kernel User Access Prevention) on systems using the\n   hashed page table MMU, using memory protection keys.\n\n - Better handling of PowerVM SMT8 systems where all threads of a core\n   do not share an L2, allowing the scheduler to make better scheduling\n   decisions.\n\n - Further improvements to our machine check handling.\n\n - Show registers when unwinding interrupt frames during stack traces.\n\n - Improvements to our pseries (PowerVM) partition migration code.\n\n - Several series from Christophe refactoring and cleaning up various\n   parts of the 32-bit code.\n\n - Other smaller features, fixes & cleanups.\n\nThanks to: Alan Modra, Alexey Kardashevskiy, Andrew Donnellan, Aneesh\nKumar K.V, Ard Biesheuvel, Athira Rajeev, Balamuruhan S, Bill Wendling,\nC\u00e9dric Le Goater, Christophe Leroy, Christophe Lombard, Colin Ian King,\nDaniel Axtens, David Hildenbrand, Frederic Barrat, Ganesh Goudar,\nGautham R. Shenoy, Geert Uytterhoeven, Giuseppe Sacco, Greg Kurz,\nHarish, Jan Kratochvil, Jordan Niethe, Kaixu Xia, Laurent Dufour,\nLeonardo Bras, Madhavan Srinivasan, Mahesh Salgaonkar, Mathieu\nDesnoyers, Nathan Lynch, Nicholas Piggin, Oleg Nesterov, Oliver\nO'Halloran, Oscar Salvador, Po-Hsu Lin, Qian Cai, Qinglang Miao, Randy\nDunlap, Ravi Bangoria, Sachin Sant, Sandipan Das, Sebastian Andrzej\nSiewior , Segher Boessenkool, Srikar Dronamraju, Tyrel Datwyler, Uwe\nKleine-K\u00f6nig, Vincent Stehl\u00e9, Youling Tang, and Zhang Xiaoxu.\n\n* tag 'powerpc-5.11-1' of git://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux: (304 commits)\n  powerpc/32s: Fix cleanup_cpu_mmu_context() compile bug\n  powerpc: Add config fragment for disabling -Werror\n  powerpc/configs: Add ppc64le_allnoconfig target\n  powerpc/powernv: Rate limit opal-elog read failure message\n  powerpc/pseries/memhotplug: Quieten some DLPAR operations\n  powerpc/ps3: use dma_mapping_error()\n  powerpc: force inlining of csum_partial() to avoid multiple csum_partial() with GCC10\n  powerpc/perf: Fix Threshold Event Counter Multiplier width for P10\n  powerpc/mm: Fix hugetlb_free_pmd_range() and hugetlb_free_pud_range()\n  KVM: PPC: Book3S HV: Fix mask size for emulated msgsndp\n  KVM: PPC: fix comparison to bool warning\n  KVM: PPC: Book3S: Assign boolean values to a bool variable\n  powerpc: Inline setup_kup()\n  powerpc/64s: Mark the kuap/kuep functions non __init\n  KVM: PPC: Book3S HV: XIVE: Add a comment regarding VP numbering\n  powerpc/xive: Improve error reporting of OPAL calls\n  powerpc/xive: Simplify xive_do_source_eoi()\n  powerpc/xive: Remove P9 DD1 flag XIVE_IRQ_FLAG_EOI_FW\n  powerpc/xive: Remove P9 DD1 flag XIVE_IRQ_FLAG_MASK_FW\n  powerpc/xive: Remove P9 DD1 flag XIVE_IRQ_FLAG_SHIFT_BUG\n  ... \nDate: 2020-12-17 - 21:34:25 \nAuthor: Linus Torvalds"}, {"id": "09c0796adf0c793462fda1d7c8c43324551405c7", "date": "2020-12-17", "metadata": "Message: Merge tag 'trace-v5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace\n\nPull tracing updates from Steven Rostedt:\n \"The major update to this release is that there's a new arch config\n  option called CONFIG_HAVE_DYNAMIC_FTRACE_WITH_ARGS.\n\n  Currently, only x86_64 enables it. All the ftrace callbacks now take a\n  struct ftrace_regs instead of a struct pt_regs. If the architecture\n  has HAVE_DYNAMIC_FTRACE_WITH_ARGS enabled, then the ftrace_regs will\n  have enough information to read the arguments of the function being\n  traced, as well as access to the stack pointer.\n\n  This way, if a user (like live kernel patching) only cares about the\n  arguments, then it can avoid using the heavier weight \"regs\" callback,\n  that puts in enough information in the struct ftrace_regs to simulate\n  a breakpoint exception (needed for kprobes).\n\n  A new config option that audits the timestamps of the ftrace ring\n  buffer at most every event recorded.\n\n  Ftrace recursion protection has been cleaned up to move the protection\n  to the callback itself (this saves on an extra function call for those\n  callbacks).\n\n  Perf now handles its own RCU protection and does not depend on ftrace\n  to do it for it (saving on that extra function call).\n\n  New debug option to add \"recursed_functions\" file to tracefs that\n  lists all the places that triggered the recursion protection of the\n  function tracer. This will show where things need to be fixed as\n  recursion slows down the function tracer.\n\n  The eval enum mapping updates done at boot up are now offloaded to a\n  work queue, as it caused a noticeable pause on slow embedded boards.\n\n  Various clean ups and last minute fixes\"\n\n* tag 'trace-v5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace: (33 commits)\n  tracing: Offload eval map updates to a work queue\n  Revert: \"ring-buffer: Remove HAVE_64BIT_ALIGNED_ACCESS\"\n  ring-buffer: Add rb_check_bpage in __rb_allocate_pages\n  ring-buffer: Fix two typos in comments\n  tracing: Drop unneeded assignment in ring_buffer_resize()\n  tracing: Disable ftrace selftests when any tracer is running\n  seq_buf: Avoid type mismatch for seq_buf_init\n  ring-buffer: Fix a typo in function description\n  ring-buffer: Remove obsolete rb_event_is_commit()\n  ring-buffer: Add test to validate the time stamp deltas\n  ftrace/documentation: Fix RST C code blocks\n  tracing: Clean up after filter logic rewriting\n  tracing: Remove the useless value assignment in test_create_synth_event()\n  livepatch: Use the default ftrace_ops instead of REGS when ARGS is available\n  ftrace/x86: Allow for arguments to be passed in to ftrace_regs by default\n  ftrace: Have the callbacks receive a struct ftrace_regs instead of pt_regs\n  MAINTAINERS: assign ./fs/tracefs to TRACING\n  tracing: Fix some typos in comments\n  ftrace: Remove unused varible 'ret'\n  ring-buffer: Add recording of ring buffer recursion into recursed_functions\n  ... \nDate: 2020-12-17 - 21:22:17 \nAuthor: Linus Torvalds"}, {"id": "312dcaf967219effe0483785f24e4072a5bed9a5", "date": "2020-12-17", "metadata": "Message: Merge tag 'modules-for-v5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/jeyu/linux\n\nPull modules updates from Jessica Yu:\n \"Summary of modules changes for the 5.11 merge window:\n\n   - Fix a race condition between systemd/udev and the module loader.\n\n     The module loader was sending a uevent before the module was fully\n     initialized (i.e., before its init function has been called). This\n     means udev can start processing the module uevent before the module\n     has finished initializing, and some udev rules expect that the\n     module has initialized already upon receiving the uevent.\n\n     This resulted in some systemd mount units failing if udev processes\n     the event faster than the module can finish init. This is fixed by\n     delaying the uevent until after the module has called its init\n     routine.\n\n   - Make the linker array sections for kernel params and module version\n     attributes more robust by switching to use the alignment of the\n     type in question.\n\n     Namely, linker section arrays will be constructed using the\n     alignment required by the struct (using __alignof__()) as opposed\n     to a specific value such as sizeof(void *) or sizeof(long). This is\n     less likely to cause breakages should the size of the type ever\n     change (Johan Hovold)\n\n   - Fix module state inconsistency by setting it back to GOING when a\n     module fails to load and is on its way out (Miroslav Benes)\n\n   - Some comment and code cleanups (Sergey Shtylyov)\"\n\n* tag 'modules-for-v5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/jeyu/linux:\n  module: delay kobject uevent until after module init call\n  module: drop semicolon from version macro\n  init: use type alignment for kernel parameters\n  params: clean up module-param macros\n  params: use type alignment for kernel parameters\n  params: drop redundant \"unused\" attributes\n  module: simplify version-attribute handling\n  module: drop version-attribute alignment\n  module: fix comment style\n  module: add more 'kernel-doc' comments\n  module: fix up 'kernel-doc' comments\n  module: only handle errors with the *switch* statement in module_sig_check()\n  module: avoid *goto*s in module_sig_check()\n  module: merge repetitive strings in module_sig_check()\n  module: set MODULE_STATE_GOING state when a module fails to load \nDate: 2020-12-17 - 21:01:31 \nAuthor: Linus Torvalds"}, {"id": "6daa90439e91bb9a71864b02f7d0af8587ea889a", "date": "2020-12-17", "metadata": "Message: Merge tag 'dmaengine-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vkoul/dmaengine\n\nPull dmaengine updates from Vinod Koul:\n \"The last dmaengine updates for this year :)\n\n  This contains couple of new drivers, new device support and updates to\n  bunch of drivers.\n\n  New drivers/devices:\n   - Qualcomm ADM driver\n   - Qualcomm GPI driver\n   - Allwinner A100 DMA support\n   - Microchip Sama7g5 support\n   - Mediatek MT8516 apdma\n\n  Updates:\n   - more updates to idxd driver and support for IAX config\n   - runtime PM support for dw driver\n   - TI drivers\"\n\n* tag 'dmaengine-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vkoul/dmaengine: (75 commits)\n  soc: ti: k3-ringacc: Use correct error casting in k3_ringacc_dmarings_init\n  dmaengine: ti: k3-udma-glue: Add support for K3 PKTDMA\n  dmaengine: ti: k3-udma: Initial support for K3 PKTDMA\n  dmaengine: ti: k3-udma: Add support for BCDMA channel TPL handling\n  dmaengine: ti: k3-udma: Initial support for K3 BCDMA\n  soc: ti: k3-ringacc: add AM64 DMA rings support.\n  dmaengine: ti: Add support for k3 event routers\n  dmaengine: ti: k3-psil: Add initial map for AM64\n  dmaengine: ti: k3-psil: Extend psil_endpoint_config for K3 PKTDMA\n  dt-bindings: dma: ti: Add document for K3 PKTDMA\n  dt-bindings: dma: ti: Add document for K3 BCDMA\n  dmaengine: dmatest: Use dmaengine_get_dma_device\n  dmaengine: doc: client: Update for dmaengine_get_dma_device() usage\n  dmaengine: Add support for per channel coherency handling\n  dmaengine: of-dma: Add support for optional router configuration callback\n  dmaengine: ti: k3-udma-glue: Configure the dma_dev for rings\n  dmaengine: ti: k3-udma-glue: Get the ringacc from udma_dev\n  dmaengine: ti: k3-udma-glue: Add function to get device pointer for DMA API\n  dmaengine: ti: k3-udma: Add support for second resource range from sysfw\n  dmaengine: ti: k3-udma: Wait for peer teardown completion if supported\n  ... \nDate: 2020-12-17 - 20:52:23 \nAuthor: Linus Torvalds"}, {"id": "83005cd6bc76eef7bbf46b55bbb00ccc9534c38c", "date": "2020-12-17", "metadata": "Message: Merge tag 'mailbox-v5.11' of git://git.linaro.org/landing-teams/working/fujitsu/integration\n\nPull mailbox updates from Jassi Brar:\n\n - arm: added mhu-v2 controller driver\n\n - arm_mhu_db: fix kfree by using devm_ variant\n\n - stm32-ipcc: misc cleanup\n\n* tag 'mailbox-v5.11' of git://git.linaro.org/landing-teams/working/fujitsu/integration:\n  mailbox: arm_mhuv2: Add driver\n  dt-bindings: mailbox : arm,mhuv2: Add bindings\n  mailbox: stm32-ipcc: cast void pointers to unsigned long\n  mailbox: stm32-ipcc: remove duplicate error message\n  mailbox: stm32-ipcc: add COMPILE_TEST dependency\n  mailbox: arm_mhu_db: Fix mhu_db_shutdown by replacing kfree with devm_kfree \nDate: 2020-12-17 - 20:39:39 \nAuthor: Linus Torvalds"}, {"id": "74f602dc96dd854c7b2034947798c1e2a6b84066", "date": "2020-12-17", "metadata": "Message: Merge tag 'nfs-for-5.11-1' of git://git.linux-nfs.org/projects/trondmy/linux-nfs\n\nPull NFS client updates from Trond Myklebust:\n \"Highlights include:\n\n  Features:\n\n   - NFSv3: Add emulation of lookupp() to improve open_by_filehandle()\n     support\n\n   - A series of patches to improve readdir performance, particularly\n     with large directories\n\n   - Basic support for using NFS/RDMA with the pNFS files and flexfiles\n     drivers\n\n   - Micro-optimisations for RDMA\n\n   - RDMA tracing improvements\n\n  Bugfixes:\n\n   - Fix a long standing bug with xs_read_xdr_buf() when receiving\n     partial pages (Dan Aloni)\n\n   - Various fixes for getxattr and listxattr, when used over non-TCP\n     transports\n\n   - Fixes for containerised NFS from Sargun Dhillon\n\n   - switch nfsiod to be an UNBOUND workqueue (Neil Brown)\n\n   - READDIR should not ask for security label information if there is\n     no LSM policy (Olga Kornievskaia)\n\n   - Avoid using interval-based rebinding with TCP in lockd (Calum\n     Mackay)\n\n   - A series of RPC and NFS layer fixes to support the NFSv4.2\n     READ_PLUS code\n\n   - A couple of fixes for pnfs/flexfiles read failover\n\n  Cleanups:\n\n   - Various cleanups for the SUNRPC xdr code in conjunction with the\n     READ_PLUS fixes\"\n\n* tag 'nfs-for-5.11-1' of git://git.linux-nfs.org/projects/trondmy/linux-nfs: (90 commits)\n  NFS/pNFS: Fix a typo in ff_layout_resend_pnfs_read()\n  pNFS/flexfiles: Avoid spurious layout returns in ff_layout_choose_ds_for_read\n  NFSv4/pnfs: Add tracing for the deviceid cache\n  fs/lockd: convert comma to semicolon\n  NFSv4.2: fix error return on memory allocation failure\n  NFSv4.2/pnfs: Don't use READ_PLUS with pNFS yet\n  NFSv4.2: Deal with potential READ_PLUS data extent buffer overflow\n  NFSv4.2: Don't error when exiting early on a READ_PLUS buffer overflow\n  NFSv4.2: Handle hole lengths that exceed the READ_PLUS read buffer\n  NFSv4.2: decode_read_plus_hole() needs to check the extent offset\n  NFSv4.2: decode_read_plus_data() must skip padding after data segment\n  NFSv4.2: Ensure we always reset the result->count in decode_read_plus()\n  SUNRPC: When expanding the buffer, we may need grow the sparse pages\n  SUNRPC: Cleanup - constify a number of xdr_buf helpers\n  SUNRPC: Clean up open coded setting of the xdr_stream 'nwords' field\n  SUNRPC: _copy_to/from_pages() now check for zero length\n  SUNRPC: Cleanup xdr_shrink_bufhead()\n  SUNRPC: Fix xdr_expand_hole()\n  SUNRPC: Fixes for xdr_align_data()\n  SUNRPC: _shift_data_left/right_pages should check the shift length\n  ... \nDate: 2020-12-17 - 20:15:03 \nAuthor: Linus Torvalds"}, {"id": "be695ee29e8fc0af266d9f1882868c47da01a790", "date": "2020-12-17", "metadata": "Message: Merge tag 'ceph-for-5.11-rc1' of git://github.com/ceph/ceph-client\n\nPull ceph updates from Ilya Dryomov:\n \"The big ticket item here is support for msgr2 on-wire protocol, which\n  adds the option of full in-transit encryption using AES-GCM algorithm\n  (myself).\n\n  On top of that we have a series to avoid intermittent errors during\n  recovery with recover_session=clean and some MDS request encoding work\n  from Jeff, a cap handling fix and assorted observability improvements\n  from Luis and Xiubo and a good number of cleanups.\n\n  Luis also ran into a corner case with quotas which sadly means that we\n  are back to denying cross-quota-realm renames\"\n\n* tag 'ceph-for-5.11-rc1' of git://github.com/ceph/ceph-client: (59 commits)\n  libceph: drop ceph_auth_{create,update}_authorizer()\n  libceph, ceph: make use of __ceph_auth_get_authorizer() in msgr1\n  libceph, ceph: implement msgr2.1 protocol (crc and secure modes)\n  libceph: introduce connection modes and ms_mode option\n  libceph, rbd: ignore addr->type while comparing in some cases\n  libceph, ceph: get and handle cluster maps with addrvecs\n  libceph: factor out finish_auth()\n  libceph: drop ac->ops->name field\n  libceph: amend cephx init_protocol() and build_request()\n  libceph, ceph: incorporate nautilus cephx changes\n  libceph: safer en/decoding of cephx requests and replies\n  libceph: more insight into ticket expiry and invalidation\n  libceph: move msgr1 protocol specific fields to its own struct\n  libceph: move msgr1 protocol implementation to its own file\n  libceph: separate msgr1 protocol implementation\n  libceph: export remaining protocol independent infrastructure\n  libceph: export zero_page\n  libceph: rename and export con->flags bits\n  libceph: rename and export con->state states\n  libceph: make con->state an int\n  ... \nDate: 2020-12-17 - 19:53:52 \nAuthor: Linus Torvalds"}, {"id": "92dbc9dedccb9759c7f9f2f0ae6242396376988f", "date": "2020-12-17", "metadata": "Message: Merge tag 'ovl-update-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs\n\nPull overlayfs updates from Miklos Szeredi:\n\n - Allow unprivileged mounting in a user namespace.\n\n   For quite some time the security model of overlayfs has been that\n   operations on underlying layers shall be performed with the\n   privileges of the mounting task.\n\n   This way an unprvileged user cannot gain privileges by the act of\n   mounting an overlayfs instance. A full audit of all function calls\n   made by the overlayfs code has been performed to see whether they\n   conform to this model, and this branch contains some fixes in this\n   regard.\n\n - Support running on copied filesystem images by optionally disabling\n   UUID verification.\n\n - Bug fixes as well as documentation updates.\n\n* tag 'ovl-update-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs:\n  ovl: unprivieged mounts\n  ovl: do not get metacopy for userxattr\n  ovl: do not fail because of O_NOATIME\n  ovl: do not fail when setting origin xattr\n  ovl: user xattr\n  ovl: simplify file splice\n  ovl: make ioctl() safe\n  ovl: check privs before decoding file handle\n  vfs: verify source area in vfs_dedupe_file_range_one()\n  vfs: move cap_convert_nscap() call into vfs_setxattr()\n  ovl: fix incorrect extent info in metacopy case\n  ovl: expand warning in ovl_d_real()\n  ovl: document lower modification caveats\n  ovl: warn about orphan metacopy\n  ovl: doc clarification\n  ovl: introduce new \"uuid=off\" option for inodes index feature\n  ovl: propagate ovl_fs to ovl_decode_real_fh and ovl_encode_real_fh \nDate: 2020-12-17 - 19:42:48 \nAuthor: Linus Torvalds"}, {"id": "65de0b89d7d5e173d71cb50dfae786133c579308", "date": "2020-12-17", "metadata": "Message: Merge tag 'fuse-update-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/fuse\n\nPull fuse updates from Miklos Szeredi:\n\n - Improve performance of virtio-fs in mixed read/write workloads\n\n - Try to revalidate cache before returning EEXIST on exclusive create\n\n - Add a couple of miscellaneous bug fixes as well as some code cleanups\n\n* tag 'fuse-update-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/fuse:\n  fuse: fix bad inode\n  fuse: support SB_NOSEC flag to improve write performance\n  fuse: add a flag FUSE_OPEN_KILL_SUIDGID for open() request\n  fuse: don't send ATTR_MODE to kill suid/sgid for handle_killpriv_v2\n  fuse: setattr should set FATTR_KILL_SUIDGID\n  fuse: set FUSE_WRITE_KILL_SUIDGID in cached write path\n  fuse: rename FUSE_WRITE_KILL_PRIV to FUSE_WRITE_KILL_SUIDGID\n  fuse: introduce the notion of FUSE_HANDLE_KILLPRIV_V2\n  fuse: always revalidate if exclusive create\n  virtiofs: clean up error handling in virtio_fs_get_tree()\n  fuse: add fuse_sb_destroy() helper\n  fuse: simplify get_fuse_conn*()\n  fuse: get rid of fuse_mount refcount\n  virtiofs: simplify sb setup\n  virtiofs fix leak in setup\n  fuse: launder page should wait for page writeback \nDate: 2020-12-17 - 19:34:25 \nAuthor: Linus Torvalds"}, {"id": "ff49c86f27e4726a86f5034543e6e684daf41955", "date": "2020-12-17", "metadata": "Message: Merge tag 'f2fs-for-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs\n\nPull f2fs updates from Jaegeuk Kim:\n \"In this round, we've made more work into per-file compression support.\n\n  For example, F2FS_IOC_GET | SET_COMPRESS_OPTION provides a way to\n  change the algorithm or cluster size per file. F2FS_IOC_COMPRESS |\n  DECOMPRESS_FILE provides a way to compress and decompress the existing\n  normal files manually.\n\n  There is also a new mount option, compress_mode=fs|user, which can\n  control who compresses the data.\n\n  Chao also added a checksum feature with a mount option so that\n  we are able to detect any corrupted cluster.\n\n  In addition, Daniel contributed casefolding with encryption patch,\n  which will be used for Android devices.\n\n  Summary:\n\n  Enhancements:\n   - add ioctls and mount option to manage per-file compression feature\n   - support casefolding with encryption\n   - support checksum for compressed cluster\n   - avoid IO starvation by replacing mutex with rwsem\n   - add sysfs, max_io_bytes, to control max bio size\n\n  Bug fixes:\n   - fix use-after-free issue when compression and fsverity are enabled\n   - fix consistency corruption during fault injection test\n   - fix data offset for lseek\n   - get rid of buffer_head which has 32bits limit in fiemap\n   - fix some bugs in multi-partitions support\n   - fix nat entry count calculation in shrinker\n   - fix some stat information\n\n  And, we've refactored some logics and fix minor bugs as well\"\n\n* tag 'f2fs-for-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs: (36 commits)\n  f2fs: compress: fix compression chksum\n  f2fs: fix shift-out-of-bounds in sanity_check_raw_super()\n  f2fs: fix race of pending_pages in decompression\n  f2fs: fix to account inline xattr correctly during recovery\n  f2fs: inline: fix wrong inline inode stat\n  f2fs: inline: correct comment in f2fs_recover_inline_data\n  f2fs: don't check PAGE_SIZE again in sanity_check_raw_super()\n  f2fs: convert to F2FS_*_INO macro\n  f2fs: introduce max_io_bytes, a sysfs entry, to limit bio size\n  f2fs: don't allow any writes on readonly mount\n  f2fs: avoid race condition for shrinker count\n  f2fs: add F2FS_IOC_DECOMPRESS_FILE and F2FS_IOC_COMPRESS_FILE\n  f2fs: add compress_mode mount option\n  f2fs: Remove unnecessary unlikely()\n  f2fs: init dirty_secmap incorrectly\n  f2fs: remove buffer_head which has 32bits limit\n  f2fs: fix wrong block count instead of bytes\n  f2fs: use new conversion functions between blks and bytes\n  f2fs: rename logical_to_blk and blk_to_logical\n  f2fs: fix kbytes written stat for multi-device case\n  ... \nDate: 2020-12-17 - 19:18:00 \nAuthor: Linus Torvalds"}, {"id": "b97d4c424e362ebf88fd9aa1b7ad82e3a28c26d3", "date": "2020-12-17", "metadata": "Message: Merge tag 'for_v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull ext2, reiserfs, quota and writeback updates from Jan Kara:\n\n - a couple of quota fixes (mostly for problems found by syzbot)\n\n - several ext2 cleanups\n\n - one fix for reiserfs crash on corrupted image\n\n - a fix for spurious warning in writeback code\n\n* tag 'for_v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:\n  writeback: don't warn on an unregistered BDI in __mark_inode_dirty\n  fs: quota: fix array-index-out-of-bounds bug by passing correct argument to vfs_cleanup_quota_inode()\n  reiserfs: add check for an invalid ih_entry_count\n  ext2: Fix fall-through warnings for Clang\n  fs/ext2: Use ext2_put_page\n  docs: filesystems: Reduce ext2.rst to one top-level heading\n  quota: Sanity-check quota file headers on load\n  quota: Don't overflow quota file offsets\n  ext2: Remove unnecessary blank\n  fs/quota: update quota state flags scheme with project quota flags \nDate: 2020-12-17 - 19:00:37 \nAuthor: Linus Torvalds"}, {"id": "44d4775ca51805b376a8db5b34f650434a08e556", "date": "2020-12-16", "metadata": "Message: net/sched: sch_taprio: reset child qdiscs before freeing them\n\nsyzkaller shows that packets can still be dequeued while taprio_destroy()\nis running. Let sch_taprio use the reset() function to cancel the advance\ntimer and drop all skbs from the child qdiscs.\n\nFixes: 5a781ccbd19e (\"tc: Add support for configuring the taprio scheduler\")\nLink: https://syzkaller.appspot.com/bug?id=f362872379bf8f0017fb667c1ab158f2d1e764ae\nReported-by: syzbot+8971da381fb5a31f542d@syzkaller.appspotmail.com\nSigned-off-by: Davide Caratti <dcaratti@redhat.com>\nAcked-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>\nLink: https://lore.kernel.org/r/63b6d79b0e830ebb0283e020db4df3cdfdfb2b94.1608142843.git.dcaratti@redhat.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 18:33:29 \nAuthor: Davide Caratti"}, {"id": "5b33afee93a1e7665a5ffae027fc66f9376f4ea7", "date": "2020-12-16", "metadata": "Message: nfp: move indirect block cleanup to flower app stop callback\n\nThe indirect block cleanup may cause control messages to be sent\nif offloaded flows are present. However, by the time the flower app\ncleanup callback is called txbufs are no longer available and attempts\nto send control messages result in a NULL-pointer dereference in\nnfp_ctrl_tx_one().\n\nThis problem may be resolved by moving the indirect block cleanup\nto the stop callback, where txbufs are still available.\n\nAs suggested by Jakub Kicinski and Louis Peens.\n\nFixes: a1db217861f3 (\"net: flow_offload: fix flow_indr_dev_unregister path\")\nSigned-off-by: Simon Horman <simon.horman@netronome.com>\nSigned-off-by: Louis Peens <louis.peens@netronome.com>\nLink: https://lore.kernel.org/r/20201216145701.30005-1-simon.horman@netronome.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 14:57:01 \nAuthor: Simon Horman"}, {"id": "d8a4ea350f1fff71c9988ea3da3c913ec30bbfbe", "date": "2020-12-16", "metadata": "Message: octeontx2-af: Fix undetected unmap PF error check\n\nCurrently the check for an unmap PF error is always going to be false\nbecause intr_val is a 32 bit int and is being bit-mask checked against\n1ULL << 32.  Fix this by making intr_val a u64 to match the type at it\nis copied from, namely npa_event_context->npa_af_rvu_ge.\n\nAddresses-Coverity: (\"Operands don't affect result\")\nFixes: f1168d1e207c (\"octeontx2-af: Add devlink health reporters for NPA\")\nSigned-off-by: Colin Ian King <colin.king@canonical.com>\nAcked-by: George Cherian <george.cherian@marvell.com>\nLink: https://lore.kernel.org/r/20201216123604.15369-1-colin.king@canonical.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 12:36:04 \nAuthor: Colin Ian King"}, {"id": "14bd41e41899cbd1de4bb5ddfa46c85b08091a69", "date": "2020-12-17", "metadata": "Message: Merge tag 'fsnotify_for_v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs\n\nPull fsnotify updates from Jan Kara:\n \"A few fsnotify fixes from Amir fixing fallout from big fsnotify\n  overhaul a few months back and an improvement of defaults limiting\n  maximum number of inotify watches from Waiman\"\n\n* tag 'fsnotify_for_v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:\n  fsnotify: fix events reported to watching parent and child\n  inotify: convert to handle_inode_event() interface\n  fsnotify: generalize handle_inode_event()\n  inotify: Increase default inotify.max_user_watches limit to 1048576 \nDate: 2020-12-17 - 18:56:27 \nAuthor: Linus Torvalds"}, {"id": "38ba95a4ed24126d36288a0c2434ced5b4c244d2", "date": "2020-12-16", "metadata": "Message: net: nixge: fix spelling mistake in Kconfig: \"Instuments\" -> \"Instruments\"\n\nThere is a spelling mistake in the Kconfig. Fix it.\n\nSigned-off-by: Colin Ian King <colin.king@canonical.com>\nLink: https://lore.kernel.org/r/20201216120020.13149-1-colin.king@canonical.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 12:00:20 \nAuthor: Colin Ian King"}, {"id": "0d52848632a357948028eab67ff9b7cc0c12a0fb", "date": "2020-12-16", "metadata": "Message: qlcnic: Fix error code in probe\n\nReturn -EINVAL if we can't find the correct device.  Currently it\nreturns success.\n\nFixes: 13159183ec7a (\"qlcnic: 83xx base driver\")\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nLink: https://lore.kernel.org/r/X9nHbMqEyI/xPfGd@mwanda\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 08:38:04 \nAuthor: Dan Carpenter"}, {"id": "86eb09b63da419a7261d7dc96e60fdb0e56e341d", "date": "2020-12-17", "metadata": "Message: Merge branch 'mptcp-a-bunch-of-assorted-fixes'\n\nPaolo Abeni says:\n\n====================\nmptcp: a bunch of assorted fixes\n\nThis series pulls a few fixes for the MPTCP datapath.\nMost issues addressed here has been recently introduced\nwith the recent reworks, with the notable exception of\nthe first patch, which addresses an issue present since\nthe early days\n====================\n\nLink: https://lore.kernel.org/r/cover.1608114076.git.pabeni@redhat.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-17 - 18:25:10 \nAuthor: Jakub Kicinski"}, {"id": "13e1603739e58e94e7a3c24191fa2dcd1a8a5df3", "date": "2020-12-16", "metadata": "Message: mptcp: fix pending data accounting\n\nWhen sendmsg() needs to wait for memory, the pending data\nis not updated. That causes a drift in forward memory allocation,\nleading to stall and/or warnings at socket close time.\n\nThis change addresses the above issue moving the pending data\ncounter update inside the sendmsg() main loop.\n\nFixes: 6e628cd3a8f7 (\"mptcp: use mptcp release_cb for delayed tasks\")\nReviewed-by: Mat Martineau <mathew.j.martineau@linux.intel.com>\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 11:48:35 \nAuthor: Paolo Abeni"}, {"id": "219d04992b689e0498ece02d2a451f2b6e2563a9", "date": "2020-12-16", "metadata": "Message: mptcp: push pending frames when subflow has free space\n\nWhen multiple subflows are active, we can receive a\nwindow update on subflow with no write space available.\nMPTCP will try to push frames on such subflow and will\nfail. Pending frames will be pushed only after receiving\na window update on a subflow with some wspace available.\n\nOverall the above could lead to suboptimal aggregate\nbandwidth usage.\n\nInstead, we should try to push pending frames as soon as\nthe subflow reaches both conditions mentioned above.\n\nWe can finally enable self-tests with asymmetric links,\nas the above makes them finally pass.\n\nFixes: 6f8a612a33e4 (\"mptcp: keep track of advertised windows right edge\")\nReviewed-by: Mat Martineau <mathew.j.martineau@linux.intel.com>\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 11:48:34 \nAuthor: Paolo Abeni"}, {"id": "3f8b2667f257c21a992bda33bfb919ee164a429c", "date": "2020-12-16", "metadata": "Message: mptcp: properly annotate nested lock\n\nMPTCP closes the subflows while holding the msk-level lock.\nWhile acquiring the subflow socket lock we need to use the\ncorrect nested annotation, or we can hit a lockdep splat\nat runtime.\n\nReported-and-tested-by: Geliang Tang <geliangtang@gmail.com>\nFixes: e16163b6e2b7 (\"mptcp: refactor shutdown and close\")\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>\nReviewed-by: Mat Martineau <mathew.j.martineau@linux.intel.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 11:48:33 \nAuthor: Paolo Abeni"}, {"id": "0c14846032f2c0a3b63234e1fc2759f4155b6067", "date": "2020-12-16", "metadata": "Message: mptcp: fix security context on server socket\n\nCurrently MPTCP is not propagating the security context\nfrom the ingress request socket to newly created msk\nat clone time.\n\nAddress the issue invoking the missing security helper.\n\nFixes: cf7da0d66cc1 (\"mptcp: Create SUBFLOW socket for incoming connections\")\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>\nReviewed-by: Mat Martineau <mathew.j.martineau@linux.intel.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 11:48:32 \nAuthor: Paolo Abeni"}, {"id": "49e27134f6e9ebcd08c04a98ab7f0574b5a81a35", "date": "2020-12-13", "metadata": "Message: net/mlx5: Fix compilation warning for 32-bit platform\n\nMLX5_GENERAL_OBJECT_TYPES types bitfield is 64-bit field.\n\nDefining an enum for such bit fields on 32-bit platform results in below\nwarning.\n\n./include/vdso/bits.h:7:26: warning: left shift count >= width of type [-Wshift-count-overflow]\n                         ^\n./include/linux/mlx5/mlx5_ifc.h:10716:46: note: in expansion of macro \u2018BIT\u2019\n MLX5_HCA_CAP_GENERAL_OBJECT_TYPES_SAMPLER = BIT(0x20),\n                                             ^~~\n\nUse 32-bit friendly BIT_ULL macro.\n\nFixes: 2a2970891647 (\"net/mlx5: Add sample offload hardware bits and structures\")\nSigned-off-by: Parav Pandit <parav@nvidia.com>\nReported-by: Stephen Rothwell <sfr@canb.auug.org.au>\nSigned-off-by: Leon Romanovsky <leonro@nvidia.com>\nLink: https://lore.kernel.org/r/20201213120641.216032-1-leon@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-13 - 12:06:41 \nAuthor: Parav Pandit"}, {"id": "d652d5f1eeeb06046009f4fcb9b4542249526916", "date": "2020-12-17", "metadata": "Message: drm/edid: fix objtool warning in drm_cvt_modes()\n\nCommit 991fcb77f490 (\"drm/edid: Fix uninitialized variable in\ndrm_cvt_modes()\") just replaced one warning with another.\n\nThe original warning about a possibly uninitialized variable was due to\nthe compiler not being smart enough to see that the case statement\nactually enumerated all possible cases.  And the initial fix was just to\nadd a \"default\" case that had a single \"unreachable()\", just to tell the\ncompiler that that situation cannot happen.\n\nHowever, that doesn't actually fix the fundamental reason for the\nproblem: the compiler still doesn't see that the existing case\nstatements enumerate all possibilities, so the compiler will still\ngenerate code to jump to that unreachable case statement.  It just won't\ncomplain about an uninitialized variable any more.\n\nSo now the compiler generates code to our inline asm marker that we told\nit would not fall through, and end end result is basically random.  We\nhave created a bridge to nowhere.\n\nAnd then, depending on the random details of just exactly what the\ncompiler ends up doing, 'objtool' might end up complaining about the\nconditional branches (for conditions that cannot happen, and that thus\nwill never be taken - but if the compiler was not smart enough to figure\nthat out, we can't expect objtool to do so) going off in the weeds.\n\nSo depending on how the compiler has laid out the result, you might see\nsomething like this:\n\n    drivers/gpu/drm/drm_edid.o: warning: objtool: do_cvt_mode() falls through to next function drm_mode_detailed.isra.0()\n\nand now you have a truly inscrutable warning that makes no sense at all\nunless you start looking at whatever random code the compiler happened\nto generate for our bare \"unreachable()\" statement.\n\nIOW, don't use \"unreachable()\" unless you have an _active_ operation\nthat generates code that actually makes it obvious that something is not\nreachable (ie an UD instruction or similar).\n\nSolve the \"compiler isn't smart enough\" problem by just marking one of\nthe cases as \"default\", so that even when the compiler doesn't otherwise\nsee that we've enumerated all cases, the compiler will feel happy and\nsafe about there always being a valid case that initializes the 'width'\nvariable.\n\nThis also generates better code, since now the compiler doesn't generate\ncomparisons for five different possibilities (the four real ones and the\none that can't happen), but just for the three real ones and \"the rest\"\n(which is that last one).\n\nA smart enough compiler that sees that we cover all the cases won't care.\n\nCc: Lyude Paul <lyude@redhat.com>\nCc: Ilia Mirkin <imirkin@alum.mit.edu>\nCc: Josh Poimboeuf <jpoimboe@redhat.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-17 - 17:27:57 \nAuthor: Linus Torvalds"}, {"id": "67698880ac9d56367ebf22f8336ccab6234f9feb", "date": "2020-11-17", "metadata": "Message: thermal: int340x: Support Alder Lake\n\nAdd ACPI IDs for thermal drivers for Alder Lake support.\n\nSigned-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>\nSigned-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>\nLink: https://lore.kernel.org/r/20201117194802.503337-1-srinivas.pandruvada@linux.intel.com \nDate: 2020-11-17 - 19:48:02 \nAuthor: Srinivas Pandruvada"}, {"id": "9fd339a45be5c06e239d45a042eab9d25de87882", "date": "2020-12-17", "metadata": "Message: arm64: Work around broken GCC 4.9 handling of \"S\" constraint\n\nGCC 4.9 seems to have a problem with the \"S\" asm constraint\nwhen the symbol lives in the same compilation unit, and pretends\nthe constraint is impossible:\n\n$ cat x.c\nvoid *foo(void)\n{\n\tstatic int x;\n\tint *addr;\n\tasm(\"adrp %0, %1\" : \"=r\" (addr) : \"S\" (&x));\n\treturn addr;\n}\n\n$ ~/Work/gcc-linaro-aarch64-linux-gnu-4.9-2014.09_linux/bin/aarch64-linux-gnu-gcc -S -x c -O2 x.c\nx.c: In function \u2018foo\u2019:\nx.c:5:2: error: impossible constraint in \u2018asm\u2019\n  asm(\"adrp %0, %1\" : \"=r\" (addr) : \"S\" (&x));\n  ^\n\nBoo. Following revisions of the compiler work just fine, though.\n\nWe can fallback to the \"i\" constraint for GCC version prior to 5.0,\nwhich *seems* to do the right thing. Hopefully we will be able to\nremove this at some point, but in the meantime this gets us going.\n\nSigned-off-by: Marc Zyngier <maz@kernel.org>\nAcked-by: Ard Biesheuvel <ardb@kernel.org>\nLink: https://lore.kernel.org/r/20201217111135.1536658-1-maz@kernel.org\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com> \nDate: 2020-12-17 - 11:11:35 \nAuthor: Marc Zyngier"}, {"id": "afee4410bc6c50e1422c5a45d633ad0e478ea960", "date": "2020-12-15", "metadata": "Message: cifs: update internal module version number\n\nTo 2.30\n\nSigned-off-by: Steve French <stfrench@microsoft.com> \nDate: 2020-12-15 - 21:17:43 \nAuthor: Steve French"}, {"id": "2d0604934f507b8b4799f3c1dff41cca3dd85239", "date": "2020-12-17", "metadata": "Message: cifs: Fix support for remount when not changing rsize/wsize\n\nWhen remounting with the new mount API, we need to set\nrsize and wsize to the previous values if they are not passed\nin on the remount. Otherwise they get set to zero which breaks\nxfstest 452 for example.\n\nSigned-off-by: Steve French <stfrench@microsoft.com>\nReviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>\nReviewed-by: Shyam Prasad N <sprasad@microsoft.com> \nDate: 2020-12-17 - 00:04:27 \nAuthor: Steve French"}, {"id": "c1bea0a840ac75dca19bc6aa05575a33eb9fd058", "date": "2020-12-15", "metadata": "Message: powerpc/32s: Fix cleanup_cpu_mmu_context() compile bug\n\nCurrently pmac32_defconfig with SMP=y doesn't build:\n\n  arch/powerpc/platforms/powermac/smp.c:\n  error: implicit declaration of function 'cleanup_cpu_mmu_context'\n\nIt would be nice for consistency if all platforms clear mm_cpumask and\nflush TLBs on unplug, but the TLB invalidation bug described in commit\n01b0f0eae081 (\"powerpc/64s: Trim offlined CPUs from mm_cpumasks\") only\napplies to 64s and for now we only have the TLB flush code for that\nplatform.\n\nSo just add an empty version for 32-bit Book3S.\n\nFixes: 01b0f0eae081 (\"powerpc/64s: Trim offlined CPUs from mm_cpumasks\")\nReported-by: Geert Uytterhoeven <geert@linux-m68k.org>\nSigned-off-by: Nicholas Piggin <npiggin@gmail.com>\n[mpe: Change log based on comments from Nick]\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au> \nDate: 2020-12-15 - 01:57:20 \nAuthor: Michael Ellerman"}, {"id": "accefff5b547a9a1d959c7e76ad539bf2480e78b", "date": "2020-12-17", "metadata": "Message: Merge tag 'arm-soc-omap-genpd-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc\n\nPull ARM SoC OMAP GenPD updates from Arnd Bergmann:\n \"These are additional updates for the power domain support on OMAP,\n  moving to an implementation based on device tree information instead\n  of SoC specific code. This is the latest step in the ongoing process\n  for moving code out of arch/arm/mach-omap2.\n\n  I kept this separate from the other driver changes since it touches\n  code in multiple areas\"\n\n* tag 'arm-soc-omap-genpd-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc: (51 commits)\n  ARM: OMAP2+: Fix am4 only build after genpd changes\n  ARM: dts: Configure power domain for omap5 dss\n  ARM: dts: omap5: add remaining PRM instances\n  soc: ti: omap-prm: omap5: add genpd support for remaining PRM instances\n  ARM: OMAP2+: Drop legacy platform data for dra7 gpmc\n  ARM: dts: Configure interconnect target module for dra7 iva\n  ARM: dts: dra7: add remaining PRM instances\n  soc: ti: omap-prm: dra7: add genpd support for remaining PRM instances\n  clk: ti: dra7: Drop idlest polling from IVA clkctrl clocks\n  ARM: OMAP2+: Drop legacy platform data for omap4 gpmc\n  ARM: OMAP2+: Drop legacy platform data for omap4 iva\n  ARM: dts: Configure power domain for omap4 dsp\n  ARM: dts: Configure power domain for omap4 dss\n  ARM: dts: omap4: add remaining PRM instances\n  soc: ti: omap-prm: omap4: add genpd support for remaining PRM instances\n  clk: ti: omap4: Drop idlest polling from IVA clkctrl clocks\n  ARM: OMAP2+: Drop legacy remaining legacy platform data for am4\n  ARM: dts: Use simple-pm-bus for genpd for am4 l3\n  ARM: dts: Move am4 l3 noc to a separate node\n  ARM: dts: Use simple-pm-bus for genpd for am4 l4_per\n  ... \nDate: 2020-12-17 - 00:53:54 \nAuthor: Linus Torvalds"}, {"id": "48c1c40ab40cb087b992e7b77518c3a2926743cc", "date": "2020-12-17", "metadata": "Message: Merge tag 'arm-soc-drivers-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc\n\nPull ARM SoC driver updates from Arnd Bergmann:\n \"There are a couple of subsystems maintained by other people that merge\n  their drivers through the SoC tree, those changes include:\n\n   - The SCMI firmware framework gains support for sensor notifications\n     and for controlling voltage domains.\n\n   - A large update for the Tegra memory controller driver, integrating\n     it better with the interconnect framework\n\n   - The memory controller subsystem gains support for Mediatek MT8192\n\n   - The reset controller framework gains support for sharing pulsed\n     resets\n\n  For Soc specific drivers in drivers/soc, the main changes are\n\n   - The Allwinner/sunxi MBUS gets a rework for the way it handles\n     dma_map_ops and offsets between physical and dma address spaces.\n\n   - An errata fix plus some cleanups for Freescale Layerscape SoCs\n\n   - A cleanup for renesas drivers regarding MMIO accesses.\n\n   - New SoC specific drivers for Mediatek MT8192 and MT8183 power\n     domains\n\n   - New SoC specific drivers for Aspeed AST2600 LPC bus control and SoC\n     identification.\n\n   - Core Power Domain support for Qualcomm MSM8916, MSM8939, SDM660 and\n     SDX55.\n\n   - A rework of the TI AM33xx 'genpd' power domain support to use\n     information from DT instead of platform data\n\n   - Support for TI AM64x SoCs\n\n   - Allow building some Amlogic drivers as modules instead of built-in\n\n  Finally, there are numerous cleanups and smaller bug fixes for\n  Mediatek, Tegra, Samsung, Qualcomm, TI OMAP, Amlogic, Rockchips,\n  Renesas, and Xilinx SoCs\"\n\n* tag 'arm-soc-drivers-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc: (222 commits)\n  soc: mediatek: mmsys: Specify HAS_IOMEM dependency for MTK_MMSYS\n  firmware: xilinx: Properly align function parameter\n  firmware: xilinx: Add a blank line after function declaration\n  firmware: xilinx: Remove additional newline\n  firmware: xilinx: Fix kernel-doc warnings\n  firmware: xlnx-zynqmp: fix compilation warning\n  soc: xilinx: vcu: add missing register NUM_CORE\n  soc: xilinx: vcu: use vcu-settings syscon registers\n  dt-bindings: soc: xlnx: extract xlnx, vcu-settings to separate binding\n  soc: xilinx: vcu: drop useless success message\n  clk: samsung: mark PM functions as __maybe_unused\n  soc: samsung: exynos-chipid: initialize later - with arch_initcall\n  soc: samsung: exynos-chipid: order list of SoCs by name\n  memory: jz4780_nemc: Fix potential NULL dereference in jz4780_nemc_probe()\n  memory: ti-emif-sram: only build for ARMv7\n  memory: tegra30: Support interconnect framework\n  memory: tegra20: Support hardware versioning and clean up OPP table initialization\n  dt-bindings: memory: tegra20-emc: Document opp-supported-hw property\n  soc: rockchip: io-domain: Fix error return code in rockchip_iodomain_probe()\n  reset-controller: ti: force the write operation when assert or deassert\n  ... \nDate: 2020-12-17 - 00:38:41 \nAuthor: Linus Torvalds"}, {"id": "9805529ec544ea7a82d891d5239a8ebd3dbb2a3e", "date": "2020-12-17", "metadata": "Message: Merge tag 'arm-soc-dt-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc\n\nPull ARM device tree updates from Arnd Bergmann:\n \"Across all platforms, there is a continued move towards DT schema for\n  validating the dts files. As a result there are bug fixes for mistakes\n  that are found using these schema, in addition to warnings from the\n  dtc compiler.\n\n  As usual, many changes are for adding support for additional on-chip\n  and on-board components in the machines we already support.\n\n  The newly supported SoCs for this release are:\n\n   - MStar Infinity2M, a low-end IP camera chip based on a dual-core\n     Cortex-A7, otherwise similar to the Infinity chip we already\n     support. This is also known as the SigmaStar SSD202D, and we add\n     support for the Honestar ssd201htv2 development kit.\n\n   - Nuvoton NPCM730, a Cortex-A9 based Baseboard Management Controller\n     (BMC), in the same family as the NPCM750. This gets used in the\n     Ampere Altra based \"Fii Kudo\" server and the Quanta GSJ, both of\n     which are added as well.\n\n   - Broadcom BCM4908, a 64-bit home router chip based on Broadcom's own\n     Brahma-B53 CPU. Support is also added for the Asus ROG Rapture\n     GT-AC5300 high-end WiFi router based on this chip.\n\n   - Mediatek MT8192 is a new SoC based on eight Cortex-A76/A55 cores,\n     meant for faster Chromebooks and tablets. It gets added along with\n     its reference design.\n\n   - Mediatek MT6779 (Helio P90) is a high-end phone chip from last\n     year's generation, also added along with its reference board. This\n     one is still based on Cortex-A75/A55.\n\n   - Mediatek MT8167 is a version of the already supported MT8516 chip,\n     both based on Cortex-A35. It gets added along with the \"Pumpkin\"\n     single board computer, but is likely to also make its way into\n     low-end tablets in the future.\n\n  For the already supported chips, there are a number of new boards.\n  Interestingly there are more 32-bit machines added this time than\n  64-bit. Here is a brief list of the new boards:\n\n   - Three new Mikrotik router variants based on Marvell Prestera\n     98DX3236, a close relative of the more common Armada XP\n\n   - A reference board for the Marvell Armada 382\n\n   - Three new servers using ASpeed baseboard management controllers,\n     the actual machines being from Bytedance, Facebook and IBM, and one\n     machine using the Nuvoton NPCM750 BMC.\n\n   - The Galaxy Note 10.1 (P4) tablet, using an Exynos 4412.\n\n   - The usual set of 32-bit i.MX industrial/embedded hardware:\n       * Protonic WD3 (tractor e-cockpit)\n       * Kamstrup OMNIA Flex Concentrator (smart grid platform)\n       * Van der Laan LANMCU (food storage)\n       * Altesco I6P (vehicle inspection stations)\n       * PHYTEC phyBOARD-Segin/phyCORE-i.MX6UL baseboard\n\n   - DH electronics STM32MP157C DHCOM, a PicoITX carrier board for the\n     aleady supported DHCOM module\n\n   - Three new Allwinner SoC based single-board computers:\n       * NanoPi R1 (H3 based)\n       * FriendlyArm ZeroPi (H3 based)\n       * Elimo Initium SBC (S3 based)\n\n   - Ouya Game Console based on Nvidia Tegra 3\n\n   - Version 5 of the already supported Zynq Z-Turn MYIR Board\n\n   - LX2162AQDS, a reference platform for NXP Layerscape LX2162A, which\n     is a repackaged 16-core LX2160A\n\n   - A series of Kontron i.MX8M Mini baseboard/SoM versions\n\n   - Espressobin Ultra, a new variant of the popular Armada 3700 based\n     board,\n\n   - IEI Puzzle-M801, a rackmount network appliance based on Marvell\n     Armada 8040\n\n   - Microsoft Lumia 950 XL, a phone\n\n   - HDK855 and HDK865 Hardware development kits for Qualcomm sm8250 and\n     sm8150, respectively\n\n   - Three new board variants of the \"Trogdor\" Chromebook (sc7180)\n\n   - New board variants of the Renesas based \"Kingfisher\" and \"HiHope\"\n     reference boards\n\n   - Kobol Helios64, an open source NAS appliance based on Rockchips\n     RK3399\n\n   - Engicam PX30.Core, a SoM based on Rockchip PX30, along with a few\n     carrier boards\"\n\n* tag 'arm-soc-dt-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc: (679 commits)\n  arm64: dts: sparx5: Add SGPIO devices\n  arm64: dts: sparx5: Add reset support\n  dt-bindings: gpio: Add a binding header for the MSC313 GPIO driver\n  ARM: mstar: SMP support\n  ARM: mstar: Wire up smpctrl for SSD201/SSD202D\n  ARM: mstar: Add smp ctrl registers to infinity2m dtsi\n  ARM: mstar: Add dts for Honestar ssd201htv2\n  ARM: mstar: Add chip level dtsi for SSD202D\n  ARM: mstar: Add common dtsi for SSD201/SSD202D\n  ARM: mstar: Add infinity2m support\n  dt-bindings: mstar: Add Honestar SSD201_HT_V2 to mstar boards\n  dt-bindings: vendor-prefixes: Add honestar vendor prefix\n  dt-bindings: mstar: Add binding details for mstar,smpctrl\n  ARM: mstar: Fill in GPIO controller properties for infinity\n  ARM: mstar: Add gpio controller to MStar base dtsi\n  ARM: zynq: Fix incorrect reference to XM013 instead of XM011\n  ARM: zynq: Convert at25 binding to new description on zc770-xm013\n  ARM: zynq: Fix OCM mapping to be aligned with binding on zc702\n  ARM: zynq: Fix leds subnode name for zc702/zybo-z7\n  ARM: zynq: Rename bus to be align with simple-bus yaml\n  ... \nDate: 2020-12-17 - 00:27:35 \nAuthor: Linus Torvalds"}, {"id": "b0a6cd29e00a317d7fd823e0db57abbbd9bbb610", "date": "2020-12-17", "metadata": "Message: Merge tag 'arm-soc-defconfig-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc\n\nPull ARM SoC defconfig updates from Arnd Bergmann:\n \"These are the usual defconfig updates, adding support for additional\n  modules and updating some files according to changes in Kconfig.\n\n  I also include the removal of CONFIG_BACKLIGHT_GENERIC across multiple\n  architectures, after the driver was removed\"\n\n* tag 'arm-soc-defconfig-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc: (41 commits)\n  powerpc/configs: drop unused BACKLIGHT_GENERIC option\n  parisc: configs: drop unused BACKLIGHT_GENERIC option\n  arm64: defconfig: drop unused BACKLIGHT_GENERIC option\n  ARM: configs: drop unused BACKLIGHT_GENERIC option\n  arm64: defconfig: Enable more Librem 5 hardware\n  arm64: defconfig: Enable RTC_DRV_HYM8563\n  arm64: defconfig: Enable USB_SERIAL_CP210X\n  arm64: defconfig: Enable PHY_ROCKCHIP_INNO_DSIDPHY\n  arm64: defconfig: Enable ROCKCHIP_LVDS\n  arm64: defconfig: Enable ARM SCMI protocol and drivers\n  ARM: multi_v7_defconfig: Enable ARM SCMI protocol and drivers\n  ARM: multi_v7_defconfig: enable STM32 dfsdm audio support\n  ARM: multi_v7_defconfig: enable STM32 spdifrx support\n  ARM: multi_v7_defconfig: enable STUSB160X Type-C port controller support\n  ARM: multi_v7_defconfig: add STM32 crypto support\n  ARM: multi_v7_defconfig: enable counter subsystem and stm32 counter drivers\n  ARM: multi_v7_defconfig: make Samsung Exynos EHCI driver a module\n  arm64: defconfig: Enable Qualcomm PON driver\n  ARM: omap2plus_defconfig: Enable TI eQEP counter driver\n  ARM: multi_v7_defconfig: ti: Enable networking options for nfs boot\n  ... \nDate: 2020-12-17 - 00:25:03 \nAuthor: Linus Torvalds"}, {"id": "b06db0b3936956352a6ff693ea589bd4671c071d", "date": "2020-12-17", "metadata": "Message: Merge tag 'arm-soc-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc\n\nPull ARM SoC updates from Arnd Bergmann:\n \"These are updates for SoC specific code, mostly in the 32-bit\n  architecture:\n\n   - A rework for handling MMIO accesses in Renesas SoCs in a more\n     portable way\n\n   - Updates to SoC version detection in NXP i.MX SoCs.\n\n   - Smaller bug fixes for OMAP, Samsung, Marvell, Amlogic\"\n\n* tag 'arm-soc-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc: (24 commits)\n  arm64: Kconfig: meson: drop pinctrl\n  ARM: mxs: Add serial number support for i.MX23, i.MX28 SoCs\n  MAINTAINERS: switch mvebu tree to kernel.org\n  MAINTAINERS: Add an entry for MikroTik CRS3xx 98DX3236 boards\n  ARM: shmobile: Stop using __raw_*() I/O accessors\n  ARM: shmobile: sh73a0: Remove obsolete static mapping\n  ARM: shmobile: sh73a0: Use ioremap() to map SMP registers\n  ARM: shmobile: sh73a0: Use ioremap() to map L2C registers\n  ARM: shmobile: r8a7779: Remove obsolete static mappings\n  ARM: shmobile: r8a7779: Use ioremap() to map SMP registers\n  ARM: shmobile: r8a7779: Use ioremap() to map INTC2 registers\n  ARM: shmobile: r8a7778: Introduce HPBREG_BASE\n  ARM: OMAP1: clock: Use IS_ERR_OR_NULL() to clean code\n  ARM: OMAP2+: Remove redundant null check before clk_prepare_enable/clk_disable_unprepare\n  ARM: OMAP2+: Remove redundant assignment to variable ret\n  ARM: OMAP2+: Fix kfree NULL pointer in omap2xxx_clkt_vps_init\n  ARM: OMAP2+: Fix memleak in omap2xxx_clkt_vps_init\n  ARM: exynos: extend cpuidle support to P4 Note boards\n  ARM: imx: mach-imx6q: correctly identify i.MX6QP SoCs\n  ARM: imx: imx7ulp: Add a comment explaining the B2 silicon version\n  ... \nDate: 2020-12-17 - 00:22:36 \nAuthor: Linus Torvalds"}, {"id": "3ae32c07815a24ae12de2e7838d9d429ba31e5e0", "date": "2020-12-15", "metadata": "Message: mptcp: clear use_ack and use_map when dropping other suboptions\n\nThis patch cleared use_ack and use_map when dropping other suboptions to\nfix the following syzkaller BUG:\n\n[   15.223006] BUG: unable to handle page fault for address: 0000000000223b10\n[   15.223700] #PF: supervisor read access in kernel mode\n[   15.224209] #PF: error_code(0x0000) - not-present page\n[   15.224724] PGD b8d5067 P4D b8d5067 PUD c0a5067 PMD 0\n[   15.225237] Oops: 0000 [#1] SMP\n[   15.225556] CPU: 0 PID: 7747 Comm: syz-executor Not tainted 5.10.0-rc6+ #24\n[   15.226281] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\n[   15.227292] RIP: 0010:skb_release_data+0x89/0x1e0\n[   15.227816] Code: 5b 5d 41 5c 41 5d 41 5e 41 5f e9 02 06 8a ff e8 fd 05 8a ff 45 31 ed 80 7d 02 00 4c 8d 65 30 74 55 e8 eb 05 8a ff 49 8b 1c 24 <4c> 8b 7b 08 41 f6 c7 01 0f 85 18 01 00 00 e8 d4 05 8a ff 8b 43 34\n[   15.229669] RSP: 0018:ffffc900019c7c08 EFLAGS: 00010293\n[   15.230188] RAX: ffff88800daad900 RBX: 0000000000223b08 RCX: 0000000000000006\n[   15.230895] RDX: 0000000000000000 RSI: ffffffff818e06c5 RDI: ffff88807f6dc700\n[   15.231593] RBP: ffff88807f71a4c0 R08: 0000000000000001 R09: 0000000000000001\n[   15.232299] R10: ffffc900019c7c18 R11: 0000000000000000 R12: ffff88807f71a4f0\n[   15.233007] R13: 0000000000000000 R14: ffff88807f6dc700 R15: 0000000000000002\n[   15.233714] FS:  00007f65d9b5f700(0000) GS:ffff88807c400000(0000) knlGS:0000000000000000\n[   15.234509] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   15.235081] CR2: 0000000000223b10 CR3: 000000000b883000 CR4: 00000000000006f0\n[   15.235788] Call Trace:\n[   15.236042]  skb_release_all+0x28/0x30\n[   15.236419]  __kfree_skb+0x11/0x20\n[   15.236768]  tcp_data_queue+0x270/0x1240\n[   15.237161]  ? tcp_urg+0x50/0x2a0\n[   15.237496]  tcp_rcv_established+0x39a/0x890\n[   15.237997]  ? mark_held_locks+0x49/0x70\n[   15.238467]  tcp_v4_do_rcv+0xb9/0x270\n[   15.238915]  __release_sock+0x8a/0x160\n[   15.239365]  release_sock+0x32/0xd0\n[   15.239793]  __inet_stream_connect+0x1d2/0x400\n[   15.240313]  ? do_wait_intr_irq+0x80/0x80\n[   15.240791]  inet_stream_connect+0x36/0x50\n[   15.241275]  mptcp_stream_connect+0x69/0x1b0\n[   15.241787]  __sys_connect+0x122/0x140\n[   15.242236]  ? syscall_enter_from_user_mode+0x17/0x50\n[   15.242836]  ? lockdep_hardirqs_on_prepare+0xd4/0x170\n[   15.243436]  __x64_sys_connect+0x1a/0x20\n[   15.243924]  do_syscall_64+0x33/0x40\n[   15.244313]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n[   15.244821] RIP: 0033:0x7f65d946e469\n[   15.245183] Code: 00 f3 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d ff 49 2b 00 f7 d8 64 89 01 48\n[   15.247019] RSP: 002b:00007f65d9b5eda8 EFLAGS: 00000246 ORIG_RAX: 000000000000002a\n[   15.247770] RAX: ffffffffffffffda RBX: 000000000049bf00 RCX: 00007f65d946e469\n[   15.248471] RDX: 0000000000000010 RSI: 00000000200000c0 RDI: 0000000000000005\n[   15.249205] RBP: 000000000049bf00 R08: 0000000000000000 R09: 0000000000000000\n[   15.249908] R10: 0000000000000000 R11: 0000000000000246 R12: 000000000049bf0c\n[   15.250603] R13: 00007fffe8a25cef R14: 00007f65d9b3f000 R15: 0000000000000003\n[   15.251312] Modules linked in:\n[   15.251626] CR2: 0000000000223b10\n[   15.251965] BUG: kernel NULL pointer dereference, address: 0000000000000048\n[   15.252005] ---[ end trace f5c51fe19123c773 ]---\n[   15.252822] #PF: supervisor read access in kernel mode\n[   15.252823] #PF: error_code(0x0000) - not-present page\n[   15.252825] PGD c6c6067 P4D c6c6067 PUD c0d8067\n[   15.253294] RIP: 0010:skb_release_data+0x89/0x1e0\n[   15.253910] PMD 0\n[   15.253914] Oops: 0000 [#2] SMP\n[   15.253917] CPU: 1 PID: 7746 Comm: syz-executor Tainted: G      D           5.10.0-rc6+ #24\n[   15.253920] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\n[   15.254435] Code: 5b 5d 41 5c 41 5d 41 5e 41 5f e9 02 06 8a ff e8 fd 05 8a ff 45 31 ed 80 7d 02 00 4c 8d 65 30 74 55 e8 eb 05 8a ff 49 8b 1c 24 <4c> 8b 7b 08 41 f6 c7 01 0f 85 18 01 00 00 e8 d4 05 8a ff 8b 43 34\n[   15.254899] RIP: 0010:skb_release_data+0x89/0x1e0\n[   15.254902] Code: 5b 5d 41 5c 41 5d 41 5e 41 5f e9 02 06 8a ff e8 fd 05 8a ff 45 31 ed 80 7d 02 00 4c 8d 65 30 74 55 e8 eb 05 8a ff 49 8b 1c 24 <4c> 8b 7b 08 41 f6 c7 01 0f 85 18 01 00 00 e8 d4 05 8a ff 8b 43 34\n[   15.254905] RSP: 0018:ffffc900019bfc08 EFLAGS: 00010293\n[   15.255376] RSP: 0018:ffffc900019c7c08 EFLAGS: 00010293\n[   15.255580]\n[   15.255583] RAX: ffff888004a7ac80 RBX: 0000000000000040 RCX: 0000000000000000\n[   15.255912]\n[   15.256724] RDX: 0000000000000000 RSI: ffffffff818e06c5 RDI: ffff88807f6ddd00\n[   15.257620] RAX: ffff88800daad900 RBX: 0000000000223b08 RCX: 0000000000000006\n[   15.259817] RBP: ffff88800e9006c0 R08: 0000000000000000 R09: 0000000000000000\n[   15.259818] R10: 0000000000000000 R11: 0000000000000000 R12: ffff88800e9006f0\n[   15.259820] R13: 0000000000000000 R14: ffff88807f6ddd00 R15: 0000000000000002\n[   15.259822] FS:  00007fae4a60a700(0000) GS:ffff88807c500000(0000) knlGS:0000000000000000\n[   15.259826] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   15.260296] RDX: 0000000000000000 RSI: ffffffff818e06c5 RDI: ffff88807f6dc700\n[   15.262514] CR2: 0000000000000048 CR3: 000000000b89c000 CR4: 00000000000006e0\n[   15.262515] Call Trace:\n[   15.262519]  skb_release_all+0x28/0x30\n[   15.262523]  __kfree_skb+0x11/0x20\n[   15.263054] RBP: ffff88807f71a4c0 R08: 0000000000000001 R09: 0000000000000001\n[   15.263680]  tcp_data_queue+0x270/0x1240\n[   15.263843] R10: ffffc900019c7c18 R11: 0000000000000000 R12: ffff88807f71a4f0\n[   15.264693]  ? tcp_urg+0x50/0x2a0\n[   15.264856] R13: 0000000000000000 R14: ffff88807f6dc700 R15: 0000000000000002\n[   15.265720]  tcp_rcv_established+0x39a/0x890\n[   15.266438] FS:  00007f65d9b5f700(0000) GS:ffff88807c400000(0000) knlGS:0000000000000000\n[   15.267283]  ? __schedule+0x3fa/0x880\n[   15.267287]  tcp_v4_do_rcv+0xb9/0x270\n[   15.267290]  __release_sock+0x8a/0x160\n[   15.268049] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   15.268788]  release_sock+0x32/0xd0\n[   15.268791]  __inet_stream_connect+0x1d2/0x400\n[   15.268795]  ? do_wait_intr_irq+0x80/0x80\n[   15.269593] CR2: 0000000000223b10 CR3: 000000000b883000 CR4: 00000000000006f0\n[   15.270246]  inet_stream_connect+0x36/0x50\n[   15.270250]  mptcp_stream_connect+0x69/0x1b0\n[   15.270253]  __sys_connect+0x122/0x140\n[   15.271097] Kernel panic - not syncing: Fatal exception\n[   15.271820]  ? syscall_enter_from_user_mode+0x17/0x50\n[   15.283542]  ? lockdep_hardirqs_on_prepare+0xd4/0x170\n[   15.284275]  __x64_sys_connect+0x1a/0x20\n[   15.284853]  do_syscall_64+0x33/0x40\n[   15.285369]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n[   15.286105] RIP: 0033:0x7fae49f19469\n[   15.286638] Code: 00 f3 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d ff 49 2b 00 f7 d8 64 89 01 48\n[   15.289295] RSP: 002b:00007fae4a609da8 EFLAGS: 00000246 ORIG_RAX: 000000000000002a\n[   15.290375] RAX: ffffffffffffffda RBX: 000000000049bf00 RCX: 00007fae49f19469\n[   15.291403] RDX: 0000000000000010 RSI: 00000000200000c0 RDI: 0000000000000005\n[   15.292437] RBP: 000000000049bf00 R08: 0000000000000000 R09: 0000000000000000\n[   15.293456] R10: 0000000000000000 R11: 0000000000000246 R12: 000000000049bf0c\n[   15.294473] R13: 00007fff0004b6bf R14: 00007fae4a5ea000 R15: 0000000000000003\n[   15.295492] Modules linked in:\n[   15.295944] CR2: 0000000000000048\n[   15.296567] Kernel Offset: disabled\n[   15.296941] ---[ end Kernel panic - not syncing: Fatal exception ]---\n\nReported-by: Christoph Paasch <cpaasch@apple.com>\nFixes: 84dfe3677a6f (mptcp: send out dedicated ADD_ADDR packet)\nSigned-off-by: Geliang Tang <geliangtang@gmail.com>\nReviewed-by: Mat Martineau <mathew.j.martineau@linux.intel.com>\nLink: https://lore.kernel.org/r/ccca4e8f01457a1b495c5d612ed16c5f7a585706.1608010058.git.geliangtang@gmail.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-15 - 09:56:51 \nAuthor: Geliang Tang"}, {"id": "75f4d4544db9fa34e1f04174f27d9f8a387be37d", "date": "2020-12-15", "metadata": "Message: devlink: use _BITUL() macro instead of BIT() in the UAPI header\n\nThe BIT() macro is not available for the UAPI headers. Moreover, it can\nbe defined differently in user space headers. Thus, replace its usage\nwith the _BITUL() macro which is already used in other macro definitions\nin <linux/devlink.h>.\n\nFixes: dc64cc7c6310 (\"devlink: Add devlink reload limit option\")\nSigned-off-by: Tobias Klauser <tklauser@distanz.ch>\nLink: https://lore.kernel.org/r/20201215102531.16958-1-tklauser@distanz.ch\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-15 - 10:25:31 \nAuthor: Tobias Klauser"}, {"id": "e82226138b20d4f638426413e83c6b5db532c6a2", "date": "2020-12-17", "metadata": "Message: xfs: remove xfs_buf_t typedef\n\nPrepare for kernel xfs_buf  alignment by getting rid of the\nxfs_buf_t typedef from userspace.\n\n[darrick: This patch is a port of a userspace patch removing the\nxfs_buf_t typedef in preparation to make the userspace xfs_buf code\nbehave more like its kernel counterpart.]\n\nSigned-off-by: Dave Chinner <dchinner@redhat.com>\nReviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\nSigned-off-by: Darrick J. Wong <darrick.wong@oracle.com>\nReviewed-by: Dave Chinner <dchinner@redhat.com> \nDate: 2020-12-17 - 00:07:34 \nAuthor: Dave Chinner"}, {"id": "0c71cc04eb180c4b701cbe821635f2a122926065", "date": "2020-12-16", "metadata": "Message: Merge tag 'vfio-v5.11-rc1' of git://github.com/awilliam/linux-vfio\n\nPull VFIO updates from Alex Williamson:\n\n - Fix uninitialized list walk in error path (Eric Auger)\n\n - Use io_remap_pfn_range() (Jason Gunthorpe)\n\n - Allow fallback support for NVLink on POWER8 (Alexey Kardashevskiy)\n\n - Enable mdev request interrupt with CCW support (Eric Farman)\n\n - Enable interface to iommu_domain from vfio_group (Lu Baolu)\n\n* tag 'vfio-v5.11-rc1' of git://github.com/awilliam/linux-vfio:\n  vfio/type1: Add vfio_group_iommu_domain()\n  vfio-ccw: Wire in the request callback\n  vfio-mdev: Wire in a request handler for mdev parent\n  vfio/pci/nvlink2: Do not attempt NPU2 setup on POWER8NVL NPU\n  vfio-pci: Use io_remap_pfn_range() for PCI IO memory\n  vfio/pci: Move dummy_resources_list init in vfio_pci_probe() \nDate: 2020-12-16 - 23:51:15 \nAuthor: Linus Torvalds"}, {"id": "de925e2fbb44eed8a2a7ce166b485fed5eae01aa", "date": "2020-12-16", "metadata": "Message: Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/hid/hid\n\nPull HID updates from Jiri Kosina:\n\n - AMD SFH (Sensor Fusion Hub) support (Sandeep Singh)\n\n - increase of maximum HID report size to 16KB in order to support some\n   of the modern devices (Dean Camera)\n\n - control interface support for hidraw (Dean Camera)\n\n - Sony DS4 power and firmware reporting fixes (Roderick Colenbrander)\n\n - support for ghlive PS3/WII U dongles (Pascal Giard)\n\n* 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/hid/hid: (27 commits)\n  HID: i2c-hid: add Vero K147 to descriptor override\n  HID: ite: Add support for Acer S1002 keyboard-dock\n  HID: sony: support for ghlive ps3/wii u dongles\n  HID: hidraw: Add additional hidraw input/output report ioctls.\n  HID: Increase HID maximum report size to 16KB\n  HID: elecom: drop stray comment\n  HID: mf: add support for 0079:1846 Mayflash/Dragonrise USB Gamecube Adapter\n  HID: elecom: add support for EX-G M-XGL20DLBK wireless mouse\n  HID: elecom: rewrite report based on model specific parameters\n  HID: wacom: Constify attribute_groups\n  HID: input: Fix fall-through warnings for Clang\n  HID: usbhid: Fix fall-through warnings for Clang\n  HID: logitech-hidpp: Add hid_device_id for V470 bluetooth mouse\n  HID: intel-ish-hid: Remove unnecessary assignment to variable rv\n  HID: sony: Workaround for DS4 dongle hotplug kernel crash.\n  HID: sony: Don't use fw_version/hw_version for sysfs cleanup.\n  HID: sony: Report more accurate DS4 power status.\n  SFH: fix error return check for -ERESTARTSYS\n  HID: SFH: Add documentation\n  HID: hid-input: occasionally report stylus battery even if not changed\n  ... \nDate: 2020-12-16 - 23:44:44 \nAuthor: Linus Torvalds"}, {"id": "62746f92b10a4add6a7db87ff59b901276746b11", "date": "2020-12-16", "metadata": "Message: Merge tag 'devicetree-for-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux\n\nPull devicetree updates from Rob Herring:\n\n - Add vendor prefixes for bm, gpio-key, mentor, FII, and Ampere\n\n - Add ADP5585/ADP5589 and delta,q54sj108a2 to trivial-devices.yaml\n\n - Convert fixed-partitions, i2c-gate and fsl,dpaa2-console bindings to\n   schemas\n\n - Drop PicoXcell bindings\n\n - Drop unused and undocumented 'pnx,timeout' property from LPC32xx\n\n - Add 'dynamic-power-coefficient' to Mali GPU bindings\n\n - Make 'make dt_binding_check' not error out on warnings\n\n - Various minor binding fixes\n\n* tag 'devicetree-for-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux: (22 commits)\n  dt-bindings: mali-bifrost: Add dynamic-power-coefficient\n  dt-bindings: mali-midgard: Add dynamic-power-coefficient\n  dt-bindings: i2c: dw: cancel mandatory requirements for \"#address-cells\" and \"#size-cells\"\n  dt-bindings: Remove PicoXcell bindings\n  ARM: dts: lpc32xx: Remove unused and undocumented 'pnx,timeout'\n  dt-bindings: mtd: convert \"fixed-partitions\" to the json-schema\n  dt-bindings: vendor-prefixes: Add undocumented bm, gpio-key, and mentor prefixes\n  dt-bindings: pci: rcar-pci-ep: Document missing interrupts property\n  dt-bindings: vendor-prefixes: Add an entry for AmpereComputing.com\n  dt-bindings: vendor-prefixes: correct the spelling of TQ-Systems GmbH\n  dt-bindings: mfd: fix stm32 timers example\n  dt-bindings: trivial-devices: Add delta,q54sj108a2\n  dt-bindings:i2c:i2c-gate: txt to yaml conversion\n  dt-bindings: add ADP5585/ADP5589 entries to trivial-devices\n  dt-bindings: Correct GV11B GPU register sizes\n  dt-bindings: vendor-prefixes: Add FII\n  dt-bindings: Fix typo on the DesignWare IP reset bindings documentation\n  dt-bindings: Fix error in 'make dtbs_check' when using DT_SCHEMA_FILES\n  dt-bindings: arm: vt8500: remove redundant white-spaces\n  dt-bindings: fsl-imx-drm: fix example compatible string\n  ... \nDate: 2020-12-16 - 23:08:28 \nAuthor: Linus Torvalds"}, {"id": "f68e4041ef63f03091e44b4eebf1ab5c5d427e6f", "date": "2020-12-16", "metadata": "Message: Merge tag 'pinctrl-v5.11-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl\n\nPull pin control updates from Linus Walleij:\n \"This is the bulk of pin control changes for the v5.11 kernel.\n\n  Drivers, drivers and drivers. Not a single core change.\n\n  Some new stuff, especially a bunch of new Intel, Qualcomm and Ocelot\n  SoCs.\n\n  As part of the modularization attempt, I applied one patch affecting\n  the firmware subsystem as a functional (not syntactic/semantic)\n  dependency and then it blew up in our face, so I had to revert it,\n  bummer. It will come in later, through that subsystem, I guess.\n\n  New drivers:\n\n   - New driver for the Microchip Serial GPIO \"SGPIO\".\n\n   - Qualcomm SM8250 LPASS (Low Power Audio Subsystem) GPIO driver.\n\n  New subdrivers:\n\n   - Intel Lakefield subdriver.\n\n   - Intel Elkhart Lake subdriver.\n\n   - Intel Alder Lake-S subdriver.\n\n   - Qualcomm MSM8953 subdriver.\n\n   - Qualcomm SDX55 subdriver.\n\n   - Qualcomm SDX55 PMIC subdriver.\n\n   - Ocelot Luton SoC subdriver.\n\n   - Ocelot Serval SoC subdriver.\n\n  Modularization:\n\n   - The Meson driver can now be built as modules.\n\n   - The Qualcomm driver(s) can now be built as modules.\n\n  Incremental improvements:\n\n   - The Intel driver now supports pin configuration for GPIO-related\n     configurations.\n\n   - A bunch of Renesas PFC drivers have been augmented with support for\n     QSPI pins, groups and functions.\n\n   - Non-critical fixes to the irq handling in the Allwinner Sunxi\n     driver\"\n\n* tag 'pinctrl-v5.11-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl: (80 commits)\n  pinctrl/spear: simplify the return expression of spear300_pinctrl_probe()\n  pinctrl: mediatek: simplify the return expression of mtk_pinconf_bias_disable_set_rev1()\n  dt-bindings: pinctrl: pinctrl-microchip-sgpio: Add irq support\n  pinctrl: pinctrl-microchip-sgpio: Add irq support (for sparx5)\n  pinctrl: qcom: Add sm8250 lpass lpi pinctrl driver\n  dt-bindings: pinctrl: qcom: Add sm8250 lpass lpi pinctrl bindings\n  pinctrl: qcom-pmic-gpio: Add support for pmx55\n  dt-bindings: pinctrl: qcom-pmic-gpio: Add pmx55 support\n  pinctrl: pinctrl-microchip-sgpio: Mark some symbols with static keyword\n  pinctrl: at91-pio4: Make PINCTRL_AT91PIO4 depend on HAS_IOMEM to fix build error\n  pinctrl: mtk: Fix low level output voltage issue\n  pinctrl: falcon: add missing put_device() call in pinctrl_falcon_probe()\n  pinctrl: actions: pinctrl-s500: Constify s500_padinfo[]\n  pinctrl: pinctrl-microchip-sgpio: Add OF config dependency\n  pinctrl: pinctrl-microchip-sgpio: Add pinctrl driver for Microsemi Serial GPIO\n  dt-bindings: pinctrl: Add bindings for pinctrl-microchip-sgpio driver\n  pinctrl: at91-pio4: add support for fewer lines on last PIO bank\n  pinctrl: sunxi: Always call chained_irq_{enter, exit} in sunxi_pinctrl_irq_handler\n  pinctrl: sunxi: Mark the irq bank not found in sunxi_pinctrl_irq_handler() with WARN_ON\n  pinctrl: sunxi: fix irq bank map for the Allwinner A100 pin controller\n  ... \nDate: 2020-12-16 - 23:02:49 \nAuthor: Linus Torvalds"}, {"id": "31f6551ad75608d9c71fd4d3548c33f1abc52093", "date": "2020-12-16", "metadata": "Message: cifs: handle \"guest\" mount parameter\n\nWith the new mount API it can not handle empty strings for\nmount parms (\"guest\" is mapped in userspace mount helper to\n\"user=\") so we have to special case it as we do for the\npassword mount parm.\n\nSigned-off-by: Steve French <stfrench@microsoft.com>\nReviewed-by: Ronnie Sahlberg <lsahlber@redhat.com> \nDate: 2020-12-16 - 22:26:35 \nAuthor: Steve French"}, {"id": "7eb000bdbe7c7da811ef51942b356f6e819b13ba", "date": "2020-12-14", "metadata": "Message: net: korina: fix return value\n\nThe ndo_start_xmit() method must not attempt to free the skb to transmit\nwhen returning NETDEV_TX_BUSY. Therefore, make sure the\nkorina_send_packet() function returns NETDEV_TX_OK when it frees a packet.\n\nFixes: ef11291bcd5f (\"Add support the Korina (IDT RC32434) Ethernet MAC\")\nSuggested-by: Jakub Kicinski <kuba@kernel.org>\nSigned-off-by: Vincent Stehl\u00e9 <vincent.stehle@laposte.net>\nAcked-by: Florian Fainelli <f.fainelli@gmail.com>\nLink: https://lore.kernel.org/r/20201214220952.19935-1-vincent.stehle@laposte.net\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-14 - 22:09:52 \nAuthor: Vincent Stehl\u00e9"}, {"id": "a701262c02cec71dc29b10fe910ba3c2298f5ba3", "date": "2020-12-16", "metadata": "Message: Merge tag 'mtd/for-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mtd/linux\n\nPull MTD updates from Miquel Raynal:\n \"MTD core:\n   - Fix refcounting for unpartitioned MTDs\n   - Fix misspelled function parameter 'section'\n   - Remove unneeded break\n   - cmdline parser: Fix parsing of part-names with colons\n   - mtdpart: Fix misdocumented function parameter 'mtd'\n\n  MTD devices:\n   - phram:\n      - Allow the user to set the erase page size\n      - File headers are not good candidates for kernel-doc\n   - physmap-bt1-rom: Fix __iomem addrspace removal warning\n   - plat-ram: correctly free memory on error path in platram_probe()\n   - powernv_flash: Add function names to headers and fix 'dev'\n   - docg3: Fix kernel-doc 'bad line' and 'excessive doc' issues\n\n  UBI cleanup fixes:\n   - gluebi: Fix misnamed function parameter documentation\n   - wl: Fix a couple of kernel-doc issues\n   - eba: Fix a couple of misdocumentation issues\n   - kapi: Correct documentation for 'ubi_leb_read_sg's 'sgl' parameter\n   - Document 'ubi_num' in struct mtd_dev_param\n\n  Generic NAND core ECC management:\n   - Add an I/O request tweaking mechanism\n   - Entire rework of the software BCH ECC driver, creation of a real\n     ECC engine, getting rid of raw NAND structures, migration to more\n     generic prototypes, misc fixes and style cleanup. Moved now to the\n     Generic NAND layer.\n   - Entire rework of the software Hamming ECC driver, creation of a\n     real ECC engine, getting rid of raw NAND structures, misc renames,\n     comment updates, cleanup, and style fixes. Moved now to the generic\n     NAND layer.\n   - Necessary plumbing at the NAND level to retrieve generic NAND ECC\n     engines (softwares and on-die).\n   - Update of the bindings.\n\n  Raw NAND core:\n   - Geting rid of the chip->ecc.priv entry.\n   - Fix miscellaneous typos in kernel-doc\n\n  Raw NAND controller drivers:\n   - Arasan: Document 'anfc_op's 'buf' member\n   - AU1550: Ensure the presence of the right includes\n   - Brcmnand: Demote non-conformant kernel-doc headers\n   - Cafe: Remove superfluous param doc and add another\n   - Davinci: Do not use extra dereferencing\n   - Diskonchip: Marking unused variables as __always_unused\n   - GPMI:\n      - Fix the driver only sense CS0 R/B issue\n      - Fix the random DMA timeout issue\n      - Use a single line for of_device_id\n      - Use of_device_get_match_data()\n      - Fix reference count leak in gpmi ops\n      - Cleanup makefile\n      - Fix binding matching of clocks on different SoCs\n   - Ingenic: remove redundant get_device() in ingenic_ecc_get()\n   - Intel LGM: New NAND controller driver\n   - Marvell: Drop useless line\n   - Meson:\n      - Fix a resource leak in init\n      - Fix meson_nfc_dma_buffer_release() arguments\n   - mxc:\n      - Use device_get_match_data()\n      - Use a single line for of_device_id\n      - Remove platform data support\n   - Omap:\n      - Fix a bunch of kernel-doc misdemeanours\n      - Finish ELM half populated function header, demote empty ones\n   - s3c2410: Add documentation for 2 missing struct members\n   - Sunxi: Document 'sunxi_nfc's 'caps' member\n   - Qcom:\n      - Add support for SDX55\n      - Support for IPQ6018 QPIC NAND controller\n      - Fix DMA sync on FLASH_STATUS register read\n   - Rockchip: New NAND controller driver for RK3308, RK2928 and others\n   - Sunxi: Add MDMA support\n\n  ONENAND:\n   - bbt: Fix expected kernel-doc formatting\n   - Fix some kernel-doc misdemeanours\n   - Fix expected kernel-doc formatting\n   - Use mtd->oops_panic_write as condition\n\n  SPI-NAND core:\n   - Creation of a SPI-NAND on-die ECC engine\n   - Move ECC related definitions earlier in the driver\n   - Fix typo in comment\n   - Fill a default ECC provider/algorithm\n   - Remove outdated comment\n   - Fix OOB read\n   - Allow the case where there is no ECC engine\n   - Use the external ECC engine logic\n\n  SPI-NAND chip drivers:\n   - Micron:\n      - Add support for MT29F2G01AAAED\n      - Use more specific names\n   - Macronix:\n      - Add support for MX35LFxG24AD\n      - Add support for MX35LFxGE4AD\n   - Toshiba: Demote non-conformant kernel-doc header\n\n  SPI-NOR core:\n   - Initial support for stateful Octal DTR mode using volatile settings\n   - Preliminary support for JEDEC 251 (xSPI) and JEDEC 216D standards\n   - Support for Cypress Semper flash\n   - Support to specify ECC block size of SPI NOR flashes\n   - Fixes to avoid clearing of non-volatile Block Protection bits at\n     probe\n   - hisi-sfc: Demote non-conformant kernel-doc\"\n\n* tag 'mtd/for-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mtd/linux: (120 commits)\n  mtd: spinand: macronix: Add support for MX35LFxG24AD\n  mtd: rawnand: rockchip: NFC driver for RK3308, RK2928 and others\n  dt-bindings: mtd: Describe Rockchip RK3xxx NAND flash controller\n  mtd: rawnand: gpmi: Use a single line for of_device_id\n  mtd: rawnand: gpmi: Fix the random DMA timeout issue\n  mtd: rawnand: gpmi: Fix the driver only sense CS0 R/B issue\n  mtd: rawnand: qcom: Add NAND controller support for SDX55\n  dt-bindings: qcom_nandc: Add SDX55 QPIC NAND documentation\n  mtd: rawnand: mxc: Use a single line for of_device_id\n  mtd: rawnand: mxc: Use device_get_match_data()\n  mtd: rawnand: meson: Fix a resource leak in init\n  mtd: rawnand: gpmi: Use of_device_get_match_data()\n  mtd: rawnand: Add NAND controller support on Intel LGM SoC\n  dt-bindings: mtd: Add Nand Flash Controller support for Intel LGM SoC\n  mtd: spinand: micron: Add support for MT29F2G01AAAED\n  mtd: spinand: micron: Use more specific names\n  mtd: rawnand: gpmi: fix reference count leak in gpmi ops\n  dt-bindings: mtd: gpmi-nand: Fix matching of clocks on different SoCs\n  mtd: spinand: macronix: Add support for MX35LFxGE4AD\n  mtd: plat-ram: correctly free memory on error path in platram_probe()\n  ... \nDate: 2020-12-16 - 22:58:35 \nAuthor: Linus Torvalds"}, {"id": "945433be3677955255fabecbf1076c17864ff9da", "date": "2020-12-16", "metadata": "Message: Merge tag 'leds-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/pavel/linux-leds\n\nPull LED updates from Pavel Machek:\n \"Small cleanups/fixes mostly thanks to Marek, nothing major made it in\n  this time\"\n\n* tag 'leds-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/pavel/linux-leds:\n  leds: turris-omnia: check for LED_COLOR_ID_RGB instead LED_COLOR_ID_MULTI\n  leds: turris-omnia: fix checkpatch warning\n  leds: turris-omnia: wrap to 80 columns\n  leds: turris-omnia: use constants instead of macros for color command\n  dt-bindings: leds: Convert pwm to yaml\n  leds: lp50xx: Fix an error handling path in 'lp50xx_probe_dt()'\n  leds: netxbig: add missing put_device() call in netxbig_leds_get_of_pdata()\n  Documentation: leds: remove invalidated information \nDate: 2020-12-16 - 22:56:29 \nAuthor: Linus Torvalds"}, {"id": "f67d6620e413a167e861ce5733c1be5a2384e0c4", "date": "2020-12-16", "metadata": "Message: Merge tag 'for-linus-5.11-1' of git://github.com/cminyard/linux-ipmi\n\nPull IPMI updates from Corey Minyard:\n \"Some very minor changes.\n\n  Nothing functional, just little syntax cleanups and a RCU warning\n  suppression\"\n\n* tag 'for-linus-5.11-1' of git://github.com/cminyard/linux-ipmi:\n  char: ipmi: convert comma to semicolon\n  ipmi: msghandler: Suppress suspicious RCU usage warning\n  ipmi/watchdog: replace atomic_add() and atomic_sub()\n  char: ipmi: remove unneeded break \nDate: 2020-12-16 - 22:54:39 \nAuthor: Linus Torvalds"}, {"id": "84e010ec8f8668c579b78a27b0e81a49ac6c837a", "date": "2020-12-16", "metadata": "Message: Merge tag 'backlight-next-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/backlight\n\nPull backlight update from Lee Jones:\n \"Careful, it's a big one!\n\n   - Fix pwm_bl driver interpolation issues by switching to a linear\n     algorithm\"\n\n* tag 'backlight-next-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/backlight:\n  backlight: pwm_bl: Fix interpolation \nDate: 2020-12-16 - 22:52:37 \nAuthor: Linus Torvalds"}, {"id": "278f54c46164e9859090dde7e4ceede830c6beb6", "date": "2020-12-16", "metadata": "Message: Merge tag 'mfd-next-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd\n\nPull MFD updates from Lee Jones:\n \"New Drivers\n   - Add support for Intel's Platform Monitoring Technology (PMT)\n\n  New Device Support:\n   - Add support for PM660/PM660L to QCom SPMI PMIC\n   - Add support for lots of new devices to Kontron Core\n\n  New Functionality:\n   - Provide syscon_regmap_lookup_by_phandle_optional() to SysCon API\n\n  Fix-ups:\n   - Constify; da9xxx-core; intel_*, tps65xxx, wm8xxx-core, lp8788,\n     stmpe, sun4i-gpadc, 88pm800, hi655x-pmic, ioc3, etc\n   - Remove superfluous code; madera, tps65910\n   - Use raw APIs (rid abstractions); tps65911-comparator, tps65910\n   - Whitespace/formatting fix-ups; tps65910\n   - Device Tree changes/updates; bd71837-pmic, syscon\n   - Use helpers/APIs (no hand rolling); altera-sysmgr\n   - Mark of_match tables as __maybe_unused; twl6030-irq\n   - Fix spelling; si476x-core\n\n  Bug Fixes:\n   - Reset on resume to ensure known state; madera-core\n   - Correct ordering issues; madera-core, tps65910, kempld-core\n   - Remove erroneous passing of of_compatible strings; at91-usart\n   - Fix potential I2C adaptor leak; htc-i2cpld\n   - Correct errorneous defines; rt5033-private\n   - Resolve Kconfig issues; MFD_SL28CPLD, MFD_OMAP_USB_HOST\n   - Fix dev_err_probe() handling; stmfx\n   - Repair interrupt regression; motorola-cpcap\n   - Allow ACPI matching of DT tables; bcm590xx, da9xx, ene-kb3930,\n     fsl-imx25-tsadc, max77650, mt6397-core, rt5033, stmfx, max77686,\n     sun4i-gpadc, wm8994-core, axp20x-i2c\"\n\n[ The PMT updates already came in through the x86 platform tree ]\n\n* tag 'mfd-next-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd: (48 commits)\n  mfd: kempld-core: Add support for additional devices\n  mfd: si476x-core.h: Fix \"regulator\" spelling in comment\n  mfd: twl6030: Mark of_device_id table as maybe unused\n  mfd: axp20x: Skip of_device_id table when !CONFIG_OF\n  mfd: wm8994: Drop of_match_ptr from of_device_id table\n  mfd: sun4i: Drop of_match_ptr from of_device_id table\n  mfd: max77686: Drop of_match_ptr from of_device_id table\n  mfd: stmfx: Drop of_match_ptr from of_device_id table\n  mfd: rt5033: Drop of_match_ptr from of_device_id table\n  mfd: mt6397: Drop of_match_ptr from of_device_id table\n  mfd: max77650: Drop of_match_ptr from of_device_id table\n  mfd: fsl-imx25: Drop of_match_ptr from of_device_id table\n  mfd: ene-kb3930: Drop of_match_ptr from of_device_id table\n  mfd: da9150: Drop of_match_ptr from of_device_id table\n  mfd: da9063: Drop of_match_ptr from of_device_id table\n  mfd: da9062: Drop of_match_ptr from of_device_id table\n  mfd: da9055: Drop of_match_ptr from of_device_id table\n  mfd: bcm590xx: Drop of_match_ptr from of_device_id table\n  mfd: omap-usb: Depend on COMMON_CLK to fix compile tests\n  mfd: kempld-core: Check for DMI definition before ACPI\n  ... \nDate: 2020-12-16 - 22:48:32 \nAuthor: Linus Torvalds"}, {"id": "fff875a18382f1983b4a27be9282e697dbccb3db", "date": "2020-12-16", "metadata": "Message: Merge tag 'memblock-v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rppt/memblock\n\nPull memblock updates from Mike Rapoport:\n \"memblock debug enhancements.\n\n  Improve tracking of early memory allocations when memblock debug is\n  enabled:\n\n   - Add memblock_dbg() to memblock_phys_alloc_range() to get details\n     about its usage\n\n   - Make memblock allocator wrappers actually inline to track their\n     callers in memblock debug messages\"\n\n* tag 'memblock-v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rppt/memblock:\n  mm: memblock: drop __init from memblock functions to make it inline\n  mm: memblock: add more debug logs \nDate: 2020-12-16 - 22:44:53 \nAuthor: Linus Torvalds"}, {"id": "efd3043790c6e92f0bbe1fe385db9b544131c59c", "date": "2020-12-16", "metadata": "Message: Merge tag 'amd-drm-fixes-5.11-2020-12-16' of git://people.freedesktop.org/~agd5f/linux into drm-next\n\namd-drm-fixes-5.11-2020-12-16:\n\namdgpu:\n- Fix a eDP regression for DCE asics\n- SMU fixes for sienna cichlid\n- Misc W=1 fixes\n- SDMA 5.2 reset fix\n- Suspend/resume fix\n- Misc display fixes\n- Misc runtime PM fixes and cleanups\n- Dimgrey Cavefish fixes\n- printk cleanup\n- Documentation warning fixes\n\namdkfd:\n- Error logging fix\n- Fix pipe offset calculation\n\nradeon:\n- printk cleanup\n\nSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nFrom: Alex Deucher <alexdeucher@gmail.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20201216192421.18627-1-alexander.deucher@amd.com \nDate: 2020-12-16 - 22:25:51 \nAuthor: Daniel Vetter"}, {"id": "52104f274e2d7f134d34bab11cada8913d4544e2", "date": "2020-12-16", "metadata": "Message: NFS/pNFS: Fix a typo in ff_layout_resend_pnfs_read()\n\nDon't bump the index twice.\n\nFixes: 563c53e73b8b (\"NFS: Fix flexfiles read failover\")\nSigned-off-by: Trond Myklebust <trond.myklebust@hammerspace.com> \nDate: 2020-12-16 - 22:17:45 \nAuthor: Trond Myklebust"}, {"id": "9bfffea3524b49d0268d01f8e7967f06c4d0a942", "date": "2020-12-16", "metadata": "Message: pNFS/flexfiles: Avoid spurious layout returns in ff_layout_choose_ds_for_read\n\nThe callers of ff_layout_choose_ds_for_read() should decide whether or\nnot they want to return the layout on error. Sometimes, we may just want\nto retry from the beginning.\n\nSigned-off-by: Trond Myklebust <trond.myklebust@hammerspace.com> \nDate: 2020-12-16 - 19:01:07 \nAuthor: Trond Myklebust"}, {"id": "cac1d3a2b8f7f0817ac4feab76f5d3b12e4b02d7", "date": "2020-12-16", "metadata": "Message: NFSv4/pnfs: Add tracing for the deviceid cache\n\nAdd tracepoints to allow debugging of the deviceid cache.\n\nSigned-off-by: Trond Myklebust <trond.myklebust@hammerspace.com> \nDate: 2020-12-16 - 21:31:26 \nAuthor: Trond Myklebust"}, {"id": "870d16757ba8918c3f8cac162b9ca7669556dbab", "date": "2020-12-16", "metadata": "Message: arm64: make _TIF_WORK_MASK bits contiguous\n\nWe need the bits of _TIF_WORK_MASK to be contiguous in order to to use\nthis as an immediate argument to an AND instruction in entry.S.\n\nWe happened to change these bits in commits:\n\n  b5a5a01d8e9a (\"arm64: uaccess: remove addr_limit_user_check()\")\n  192caabd4dd9 (\"arm64: add support for TIF_NOTIFY_SIGNAL\")\n\nwhich each worked in isolation, but the merge resolution in commit:\n\n  005b2a9dc819 (\"Merge tag 'tif-task_work.arch-2020-12-14' of git://git.kernel.dk/linux-block\")\n\nhappened to make the bits non-contiguous.\n\nFix this by moving TIF_NOTIFY_SIGNAL to be bit 6, which is contiguous\nwith the rest of _TIF_WORK_MASK.\n\nOtherwise, we'll get a build-time failure as below:\n\n   arch/arm64/kernel/entry.S: Assembler messages:\n   arch/arm64/kernel/entry.S:733: Error: immediate out of range at operand 3 -- `and x2,x19,#((1<<1)|(1<<0)|(1<<2)|(1<<3)|(1<<4)|(1<<5)|(1<<7))'\n   scripts/Makefile.build:360: recipe for target 'arch/arm64/kernel/entry.o' failed\n\nFixes: 005b2a9dc819a126 (\"Merge tag 'tif-task_work.arch-2020-12-14' of git://git.kernel.dk/linux-block\")\nSigned-off-by: Mark Rutland <mark.rutland@arm.com>\nCc: Catalin Marinas <catalin.marinas@arm.com>\nCc: Will Deacon <will@kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org> \nDate: 2020-12-16 - 21:32:48 \nAuthor: Mark Rutland"}, {"id": "19778dd504b5ff5c3c1283aa3da7a56f34c2c3b0", "date": "2020-12-16", "metadata": "Message: Merge tag 'iommu-updates-v5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux\n\nPull IOMMU updates from Will Deacon:\n \"There's a good mixture of improvements to the core code and driver\n  changes across the board.\n\n  One thing worth pointing out is that this includes a quirk to work\n  around behaviour in the i915 driver (see 65f746e8285f (\"iommu: Add\n  quirk for Intel graphic devices in map_sg\")), which otherwise\n  interacts badly with the conversion of the intel IOMMU driver over to\n  the DMA-IOMMU APU but has being fixed properly in the DRM tree.\n\n  We'll revert the quirk later this cycle once we've confirmed that\n  things don't fall apart without it.\n\n  Summary:\n\n   - IOVA allocation optimisations and removal of unused code\n\n   - Introduction of DOMAIN_ATTR_IO_PGTABLE_CFG for parameterising the\n     page-table of an IOMMU domain\n\n   - Support for changing the default domain type in sysfs\n\n   - Optimisation to the way in which identity-mapped regions are\n     created\n\n   - Driver updates:\n       * Arm SMMU updates, including continued work on Shared Virtual\n         Memory\n       * Tegra SMMU updates, including support for PCI devices\n       * Intel VT-D updates, including conversion to the IOMMU-DMA API\n\n   - Cleanup, kerneldoc and minor refactoring\"\n\n* tag 'iommu-updates-v5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux: (50 commits)\n  iommu/amd: Add sanity check for interrupt remapping table length macros\n  dma-iommu: remove __iommu_dma_mmap\n  iommu/io-pgtable: Remove tlb_flush_leaf\n  iommu: Stop exporting free_iova_mem()\n  iommu: Stop exporting alloc_iova_mem()\n  iommu: Delete split_and_remove_iova()\n  iommu/io-pgtable-arm: Remove unused 'level' parameter from iopte_type() macro\n  iommu: Defer the early return in arm_(v7s/lpae)_map\n  iommu: Improve the performance for direct_mapping\n  iommu: avoid taking iova_rbtree_lock twice\n  iommu/vt-d: Avoid GFP_ATOMIC where it is not needed\n  iommu/vt-d: Remove set but not used variable\n  iommu: return error code when it can't get group\n  iommu: Fix htmldocs warnings in sysfs-kernel-iommu_groups\n  iommu: arm-smmu-impl: Add a space before open parenthesis\n  iommu: arm-smmu-impl: Use table to list QCOM implementations\n  iommu/arm-smmu: Move non-strict mode to use io_pgtable_domain_attr\n  iommu/arm-smmu: Add support for pagetable config domain attribute\n  iommu: Document usage of \"/sys/kernel/iommu_groups/<grp_id>/type\" file\n  iommu: Take lock before reading iommu group default domain type\n  ... \nDate: 2020-12-16 - 21:58:47 \nAuthor: Linus Torvalds"}, {"id": "007c74e16c1aac9f5c93b372a054f7f11ede8628", "date": "2020-12-16", "metadata": "Message: Merge branch 'stable/for-linus-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/konrad/swiotlb\n\nPull swiotlb update from Konrad Rzeszutek Wilk:\n \"A generic (but for right now engaged only with AMD SEV) mechanism to\n  adjust a larger size SWIOTLB based on the total memory of the SEV\n  guests which right now require the bounce buffer for interacting with\n  the outside world.\n\n  Normal knobs (swiotlb=XYZ) still work\"\n\n* 'stable/for-linus-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/konrad/swiotlb:\n  x86,swiotlb: Adjust SWIOTLB bounce buffer size for SEV guests \nDate: 2020-12-16 - 21:51:34 \nAuthor: Linus Torvalds"}, {"id": "009bd55dfcc857d8b00a5bbb17a8db060317af6f", "date": "2020-12-16", "metadata": "Message: Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rdma/rdma\n\nPull rdma updates from Jason Gunthorpe:\n \"A smaller set of patches, nothing stands out as being particularly\n  major this cycle. The biggest item would be the new HIP09 HW support\n  from HNS, otherwise it was pretty quiet for new work here:\n\n   - Driver bug fixes and updates: bnxt_re, cxgb4, rxe, hns, i40iw,\n     cxgb4, mlx4 and mlx5\n\n   - Bug fixes and polishing for the new rts ULP\n\n   - Cleanup of uverbs checking for allowed driver operations\n\n   - Use sysfs_emit all over the place\n\n   - Lots of bug fixes and clarity improvements for hns\n\n   - hip09 support for hns\n\n   - NDR and 50/100Gb signaling rates\n\n   - Remove dma_virt_ops and go back to using the IB DMA wrappers\n\n   - mlx5 optimizations for contiguous DMA regions\"\n\n* tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rdma/rdma: (147 commits)\n  RDMA/cma: Don't overwrite sgid_attr after device is released\n  RDMA/mlx5: Fix MR cache memory leak\n  RDMA/rxe: Use acquire/release for memory ordering\n  RDMA/hns: Simplify AEQE process for different types of queue\n  RDMA/hns: Fix inaccurate prints\n  RDMA/hns: Fix incorrect symbol types\n  RDMA/hns: Clear redundant variable initialization\n  RDMA/hns: Fix coding style issues\n  RDMA/hns: Remove unnecessary access right set during INIT2INIT\n  RDMA/hns: WARN_ON if get a reserved sl from users\n  RDMA/hns: Avoid filling sl in high 3 bits of vlan_id\n  RDMA/hns: Do shift on traffic class when using RoCEv2\n  RDMA/hns: Normalization the judgment of some features\n  RDMA/hns: Limit the length of data copied between kernel and userspace\n  RDMA/mlx4: Remove bogus dev_base_lock usage\n  RDMA/uverbs: Fix incorrect variable type\n  RDMA/core: Do not indicate device ready when device enablement fails\n  RDMA/core: Clean up cq pool mechanism\n  RDMA/core: Update kernel documentation for ib_create_named_qp()\n  MAINTAINERS: SOFT-ROCE: Change Zhu Yanjun's email address\n  ... \nDate: 2020-12-16 - 21:42:26 \nAuthor: Linus Torvalds"}, {"id": "60f7c503d971a731ee3c4f884a9f2e80d476730d", "date": "2020-12-16", "metadata": "Message: Merge tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi\n\nPull SCSI updates from James Bottomley:\n \"This consists of the usual driver updates (ufs, qla2xxx, smartpqi,\n  target, zfcp, fnic, mpt3sas, ibmvfc) plus a load of cleanups, a major\n  power management rework and a load of assorted minor updates.\n\n  There are a few core updates (formatting fixes being the big one) but\n  nothing major this cycle\"\n\n* tag 'scsi-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi: (279 commits)\n  scsi: mpt3sas: Update driver version to 36.100.00.00\n  scsi: mpt3sas: Handle trigger page after firmware update\n  scsi: mpt3sas: Add persistent MPI trigger page\n  scsi: mpt3sas: Add persistent SCSI sense trigger page\n  scsi: mpt3sas: Add persistent Event trigger page\n  scsi: mpt3sas: Add persistent Master trigger page\n  scsi: mpt3sas: Add persistent trigger pages support\n  scsi: mpt3sas: Sync time periodically between driver and firmware\n  scsi: qla2xxx: Update version to 10.02.00.104-k\n  scsi: qla2xxx: Fix device loss on 4G and older HBAs\n  scsi: qla2xxx: If fcport is undergoing deletion complete I/O with retry\n  scsi: qla2xxx: Fix the call trace for flush workqueue\n  scsi: qla2xxx: Fix flash update in 28XX adapters on big endian machines\n  scsi: qla2xxx: Handle aborts correctly for port undergoing deletion\n  scsi: qla2xxx: Fix N2N and NVMe connect retry failure\n  scsi: qla2xxx: Fix FW initialization error on big endian machines\n  scsi: qla2xxx: Fix crash during driver load on big endian machines\n  scsi: qla2xxx: Fix compilation issue in PPC systems\n  scsi: qla2xxx: Don't check for fw_started while posting NVMe command\n  scsi: qla2xxx: Tear down session if FW say it is down\n  ... \nDate: 2020-12-16 - 21:34:31 \nAuthor: Linus Torvalds"}, {"id": "995433b795cec0a4ef6c8603e7642903c621943a", "date": "2020-12-15", "metadata": "Message: net/smc: fix access to parent of an ib device\n\nThe parent of an ib device is used to retrieve the PCI device\nattributes. It turns out that there are possible cases when an ib device\nhas no parent set in the device structure, which may lead to page\nfaults when trying to access this memory.\nFix that by checking the parent pointer and consolidate the pci device\nspecific processing in a new function.\n\nFixes: a3db10efcc4c (\"net/smc: Add support for obtaining SMCR device list\")\nReported-by: syzbot+600fef7c414ee7e2d71b@syzkaller.appspotmail.com\nSigned-off-by: Karsten Graul <kgraul@linux.ibm.com>\nLink: https://lore.kernel.org/r/20201215091058.49354-2-kgraul@linux.ibm.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-15 - 09:10:58 \nAuthor: Karsten Graul"}, {"id": "ef72cd3c5ce168829c6684ecb2cae047d3493690", "date": "2020-12-15", "metadata": "Message: ethtool: fix error paths in ethnl_set_channels()\n\nFix two error paths in ethnl_set_channels() to avoid lock-up caused\nbut unreleased RTNL.\n\nFixes: e19c591eafad (\"ethtool: set device channel counts with CHANNELS_SET request\")\nReported-by: LiLiang <liali@redhat.com>\nSigned-off-by: Ivan Vecera <ivecera@redhat.com>\nReviewed-by: Michal Kubecek <mkubecek@suse.cz>\nLink: https://lore.kernel.org/r/20201215090810.801777-1-ivecera@redhat.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-15 - 09:08:10 \nAuthor: Ivan Vecera"}, {"id": "5277d1cadee8a3bdfda0e1d8247b3126b254a74b", "date": "2020-12-16", "metadata": "Message: Merge branch 'nfc-s3fwrn5-refactor-the-s3fwrn5-module'\n\nBongsu Jeon says:\n\n====================\nnfc: s3fwrn5: Refactor the s3fwrn5 module\n\nRefactor the s3fwrn5 module.\n\n1/2 is to remove the unneeded delay for NFC sleep.\n2/2 is to remove the unused NCI prop commands.\n====================\n\nLink: https://lore.kernel.org/r/20201215065401.3220-1-bongsu.jeon@samsung.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 21:09:37 \nAuthor: Jakub Kicinski"}, {"id": "e2138e3f3537efdb8b56ea37d61c1682552608c9", "date": "2020-12-15", "metadata": "Message: nfc: s3fwrn5: Remove unused NCI prop commands\n\nRemove the unused NCI prop commands that s3fwrn5 driver doesn't use.\n\nSigned-off-by: Bongsu Jeon <bongsu.jeon@samsung.com>\nReviewed-by: Krzysztof Kozlowski <krzk@kernel.org>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-15 - 06:54:01 \nAuthor: Bongsu Jeon"}, {"id": "7ec27c9e97f26b5a1d7d07dd825069a45067868a", "date": "2020-12-15", "metadata": "Message: nfc: s3fwrn5: Remove the delay for NFC sleep\n\nRemove the delay for NFC sleep because the delay is only needed to\nguarantee that the NFC is awake.\n\nSigned-off-by: Bongsu Jeon <bongsu.jeon@samsung.com>\nReviewed-by: Krzysztof Kozlowski <krzk@kernel.org>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-15 - 06:54:00 \nAuthor: Bongsu Jeon"}, {"id": "69f637c33560b02ae7313e0c142d847361cc723a", "date": "2020-12-16", "metadata": "Message: Merge tag 'for-5.11/drivers-2020-12-14' of git://git.kernel.dk/linux-block\n\nPull block driver updates from Jens Axboe:\n \"Nothing major in here:\n\n   - NVMe pull request from Christoph:\n        - nvmet passthrough improvements (Chaitanya Kulkarni)\n        - fcloop error injection support (James Smart)\n        - read-only support for zoned namespaces without Zone Append\n          (Javier Gonz\u00e1lez)\n        - improve some error message (Minwoo Im)\n        - reject I/O to offline fabrics namespaces (Victor Gladkov)\n        - PCI queue allocation cleanups (Niklas Schnelle)\n        - remove an unused allocation in nvmet (Amit Engel)\n        - a Kconfig spelling fix (Colin Ian King)\n        - nvme_req_qid simplication (Baolin Wang)\n\n   - MD pull request from Song:\n        - Fix race condition in md_ioctl() (Dae R. Jeong)\n        - Initialize read_slot properly for raid10 (Kevin Vigor)\n        - Code cleanup (Pankaj Gupta)\n        - md-cluster resync/reshape fix (Zhao Heming)\n\n   - Move null_blk into its own directory (Damien Le Moal)\n\n   - null_blk zone and discard improvements (Damien Le Moal)\n\n   - bcache race fix (Dongsheng Yang)\n\n   - Set of rnbd fixes/improvements (Gioh Kim, Guoqing Jiang, Jack Wang,\n     Lutz Pogrell, Md Haris Iqbal)\n\n   - lightnvm NULL pointer deref fix (tangzhenhao)\n\n   - sr in_interrupt() removal (Sebastian Andrzej Siewior)\n\n   - FC endpoint security support for s390/dasd (Jan H\u00f6ppner, Sebastian\n     Ott, Vineeth Vijayan). From the s390 arch guys, arch bits included\n     as it made it easier for them to funnel the feature through the\n     block driver tree.\n\n   - Follow up fixes (Colin Ian King)\"\n\n* tag 'for-5.11/drivers-2020-12-14' of git://git.kernel.dk/linux-block: (64 commits)\n  block: drop dead assignments in loop_init()\n  sr: Remove in_interrupt() usage in sr_init_command().\n  sr: Switch the sector size back to 2048 if sr_read_sector() changed it.\n  cdrom: Reset sector_size back it is not 2048.\n  drivers/lightnvm: fix a null-ptr-deref bug in pblk-core.c\n  null_blk: Move driver into its own directory\n  null_blk: Allow controlling max_hw_sectors limit\n  null_blk: discard zones on reset\n  null_blk: cleanup discard handling\n  null_blk: Improve implicit zone close\n  null_blk: improve zone locking\n  block: Align max_hw_sectors to logical blocksize\n  null_blk: Fail zone append to conventional zones\n  null_blk: Fix zone size initialization\n  bcache: fix race between setting bdev state to none and new write request direct to backing\n  block/rnbd: fix a null pointer dereference on dev->blk_symlink_name\n  block/rnbd-clt: Dynamically alloc buffer for pathname & blk_symlink_name\n  block/rnbd: call kobject_put in the failure path\n  Documentation/ABI/rnbd-srv: add document for force_close\n  block/rnbd-srv: close a mapped device from server side.\n  ... \nDate: 2020-12-16 - 21:09:32 \nAuthor: Linus Torvalds"}, {"id": "767143a18d6d743d4254de5cf55b1bd87bb2af18", "date": "2020-12-15", "metadata": "Message: phy: fix kdoc warning\n\nKdoc does not like it when multiline comment follows the networking\nstyle of starting right on the first line:\n\ninclude/linux/phy.h:869: warning: Function parameter or member 'config_intr' not described in 'phy_driver'\n\nLink: https://lore.kernel.org/r/20201215063750.3120976-1-kuba@kernel.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-15 - 06:37:50 \nAuthor: Jakub Kicinski"}, {"id": "ac7ac4618cf25e0d5cd8eba83d5f600084b65b9a", "date": "2020-12-16", "metadata": "Message: Merge tag 'for-5.11/block-2020-12-14' of git://git.kernel.dk/linux-block\n\nPull block updates from Jens Axboe:\n \"Another series of killing more code than what is being added, again\n  thanks to Christoph's relentless cleanups and tech debt tackling.\n\n  This contains:\n\n   - blk-iocost improvements (Baolin Wang)\n\n   - part0 iostat fix (Jeffle Xu)\n\n   - Disable iopoll for split bios (Jeffle Xu)\n\n   - block tracepoint cleanups (Christoph Hellwig)\n\n   - Merging of struct block_device and hd_struct (Christoph Hellwig)\n\n   - Rework/cleanup of how block device sizes are updated (Christoph\n     Hellwig)\n\n   - Simplification of gendisk lookup and removal of block device\n     aliasing (Christoph Hellwig)\n\n   - Block device ioctl cleanups (Christoph Hellwig)\n\n   - Removal of bdget()/blkdev_get() as exported API (Christoph Hellwig)\n\n   - Disk change rework, avoid ->revalidate_disk() (Christoph Hellwig)\n\n   - sbitmap improvements (Pavel Begunkov)\n\n   - Hybrid polling fix (Pavel Begunkov)\n\n   - bvec iteration improvements (Pavel Begunkov)\n\n   - Zone revalidation fixes (Damien Le Moal)\n\n   - blk-throttle limit fix (Yu Kuai)\n\n   - Various little fixes\"\n\n* tag 'for-5.11/block-2020-12-14' of git://git.kernel.dk/linux-block: (126 commits)\n  blk-mq: fix msec comment from micro to milli seconds\n  blk-mq: update arg in comment of blk_mq_map_queue\n  blk-mq: add helper allocating tagset->tags\n  Revert \"block: Fix a lockdep complaint triggered by request queue flushing\"\n  nvme-loop: use blk_mq_hctx_set_fq_lock_class to set loop's lock class\n  blk-mq: add new API of blk_mq_hctx_set_fq_lock_class\n  block: disable iopoll for split bio\n  block: Improve blk_revalidate_disk_zones() checks\n  sbitmap: simplify wrap check\n  sbitmap: replace CAS with atomic and\n  sbitmap: remove swap_lock\n  sbitmap: optimise sbitmap_deferred_clear()\n  blk-mq: skip hybrid polling if iopoll doesn't spin\n  blk-iocost: Factor out the base vrate change into a separate function\n  blk-iocost: Factor out the active iocgs' state check into a separate function\n  blk-iocost: Move the usage ratio calculation to the correct place\n  blk-iocost: Remove unnecessary advance declaration\n  blk-iocost: Fix some typos in comments\n  blktrace: fix up a kerneldoc comment\n  block: remove the request_queue to argument request based tracepoints\n  ... \nDate: 2020-12-16 - 20:57:51 \nAuthor: Linus Torvalds"}, {"id": "7ac554888233468a9fd7c4f28721396952dd9959", "date": "2020-12-14", "metadata": "Message: MAINTAINERS: Remove reference to non-existing file\n\nGPIO HiSilicon driver doesn't provide any platform data header.\n\nFixes: a8f25236e6e3 (\"MAINTAINERS: Add maintainer for HiSilicon GPIO driver\")\nSigned-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nLink: https://lore.kernel.org/r/20201214165524.43843-2-andriy.shevchenko@linux.intel.com\nSigned-off-by: Linus Walleij <linus.walleij@linaro.org> \nDate: 2020-12-14 - 16:55:24 \nAuthor: Andy Shevchenko"}, {"id": "72db5d54d76300fb4153874b8466c0ebbb10208f", "date": "2020-12-14", "metadata": "Message: gpio: hisi: Do not require ACPI for COMPILE_TEST\n\nMake it clear that ACPI needs to be present only to get driver functional.\nIt is not required for compilation.\n\nFixes: 356b01a986a5 (\"gpio: gpio-hisi: Add HiSilicon GPIO support\")\nSigned-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nLink: https://lore.kernel.org/r/20201214165524.43843-1-andriy.shevchenko@linux.intel.com\nSigned-off-by: Linus Walleij <linus.walleij@linaro.org> \nDate: 2020-12-14 - 16:55:23 \nAuthor: Andy Shevchenko"}, {"id": "80e493d2b74af7442eac968c060b26adbfaa96f9", "date": "2020-12-14", "metadata": "Message: MAINTAINERS: Add maintainer for HiSilicon GPIO driver\n\nHere add maintainer information for HiSilicon GPIO driver.\n\nSigned-off-by: Luo Jiaxing <luojiaxing@huawei.com>\nLink: https://lore.kernel.org/r/1607934255-52544-3-git-send-email-luojiaxing@huawei.com\n[Dropped some dead code when applying]\nSigned-off-by: Linus Walleij <linus.walleij@linaro.org> \nDate: 2020-12-14 - 08:24:14 \nAuthor: Luo Jiaxing"}, {"id": "c32c928d29deb2636e5889f59305cc15b004909f", "date": "2020-12-15", "metadata": "Message: tipc: do sanity check payload of a netlink message\n\nWhen we initialize nlmsghdr with no payload inside tipc_nl_compat_dumpit()\nthe parsing function returns -EINVAL. We fix it by making the parsing call\nconditional.\n\nAcked-by: Jon Maloy <jmaloy@redhat.com>\nSigned-off-by: Hoang Le <hoang.h.le@dektech.com.au>\nLink: https://lore.kernel.org/r/20201215033151.76139-1-hoang.h.le@dektech.com.au\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-15 - 03:31:51 \nAuthor: Hoang Le"}, {"id": "48aba79bcf6ea05148dc82ad9c40713960b00396", "date": "2020-12-16", "metadata": "Message: Merge tag 'for-5.11/io_uring-2020-12-14' of git://git.kernel.dk/linux-block\n\nPull io_uring updates from Jens Axboe:\n \"Fairly light set of changes this time around, and mostly some bits\n  that were pushed out to 5.11 instead of 5.10, fixes/cleanups, and a\n  few features. In particular:\n\n   - Cleanups around iovec import (David Laight, Pavel)\n\n   - Add timeout support for io_uring_enter(2), which enables us to\n     clean up liburing and avoid a timeout sqe submission in the\n     completion path.\n\n     The big win here is that it allows setups that split SQ and CQ\n     handling into separate threads to avoid locking, as the CQ side\n     will no longer submit when timeouts are needed when waiting for\n     events (Hao Xu)\n\n   - Add support for socket shutdown, and renameat/unlinkat.\n\n   - SQPOLL cleanups and improvements (Xiaoguang Wang)\n\n   - Allow SQPOLL setups for CAP_SYS_NICE, and enable regular\n     (non-fixed) files to be used.\n\n   - Cancelation improvements (Pavel)\n\n   - Fixed file reference improvements (Pavel)\n\n   - IOPOLL related race fixes (Pavel)\n\n   - Lots of other little fixes and cleanups (mostly Pavel)\"\n\n* tag 'for-5.11/io_uring-2020-12-14' of git://git.kernel.dk/linux-block: (43 commits)\n  io_uring: fix io_cqring_events()'s noflush\n  io_uring: fix racy IOPOLL flush overflow\n  io_uring: fix racy IOPOLL completions\n  io_uring: always let io_iopoll_complete() complete polled io\n  io_uring: add timeout update\n  io_uring: restructure io_timeout_cancel()\n  io_uring: fix files cancellation\n  io_uring: use bottom half safe lock for fixed file data\n  io_uring: fix miscounting ios_left\n  io_uring: change submit file state invariant\n  io_uring: check kthread stopped flag when sq thread is unparked\n  io_uring: share fixed_file_refs b/w multiple rsrcs\n  io_uring: replace inflight_wait with tctx->wait\n  io_uring: don't take fs for recvmsg/sendmsg\n  io_uring: only wake up sq thread while current task is in io worker context\n  io_uring: don't acquire uring_lock twice\n  io_uring: initialize 'timeout' properly in io_sq_thread()\n  io_uring: refactor io_sq_thread() handling\n  io_uring: always batch cancel in *cancel_files()\n  io_uring: pass files into kill timeouts/poll\n  ... \nDate: 2020-12-16 - 20:44:05 \nAuthor: Linus Torvalds"}, {"id": "005b2a9dc819a1265a8c765595f8f6d88d6173d9", "date": "2020-12-16", "metadata": "Message: Merge tag 'tif-task_work.arch-2020-12-14' of git://git.kernel.dk/linux-block\n\nPull TIF_NOTIFY_SIGNAL updates from Jens Axboe:\n \"This sits on top of of the core entry/exit and x86 entry branch from\n  the tip tree, which contains the generic and x86 parts of this work.\n\n  Here we convert the rest of the archs to support TIF_NOTIFY_SIGNAL.\n\n  With that done, we can get rid of JOBCTL_TASK_WORK from task_work and\n  signal.c, and also remove a deadlock work-around in io_uring around\n  knowing that signal based task_work waking is invoked with the sighand\n  wait queue head lock.\n\n  The motivation for this work is to decouple signal notify based\n  task_work, of which io_uring is a heavy user of, from sighand. The\n  sighand lock becomes a huge contention point, particularly for\n  threaded workloads where it's shared between threads. Even outside of\n  threaded applications it's slower than it needs to be.\n\n  Roman Gershman <romger@amazon.com> reported that his networked\n  workload dropped from 1.6M QPS at 80% CPU to 1.0M QPS at 100% CPU\n  after io_uring was changed to use TIF_NOTIFY_SIGNAL. The time was all\n  spent hammering on the sighand lock, showing 57% of the CPU time there\n  [1].\n\n  There are further cleanups possible on top of this. One example is\n  TIF_PATCH_PENDING, where a patch already exists to use\n  TIF_NOTIFY_SIGNAL instead. Hopefully this will also lead to more\n  consolidation, but the work stands on its own as well\"\n\n[1] https://github.com/axboe/liburing/issues/215\n\n* tag 'tif-task_work.arch-2020-12-14' of git://git.kernel.dk/linux-block: (28 commits)\n  io_uring: remove 'twa_signal_ok' deadlock work-around\n  kernel: remove checking for TIF_NOTIFY_SIGNAL\n  signal: kill JOBCTL_TASK_WORK\n  io_uring: JOBCTL_TASK_WORK is no longer used by task_work\n  task_work: remove legacy TWA_SIGNAL path\n  sparc: add support for TIF_NOTIFY_SIGNAL\n  riscv: add support for TIF_NOTIFY_SIGNAL\n  nds32: add support for TIF_NOTIFY_SIGNAL\n  ia64: add support for TIF_NOTIFY_SIGNAL\n  h8300: add support for TIF_NOTIFY_SIGNAL\n  c6x: add support for TIF_NOTIFY_SIGNAL\n  alpha: add support for TIF_NOTIFY_SIGNAL\n  xtensa: add support for TIF_NOTIFY_SIGNAL\n  arm: add support for TIF_NOTIFY_SIGNAL\n  microblaze: add support for TIF_NOTIFY_SIGNAL\n  hexagon: add support for TIF_NOTIFY_SIGNAL\n  csky: add support for TIF_NOTIFY_SIGNAL\n  openrisc: add support for TIF_NOTIFY_SIGNAL\n  sh: add support for TIF_NOTIFY_SIGNAL\n  um: add support for TIF_NOTIFY_SIGNAL\n  ... \nDate: 2020-12-16 - 20:33:35 \nAuthor: Linus Torvalds"}, {"id": "5ee863bec794f30bdf7fdf57ce0d9f579b0d1aa3", "date": "2020-12-16", "metadata": "Message: Merge branch 'parisc-5.11-1' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux\n\nPull parisc updates from Helge Deller:\n \"A change to increase the default maximum stack size on parisc to 100MB\n  and the ability to further increase the stack hard limit size at\n  runtime with ulimit for newly started processes.\n\n  The other patches fix compile warnings, utilize the Kbuild logic and\n  cleanups the parisc arch code\"\n\n* 'parisc-5.11-1' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux:\n  parisc: pci-dma: fix warning unused-function\n  parisc/uapi: Use Kbuild logic to provide <asm/types.h>\n  parisc: Make user stack size configurable\n  parisc: Use _TIF_USER_WORK_MASK in entry.S\n  parisc: Drop loops_per_jiffy from per_cpu struct \nDate: 2020-12-16 - 20:10:40 \nAuthor: Linus Torvalds"}, {"id": "8312f41f08edc641aa927d31fb71319694ae9c42", "date": "2020-12-16", "metadata": "Message: Merge tag 'mips_5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mips/linux\n\nPull MIPS updates from Thomas Bogendoerfer:\n\n - enable GCOV\n\n - rework setup of protection map\n\n - add support for more MSCC platforms\n\n - add sysfs boardinfo for Loongson64\n\n - enable KASLR for Loogson64\n\n - add reset controller for BCM63xx\n\n - cleanups and fixes\n\n* tag 'mips_5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/mips/linux: (70 commits)\n  mips: fix Section mismatch in reference\n  MAINTAINERS: Add linux-mips mailing list to JZ47xx entries\n  MAINTAINERS: Remove JZ4780 DMA driver entry\n  MAINTAINERS: chenhc@lemote.com -> chenhuacai@kernel.org\n  MIPS: Octeon: irq: Alloc desc before configuring IRQ\n  MIPS: mm: Add back define for PAGE_SHARED\n  MIPS: Select ARCH_KEEP_MEMBLOCK if DEBUG_KERNEL to enable sysfs memblock debug\n  mips: lib: uncached: fix non-standard usage of variable 'sp'\n  MIPS: DTS: img: Fix schema warnings for pwm-leds\n  MIPS: KASLR: Avoid endless loop in sync_icache if synci_step is zero\n  MIPS: Move memblock_dump_all() to the end of setup_arch()\n  MIPS: SMP-CPS: Add support for irq migration when CPU offline\n  MIPS: OCTEON: Don't add kernel sections into memblock allocator\n  MIPS: Don't round up kernel sections size for memblock_add()\n  MIPS: Enable GCOV\n  MIPS: configs: drop unused BACKLIGHT_GENERIC option\n  MIPS: Loongson64: Fix up reserving kernel memory range\n  MIPS: mm: Remove unused is_aligned_hugepage_range\n  MIPS: No need to check CPU 0 in {loongson3,bmips,octeon}_cpu_disable()\n  mips: cdmm: fix use-after-free in mips_cdmm_bus_discover\n  ... \nDate: 2020-12-16 - 20:07:54 \nAuthor: Linus Torvalds"}, {"id": "66fc6a6254c7a138aef7806bd933c218e1aefcfc", "date": "2020-12-16", "metadata": "Message: Merge tag 'microblaze-v5.11' of git://git.monstr.eu/linux-2.6-microblaze\n\nPull microblaze updates from Michal Simek:\n \"The biggest change is to remove support for noMMU configuration.\n\n  FPGAs are bigger so people use Microblaze with MMU for a lot of years\n  and there is likely no user of this code anymore. No one is updating\n  libraries for this configuration either.\n\n   - Remove noMMU support\n\n   - Add support for TIF_NOTIFY_SIGNAL\n\n   - Small header fix\"\n\n* tag 'microblaze-v5.11' of git://git.monstr.eu/linux-2.6-microblaze:\n  microblaze: Remove noMMU code\n  microblaze: add support for TIF_NOTIFY_SIGNAL\n  microblaze: Replace <linux/clk-provider.h> by <linux/of_clk.h> \nDate: 2020-12-16 - 20:04:39 \nAuthor: Linus Torvalds"}, {"id": "7acfd4274e26e05a4f12ad31bf331fef11ebc6a3", "date": "2020-12-16", "metadata": "Message: Merge tag 'for-linus-5.11-rc1-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip\n\nPull xen updates from Juergen Gross:\n \"Fixes for security issues just having been disclosed:\n\n   - a five patch series for fixing of XSA-349 (DoS via resource\n     depletion in Xen dom0)\n\n   - a patch fixing XSA-350 (access of stale pointer in a Xen dom0)\"\n\n* tag 'for-linus-5.11-rc1-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip:\n  xen-blkback: set ring->xenblkd to NULL after kthread_stop()\n  xenbus/xenbus_backend: Disallow pending watch messages\n  xen/xenbus: Count pending messages for each watch\n  xen/xenbus/xen_bus_type: Support will_handle watch callback\n  xen/xenbus: Add 'will_handle' callback support in xenbus_watch_path()\n  xen/xenbus: Allow watches discard events before queueing \nDate: 2020-12-16 - 19:53:09 \nAuthor: Linus Torvalds"}, {"id": "571b12dd1ad41f371448b693c0bd2e64968c7af4", "date": "2020-12-16", "metadata": "Message: Merge tag 'hyperv-next-signed-20201214' of git://git.kernel.org/pub/scm/linux/kernel/git/hyperv/linux\n\nPull Hyper-V updates from Wei Liu:\n\n - harden VMBus (Andres Beltran)\n\n - clean up VMBus driver (Matheus Castello)\n\n - fix hv_balloon reporting (Vitaly Kuznetsov)\n\n - fix a potential OOB issue (Andrea Parri)\n\n - remove an obsolete TODO item (Stefan Eschenbacher)\n\n* tag 'hyperv-next-signed-20201214' of git://git.kernel.org/pub/scm/linux/kernel/git/hyperv/linux:\n  hv_balloon: do adjust_managed_page_count() when ballooning/un-ballooning\n  hv_balloon: simplify math in alloc_balloon_pages()\n  drivers/hv: remove obsolete TODO and fix misleading typo in comment\n  drivers: hv: vmbus: Fix checkpatch SPLIT_STRING\n  hv_netvsc: Validate number of allocated sub-channels\n  drivers: hv: vmbus: Fix call msleep using < 20ms\n  drivers: hv: vmbus: Fix checkpatch LINE_SPACING\n  drivers: hv: vmbus: Replace symbolic permissions by octal permissions\n  drivers: hv: Fix hyperv_record_panic_msg path on comment\n  hv_netvsc: Use vmbus_requestor to generate transaction IDs for VMBus hardening\n  scsi: storvsc: Use vmbus_requestor to generate transaction IDs for VMBus hardening\n  Drivers: hv: vmbus: Add vmbus_requestor data structure for VMBus hardening \nDate: 2020-12-16 - 19:49:46 \nAuthor: Linus Torvalds"}, {"id": "023cae857b347b6f5577eebade21a843f3621f85", "date": "2020-12-16", "metadata": "Message: Merge branch 'locked-version-of-netdev_notify_peers'\n\nLijun Pan says:\n\n====================\nadd a locked version of netdev_notify_peers\n\nThis series introduce the lockless version of netdev_notify_peers\nand then apply it to the relevant drivers.\n\nIn v1, a more appropriate name __netdev_notify_peers is used;\nnetdev_notify_peers is converted to call the new helper.\nIn v2, patch 3 calls the new helper where notify variable used\nto be set true.\n====================\n\nLink: https://lore.kernel.org/r/20201214211930.80778-1-ljp@linux.ibm.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 19:43:52 \nAuthor: Jakub Kicinski"}, {"id": "935d8a0a43e3f928e3243ae22bc53cd7a014d515", "date": "2020-12-14", "metadata": "Message: use __netdev_notify_peers in hyperv\n\nStart to use the lockless version of netdev_notify_peers.\nCall the helper where notify variable used to be set true.\nRemove the notify bool variable and sort the variables\nin reverse Christmas tree order.\n\nCc: Haiyang Zhang <haiyangz@microsoft.com>\nSigned-off-by: Lijun Pan <ljp@linux.ibm.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-14 - 21:19:30 \nAuthor: Lijun Pan"}, {"id": "6be4666221cafcfd58cc078aa8bd1ba11b699f6b", "date": "2020-12-14", "metadata": "Message: use __netdev_notify_peers in ibmvnic\n\nStart to use the lockless version of netdev_notify_peers.\n\nSigned-off-by: Lijun Pan <ljp@linux.ibm.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-14 - 21:19:29 \nAuthor: Lijun Pan"}, {"id": "7061eb8cfa902daa1ec71d23b5cddb8b4391e72b", "date": "2020-12-14", "metadata": "Message: net: core: introduce __netdev_notify_peers\n\nThere are some use cases for netdev_notify_peers in the context\nwhen rtnl lock is already held. Introduce lockless version\nof netdev_notify_peers call to save the extra code to call\n\tcall_netdevice_notifiers(NETDEV_NOTIFY_PEERS, dev);\n\tcall_netdevice_notifiers(NETDEV_RESEND_IGMP, dev);\nAfter that, convert netdev_notify_peers to call the new helper.\n\nSuggested-by: Nathan Lynch <nathanl@linux.ibm.com>\nSigned-off-by: Lijun Pan <ljp@linux.ibm.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-14 - 21:19:28 \nAuthor: Lijun Pan"}, {"id": "322e53d1e2529ae9d501f5e0f20604a79b873aef", "date": "2020-12-14", "metadata": "Message: net: allwinner: Fix some resources leak in the error handling path of the probe and in the remove function\n\n'irq_of_parse_and_map()' should be balanced by a corresponding\n'irq_dispose_mapping()' call. Otherwise, there is some resources leaks.\n\nAdd such a call in the error handling path of the probe function and in the\nremove function.\n\nFixes: 492205050d77 (\"net: Add EMAC ethernet driver found on Allwinner A10 SoC's\")\nSigned-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>\nLink: https://lore.kernel.org/r/20201214202117.146293-1-christophe.jaillet@wanadoo.fr\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-14 - 20:21:17 \nAuthor: Christophe JAILLET"}, {"id": "e994cc240a3b75744c33ca9b8d74f71f0fcd8852", "date": "2020-12-16", "metadata": "Message: Merge tag 'seccomp-v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux\n\nPull seccomp updates from Kees Cook:\n \"The major change here is finally gaining seccomp constant-action\n  bitmaps, which internally reduces the seccomp overhead for many\n  real-world syscall filters to O(1), as discussed at Plumbers this\n  year.\n\n   - Improve seccomp performance via constant-action bitmaps (YiFei Zhu\n     & Kees Cook)\n\n   - Fix bogus __user annotations (Jann Horn)\n\n   - Add missed CONFIG for improved selftest coverage (Micka\u00ebl Sala\u00fcn)\"\n\n* tag 'seccomp-v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:\n  selftests/seccomp: Update kernel config\n  seccomp: Remove bogus __user annotations\n  seccomp/cache: Report cache data through /proc/pid/seccomp_cache\n  xtensa: Enable seccomp architecture tracking\n  sh: Enable seccomp architecture tracking\n  s390: Enable seccomp architecture tracking\n  riscv: Enable seccomp architecture tracking\n  powerpc: Enable seccomp architecture tracking\n  parisc: Enable seccomp architecture tracking\n  csky: Enable seccomp architecture tracking\n  arm: Enable seccomp architecture tracking\n  arm64: Enable seccomp architecture tracking\n  selftests/seccomp: Compare bitmap vs filter overhead\n  x86: Enable seccomp architecture tracking\n  seccomp/cache: Add \"emulator\" to check if filter is constant allow\n  seccomp/cache: Lookup syscall allowlist bitmap for fast path \nDate: 2020-12-16 - 19:30:10 \nAuthor: Linus Torvalds"}, {"id": "ba1d41a55e4d07c7b27ee2f6e7cf5b5348849261", "date": "2020-12-16", "metadata": "Message: Merge tag 'pstore-v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux\n\nPull pstore updates from Kees Cook:\n\n - Clean up unused but exposed API (Christoph Hellwig)\n\n - Provide KCONFIG for default size of kmsg buffer (Vasile-Laurentiu\n   Stanimir)\n\n* tag 'pstore-v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:\n  pstore: Move kmsg_bytes default into Kconfig\n  pstore/blk: remove {un,}register_pstore_blk\n  pstore/blk: update the command line example\n  pstore/zone: cap the maximum device size \nDate: 2020-12-16 - 19:25:16 \nAuthor: Linus Torvalds"}, {"id": "6df0f2855a9ae888fd19d034d8e6889cee6b639c", "date": "2020-12-16", "metadata": "Message: Merge tag 'gcc-plugins-v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux\n\nPull gcc-plugins updates from Kees Cook:\n\n - Clean up gcc plugin builds now that GCC must be 4.9+ (Masahiro\n   Yamada)\n\n - Update MAINTAINERS (Kees Cook)\n\n* tag 'gcc-plugins-v5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux:\n  MAINTAINERS: Drop inactive gcc-plugins maintainer\n  gcc-plugins: simplify GCC plugin-dev capability test\n  gcc-plugins: remove code for GCC versions older than 4.9 \nDate: 2020-12-16 - 19:17:27 \nAuthor: Linus Torvalds"}, {"id": "efb796f5571f030743e1d9c662cdebdad724f8c5", "date": "2020-12-14", "metadata": "Message: ethtool: fix string set id check\n\nSyzbot reported a shift of a u32 by more than 31 in strset_parse_request()\nwhich is undefined behavior. This is caused by range check of string set id\nusing variable ret (which is always 0 at this point) instead of id (string\nset id from request).\n\nFixes: 71921690f974 (\"ethtool: provide string sets with STRSET_GET request\")\nReported-by: syzbot+96523fb438937cd01220@syzkaller.appspotmail.com\nSigned-off-by: Michal Kubecek <mkubecek@suse.cz>\nLink: https://lore.kernel.org/r/b54ed5c5fd972a59afea3e1badfb36d86df68799.1607952208.git.mkubecek@suse.cz\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-14 - 13:25:01 \nAuthor: Michal Kubecek"}, {"id": "8bda68d68b21cb9881dcc7159fd9db1b6f95ac15", "date": "2020-12-16", "metadata": "Message: Merge tag 'Smack-for-5.11' of git://github.com/cschaufler/smack-next\n\nPull smack updates from Casey Schaufler:\n \"There are no functional changes. Just one minor code clean-up and a\n  set of corrections in function header comments\"\n\n* tag 'Smack-for-5.11' of git://github.com/cschaufler/smack-next:\n  security/smack: remove unused varible 'rc'\n  Smack: fix kernel-doc interface on functions \nDate: 2020-12-16 - 19:11:58 \nAuthor: Linus Torvalds"}, {"id": "f87675b836b324d270fd52f1f5e6d6bb9f4bd1d5", "date": "2020-12-13", "metadata": "Message: net: mscc: ocelot: Fix a resource leak in the error handling path of the probe function\n\nIn case of error after calling 'ocelot_init()', it must be undone by a\ncorresponding 'ocelot_deinit()' call, as already done in the remove\nfunction.\n\nFixes: a556c76adc05 (\"net: mscc: Add initial Ocelot switch support\")\nSigned-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>\nAcked-by: Alexandre Belloni <alexandre.belloni@bootlin.com>\nLink: https://lore.kernel.org/r/20201213114838.126922-1-christophe.jaillet@wanadoo.fr\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-13 - 11:48:38 \nAuthor: Christophe JAILLET"}, {"id": "c18e68696fdd9fd293f051030bce5aaff3c9b185", "date": "2020-12-15", "metadata": "Message: net/connector: Add const qualifier to cb_id\n\nThe connector driver never modifies any cb_id passed to it, so add a const\nqualifier to those arguments so callers can declare their struct cb_id as a\nconstant object.\n\nFixes build warnings like these when passing a constant struct cb_id:\n\n  warning: passing argument 1 of \u2018cn_add_callback\u2019 discards \u2018const\u2019 qualifier from pointer target\n\nSigned-off-by: Geoff Levand <geoff@infradead.org>\nLink: https://lore.kernel.org/r/a9e49c9e-67fa-16e7-0a6b-72f6bd30c58a@infradead.org\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-15 - 05:15:47 \nAuthor: Geoff Levand"}, {"id": "e20a9b92ddbfe662807622dbb28e1fbb6e0011aa", "date": "2020-12-16", "metadata": "Message: Merge tag 'integrity-v5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity\n\nPull integrity subsystem updates from Mimi Zohar:\n \"Just three patches here. Other integrity changes are being upstreamed\n  via EFI (defines a common EFI secure and trusted boot IMA policy) and\n  BPF LSM (exporting the IMA file cache hash info based on inode).\n\n  The three patches included here:\n\n   - bug fix: fail calculating the file hash, when a file not opened for\n     read and the attempt to re-open it for read fails.\n\n   - defer processing the \"ima_appraise\" boot command line option to\n     avoid enabling different modes (e.g. fix, log) to when the secure\n     boot flag is available on arm.\n\n   - defines \"ima-buf\" as the default IMA buffer measurement template in\n     preparation for the builtin integrity \"critical data\" policy\"\n\n* tag 'integrity-v5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity:\n  ima: Don't modify file descriptor mode on the fly\n  ima: select ima-buf template for buffer measurement\n  ima: defer arch_ima_get_secureboot() call to IMA init time \nDate: 2020-12-16 - 19:06:07 \nAuthor: Linus Torvalds"}, {"id": "4375ada01963d1ebf733d60d1bb6e5db401e1ac6", "date": "2020-12-12", "metadata": "Message: net: bcmgenet: Fix a resource leak in an error handling path in the probe functin\n\nIf the 'register_netdev()' call fails, we must undo a previous\n'bcmgenet_mii_init()' call.\n\nFixes: 1c1008c793fa (\"net: bcmgenet: add main driver file\")\nSigned-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>\nAcked-by: Florian Fainelli <f.fainelli@gmail.com>\nLink: https://lore.kernel.org/r/20201212182005.120437-1-christophe.jaillet@wanadoo.fr\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-12 - 18:20:05 \nAuthor: Christophe JAILLET"}, {"id": "54a57d1c449275ee727154ac106ec1accae012e3", "date": "2020-12-11", "metadata": "Message: dpaa2-eth: fix the size of the mapped SGT buffer\n\nThis patch fixes an error condition triggered when the code path which\ntransmits a S/G frame descriptor when the skb's headroom is not enough\nfor DPAA2's needs.\n\nWe are greated with a splat like the one below when a SGT structure is\nrecycled and that is because even though a dma_unmap is performed on the\nTx confirmation path, the unmap is not done with the proper size.\n\n[  714.464927] WARNING: CPU: 13 PID: 0 at drivers/iommu/io-pgtable-arm.c:281 __arm_lpae_map+0x2d4/0x30c\n(...)\n[  714.465343] Call trace:\n[  714.465348]  __arm_lpae_map+0x2d4/0x30c\n[  714.465353]  __arm_lpae_map+0x114/0x30c\n[  714.465357]  __arm_lpae_map+0x114/0x30c\n[  714.465362]  __arm_lpae_map+0x114/0x30c\n[  714.465366]  arm_lpae_map+0xf4/0x180\n[  714.465373]  arm_smmu_map+0x4c/0xc0\n[  714.465379]  __iommu_map+0x100/0x2bc\n[  714.465385]  iommu_map_atomic+0x20/0x30\n[  714.465391]  __iommu_dma_map+0xb0/0x110\n[  714.465397]  iommu_dma_map_page+0xb8/0x120\n[  714.465404]  dma_map_page_attrs+0x1a8/0x210\n[  714.465413]  __dpaa2_eth_tx+0x384/0xbd0 [fsl_dpaa2_eth]\n[  714.465421]  dpaa2_eth_tx+0x84/0x134 [fsl_dpaa2_eth]\n[  714.465427]  dev_hard_start_xmit+0x10c/0x2b0\n[  714.465433]  sch_direct_xmit+0x1a0/0x550\n(...)\n\nThe dpaa2-eth driver uses an area of software annotations to transmit\nnecessary information from the Tx path to the Tx confirmation one. This\nSWA structure has a different layout for each kind of frame that we are\ndealing with: linear, S/G or XDP.\n\nThe commit referenced was incorrectly setting up the 'sgt_size' field\nfor the S/G type of SWA even though we are dealing with a linear skb\nhere.\n\nFixes: d70446ee1f40 (\"dpaa2-eth: send a scatter-gather FD instead of realloc-ing\")\nReported-by: Daniel Thompson <daniel.thompson@linaro.org>\nTested-by: Daniel Thompson <daniel.thompson@linaro.org>\nSigned-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>\nLink: https://lore.kernel.org/r/20201211171607.108034-1-ciorneiioana@gmail.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-11 - 17:16:07 \nAuthor: Ioana Ciornei"}, {"id": "ca5b877b6ccc7b989614f3f541e9a1fe2ff7f75a", "date": "2020-12-16", "metadata": "Message: Merge tag 'selinux-pr-20201214' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/selinux\n\nPull selinux updates from Paul Moore:\n \"While we have a small number of SELinux patches for v5.11, there are a\n  few changes worth highlighting:\n\n   - Change the LSM network hooks to pass flowi_common structs instead\n     of the parent flowi struct as the LSMs do not currently need the\n     full flowi struct and they do not have enough information to use it\n     safely (missing information on the address family).\n\n     This patch was discussed both with Herbert Xu (representing team\n     netdev) and James Morris (representing team\n     LSMs-other-than-SELinux).\n\n   - Fix how we handle errors in inode_doinit_with_dentry() so that we\n     attempt to properly label the inode on following lookups instead of\n     continuing to treat it as unlabeled.\n\n   - Tweak the kernel logic around allowx, auditallowx, and dontauditx\n     SELinux policy statements such that the auditx/dontauditx are\n     effective even without the allowx statement.\n\n  Everything passes our test suite\"\n\n* tag 'selinux-pr-20201214' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/selinux:\n  lsm,selinux: pass flowi_common instead of flowi to the LSM hooks\n  selinux: Fix fall-through warnings for Clang\n  selinux: drop super_block backpointer from superblock_security_struct\n  selinux: fix inode_doinit_with_dentry() LABEL_INVALID error handling\n  selinux: allow dontauditx and auditallowx rules to take effect without allowx\n  selinux: fix error initialization in inode_doinit_with_dentry() \nDate: 2020-12-16 - 19:01:04 \nAuthor: Linus Torvalds"}, {"id": "3e47495fc4de4122598dd51ae8527b09b8209646", "date": "2020-12-11", "metadata": "Message: net: dsa: qca: ar9331: fix sleeping function called from invalid context bug\n\nWith lockdep enabled, we will get following warning:\n\n ar9331_switch ethernet.1:10 lan0 (uninitialized): PHY [!ahb!ethernet@1a000000!mdio!switch@10:00] driver [Qualcomm Atheros AR9331 built-in PHY] (irq=13)\n BUG: sleeping function called from invalid context at kernel/locking/mutex.c:935\n in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 18, name: kworker/0:1\n INFO: lockdep is turned off.\n irq event stamp: 602\n hardirqs last  enabled at (601): [<8073fde0>] _raw_spin_unlock_irq+0x3c/0x80\n hardirqs last disabled at (602): [<8073a4f4>] __schedule+0x184/0x800\n softirqs last  enabled at (0): [<80080f60>] copy_process+0x578/0x14c8\n softirqs last disabled at (0): [<00000000>] 0x0\n CPU: 0 PID: 18 Comm: kworker/0:1 Not tainted 5.10.0-rc3-ar9331-00734-g7d644991df0c #31\n Workqueue: events deferred_probe_work_func\n Stack : 80980000 80980000 8089ef70 80890000 804b5414 80980000 00000002 80b53728\n         00000000 800d1268 804b5414 ffffffde 00000017 800afe08 81943860 0f5bfc32\n         00000000 00000000 8089ef70 819436c0 ffffffea 00000000 00000000 00000000\n         8194390c 808e353c 0000000f 66657272 80980000 00000000 00000000 80890000\n         804b5414 80980000 00000002 80b53728 00000000 00000000 00000000 80d40000\n         ...\n Call Trace:\n [<80069ce0>] show_stack+0x9c/0x140\n [<800afe08>] ___might_sleep+0x220/0x244\n [<8073bfb0>] __mutex_lock+0x70/0x374\n [<8073c2e0>] mutex_lock_nested+0x2c/0x38\n [<804b5414>] regmap_update_bits_base+0x38/0x8c\n [<804ee584>] regmap_update_bits+0x1c/0x28\n [<804ee714>] ar9331_sw_unmask_irq+0x34/0x60\n [<800d91f0>] unmask_irq+0x48/0x70\n [<800d93d4>] irq_startup+0x114/0x11c\n [<800d65b4>] __setup_irq+0x4f4/0x6d0\n [<800d68a0>] request_threaded_irq+0x110/0x190\n [<804e3ef0>] phy_request_interrupt+0x4c/0xe4\n [<804df508>] phylink_bringup_phy+0x2c0/0x37c\n [<804df7bc>] phylink_of_phy_connect+0x118/0x130\n [<806c1a64>] dsa_slave_create+0x3d0/0x578\n [<806bc4ec>] dsa_register_switch+0x934/0xa20\n [<804eef98>] ar9331_sw_probe+0x34c/0x364\n [<804eb48c>] mdio_probe+0x44/0x70\n [<8049e3b4>] really_probe+0x30c/0x4f4\n [<8049ea10>] driver_probe_device+0x264/0x26c\n [<8049bc10>] bus_for_each_drv+0xb4/0xd8\n [<8049e684>] __device_attach+0xe8/0x18c\n [<8049ce58>] bus_probe_device+0x48/0xc4\n [<8049db70>] deferred_probe_work_func+0xdc/0xf8\n [<8009ff64>] process_one_work+0x2e4/0x4a0\n [<800a0770>] worker_thread+0x2a8/0x354\n [<800a774c>] kthread+0x16c/0x174\n [<8006306c>] ret_from_kernel_thread+0x14/0x1c\n\n ar9331_switch ethernet.1:10 lan1 (uninitialized): PHY [!ahb!ethernet@1a000000!mdio!switch@10:02] driver [Qualcomm Atheros AR9331 built-in PHY] (irq=13)\n DSA: tree 0 setup\n\nTo fix it, it is better to move access to MDIO register to the .irq_bus_sync_unlock\ncall back.\n\nFixes: ec6698c272de (\"net: dsa: add support for Atheros AR9331 built-in switch\")\nSigned-off-by: Oleksij Rempel <o.rempel@pengutronix.de>\nReviewed-by: Vladimir Oltean <olteanv@gmail.com>\nLink: https://lore.kernel.org/r/20201211110317.17061-1-o.rempel@pengutronix.de\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-11 - 11:03:17 \nAuthor: Oleksij Rempel"}, {"id": "3d5de2ddc6ba924d7c10460a1dc3aae8786b9d52", "date": "2020-12-16", "metadata": "Message: Merge tag 'audit-pr-20201214' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/audit\n\nPull audit updates from Paul Moore:\n \"A small set of audit patches for v5.11 with four patches in total and\n  only one of any real significance.\n\n  Richard's patch to trigger accompanying records causes the kernel to\n  emit additional related records when an audit event occurs; helping\n  provide some much needed context to events in the audit log. It is\n  also worth mentioning that this is a revised patch based on an earlier\n  attempt that had to be reverted in the v5.8 time frame.\n\n  Everything passes our test suite, and with no problems reported please\n  merge this for v5.11\"\n\n* tag 'audit-pr-20201214' of git://git.kernel.org/pub/scm/linux/kernel/git/pcmoore/audit:\n  audit: replace atomic_add_return()\n  audit: fix macros warnings\n  audit: trigger accompanying records when no rules present\n  audit: fix a kernel-doc markup \nDate: 2020-12-16 - 18:54:03 \nAuthor: Linus Torvalds"}, {"id": "ec58c75a85563026db4927276039a88091f79647", "date": "2020-12-16", "metadata": "Message: Merge branch 'i40e-ice-af_xdp-zc-fixes'\n\nBj\u00f6rn T\u00f6pel says:\n\n====================\ni40e/ice AF_XDP ZC fixes\n\nThis series address two crashes in the AF_XDP zero-copy mode for ice\nand i40e. More details in each individual the commit message.\n====================\n\nLink: https://lore.kernel.org/r/20201211145712.72957-1-bjorn.topel@gmail.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-16 - 18:51:09 \nAuthor: Jakub Kicinski"}, {"id": "64050b5b8706d304ba647591b06e1eddc55e8bd9", "date": "2020-12-11", "metadata": "Message: i40e, xsk: clear the status bits for the next_to_use descriptor\n\nOn the Rx side, the next_to_use index points to the next item in the\nHW ring to be refilled/allocated, and next_to_clean points to the next\nitem to potentially be processed.\n\nWhen the HW Rx ring is fully refilled, i.e. no packets has been\nprocessed, the next_to_use will be next_to_clean - 1. When the ring is\nfully processed next_to_clean will be equal to next_to_use. The latter\ncase is where a bug is triggered.\n\nIf the next_to_use bits are not cleared, and the \"fully processed\"\nstate is entered, a stale descriptor can be processed.\n\nThe skb-path correctly clear the status bit for the next_to_use\ndescriptor, but the AF_XDP zero-copy path did not do that.\n\nThis change adds the status bits clearing of the next_to_use\ndescriptor.\n\nFixes: 3b4f0b66c2b3 (\"i40e, xsk: Migrate to new MEM_TYPE_XSK_BUFF_POOL\")\nSigned-off-by: Bj\u00f6rn T\u00f6pel <bjorn.topel@intel.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-11 - 14:57:12 \nAuthor: Bj\u00f6rn T\u00f6pel"}, {"id": "8d14768a7972b92c73259f0c9c45b969d85e3a60", "date": "2020-12-11", "metadata": "Message: ice, xsk: clear the status bits for the next_to_use descriptor\n\nOn the Rx side, the next_to_use index points to the next item in the\nHW ring to be refilled/allocated, and next_to_clean points to the next\nitem to potentially be processed.\n\nWhen the HW Rx ring is fully refilled, i.e. no packets has been\nprocessed, the next_to_use will be next_to_clean - 1. When the ring is\nfully processed next_to_clean will be equal to next_to_use. The latter\ncase is where a bug is triggered.\n\nIf the next_to_use bits are not cleared, and the \"fully processed\"\nstate is entered, a stale descriptor can be processed.\n\nThe skb-path correctly clear the status bit for the next_to_use\ndescriptor, but the AF_XDP zero-copy path did not do that.\n\nThis change adds the status bits clearing of the next_to_use\ndescriptor.\n\nFixes: 2d4238f55697 (\"ice: Add support for AF_XDP\")\nSigned-off-by: Bj\u00f6rn T\u00f6pel <bjorn.topel@intel.com>\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-11 - 14:57:11 \nAuthor: Bj\u00f6rn T\u00f6pel"}, {"id": "d3eb52113d162cc88975fbd03c9e6f9cf2f8a771", "date": "2020-12-16", "metadata": "Message: Merge tag 'printk-for-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/printk/linux\n\nPull printk updates from Petr Mladek:\n\n - Finally allow parallel writes and reads into/from the lockless\n   ringbuffer. But it is not a complete solution. Readers are still\n   serialized against each other. And nested writes are still prevented\n   by printk_safe per-CPU buffers.\n\n - Use ttynull as the ultimate fallback for /dev/console.\n\n - Officially allow disabling console output by using console=\"\" or\n   console=null\n\n - A few code cleanups\n\n* tag 'printk-for-5.11' of git://git.kernel.org/pub/scm/linux/kernel/git/printk/linux:\n  printk: remove logbuf_lock writer-protection of ringbuffer\n  printk: inline log_output(),log_store() in vprintk_store()\n  printk: remove obsolete dead assignment\n  printk/console: Allow to disable console output by using console=\"\" or console=null\n  init/console: Use ttynull as a fallback when there is no console\n  printk: ringbuffer: Reference text_data_ring directly in callees. \nDate: 2020-12-16 - 18:45:11 \nAuthor: Linus Torvalds"}, {"id": "6ae09fa49147e557eb6aebbb5b2059b63706d454", "date": "2020-12-15", "metadata": "Message: drm/amdgpu/disply: fix documentation warnings in display manager\n\nAdd documentation for crc window.\n\nFixes: c920888c604d (\"drm/amd/display: Expose new CRC window property\")\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com>\nCc: Wayne Lin <Wayne.Lin@amd.com>\nReported-by: Stephen Rothwell <sfr@canb.auug.org.au>\nReviewed-by: Wayne Lin <Wayne.Lin@amd.com> \nDate: 2020-12-15 - 17:07:55 \nAuthor: Alex Deucher"}, {"id": "05053c4b4f8733e53e5d81d1684a29404b27cefd", "date": "2020-12-16", "metadata": "Message: drm/amdgpu: print mmhub client name for dimgrey_cavefish\n\nThis makes it easier to debug what block is causing the fault, same as\nsienna_cichlid.\n\nSigned-off-by: Tao Zhou <tao.zhou1@amd.com>\nReviewed-by: Jiansong Chen <Jiansong.Chen@amd.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com> \nDate: 2020-12-16 - 03:29:43 \nAuthor: Tao Zhou"}, {"id": "15ed44c0e7129a0967157f7b349e1b3feb26a534", "date": "2020-12-15", "metadata": "Message: drm/amdgpu: set mode1 reset as default for dimgrey_cavefish\n\nUse mode1 reset for dimgrey_cavefish by default.\n\nSigned-off-by: Tao Zhou <tao.zhou1@amd.com>\nReviewed-by: Jiansong Chen <Jiansong.Chen@amd.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com> \nDate: 2020-12-15 - 10:04:04 \nAuthor: Tao Zhou"}, {"id": "6bdeff12a96c9a5da95c8d11fefd145eb165e32a", "date": "2020-12-15", "metadata": "Message: drm/amd/display: Add get_dig_frontend implementation for DCEx\n\nSome old ASICs might not implement/require get_dig_frontend helper; in\nthis scenario, we can have a NULL pointer exception when we try to call\nit inside vbios disable operation. For example, this situation might\nhappen when using Polaris12 with an eDP panel. This commit avoids this\nsituation by adding a specific get_dig_frontend implementation for DCEx.\n\nCc: Alex Deucher <alexander.deucher@amd.com>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Harry Wentland <Harry.Wentland@amd.com>\nCc: Nicholas Kazlauskas <Nicholas.Kazlauskas@amd.com>\nCc: Chiawen Huang <chiawen.huang@amd.com>\nReported-and-tested-by: Borislav Petkov <bp@suse.de>\nAcked-by: Alex Deucher <alexander.deucher@amd.com>\nSigned-off-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com>\nCc: stable@vger.kernel.org \nDate: 2020-12-15 - 15:33:34 \nAuthor: Rodrigo Siqueira"}, {"id": "4c9e94dff65ca75b917ff0b5de2e44881062a8e8", "date": "2020-12-16", "metadata": "Message: Merge tags 'spi-nor/for-5.11' and 'nand/for-5.11' into mtd/next\n\nSPI NOR core changes:\n\n- Initial support for stateful Octal DTR mode using volatile settings\n- Preliminary support for JEDEC 251 (xSPI) and JEDEC 216D standards\n- Support for Cypress Semper flash\n- Support to specify ECC block size of SPI NOR flashes\n- Fixes to avoid clearing of non-volatile Block Protection bits at probe\n\nGeneric NAND core:\n* ECC management:\n  - Add an I/O request tweaking mechanism\n  - Entire rework of the software BCH ECC driver, creation of a real\n    ECC engine, getting rid of raw NAND structures, migration to more\n    generic prototypes, misc fixes and style cleanup. Moved now to the\n    Generic NAND layer.\n  - Entire rework of the software Hamming ECC driver, creation of a\n    real ECC engine, getting rid of raw NAND structures, misc renames,\n    comment updates, cleanup, and style fixes. Moved now to the\n    generic NAND layer.\n  - Necessary plumbing at the NAND level to retrieve generic NAND ECC\n    engines (softwares and on-die).\n  - Update of the bindings.\n\nRaw NAND core:\n* Geting rid of the chip->ecc.priv entry.\n* Fix miscellaneous typos in kernel-doc\n\nRaw NAND controller drivers:\n* AU1550: Ensure the presence of the right includes\n* Davinci: Do not use extra dereferencing\n* GPMI:\n  - Fix the driver only sense CS0 R/B issue\n  - Fix the random DMA timeout issue\n  - Use a single line for of_device_id\n  - Use of_device_get_match_data()\n  - Fix reference count leak in gpmi ops\n  - Cleanup makefile\n  - Fix binding matching of clocks on different SoCs\n* Ingenic: remove redundant get_device() in ingenic_ecc_get()\n* Intel LGM: New NAND controller driver\n* Marvell: Drop useless line\n* Meson:\n  - Fix a resource leak in init\n  - Fix meson_nfc_dma_buffer_release() arguments\n* mxc:\n  - Use device_get_match_data()\n  - Use a single line for of_device_id\n  - Remove platform data support\n* Qcom:\n  - Add support for SDX55\n  - Support for IPQ6018 QPIC NAND controller\n  - Fix DMA sync on FLASH_STATUS register read\n* Rockchip: New NAND controller driver for RK3308, RK2928 and others\n* Sunxi: Add MDMA support\n\nSPI-NAND core:\n* Creation of a SPI-NAND on-die ECC engine\n* Move ECC related definitions earlier in the driver\n* Fix typo in comment\n* Fill a default ECC provider/algorithm\n* Remove outdated comment\n* Fix OOB read\n* Allow the case where there is no ECC engine\n* Use the external ECC engine logic\n\nSPI-NAND chip drivers:\n* Micron:\n  - Add support for MT29F2G01AAAED\n  - Use more specific names\n* Macronix:\n  - Add support for MX35LFxG24AD\n  - Add support for MX35LFxGE4AD\n\nOthers:\n* onenand: Use mtd->oops_panic_write as condition\n* plat-ram: correctly free memory on error path in platram_probe() \nDate: 2020-12-16 - 17:48:16 \nAuthor: Miquel Raynal"}, {"id": "57030a0b620f735bf557696e5ceb9f32c2b3bb8f", "date": "2020-12-15", "metadata": "Message: lan743x: fix rx_napi_poll/interrupt ping-pong\n\nEven if there is more rx data waiting on the chip, the rx napi poll fn\nwill never run more than once - it will always read a few buffers, then\nbail out and re-arm interrupts. Which results in ping-pong between napi\nand interrupt.\n\nThis defeats the purpose of napi, and is bad for performance.\n\nFix by making the rx napi poll behave identically to other ethernet\ndrivers:\n1. initialize rx napi polling with an arbitrary budget (64).\n2. in the polling fn, return full weight if rx queue is not depleted,\n   this tells the napi core to \"keep polling\".\n3. update the rx tail (\"ring the doorbell\") once for every 8 processed\n   rx ring buffers.\n\nThanks to Jakub Kicinski, Eric Dumazet and Andrew Lunn for their expert\nopinions and suggestions.\n\nTested with 20 seconds of full bandwidth receive (iperf3):\n        rx irqs      softirqs(NET_RX)\n        -----------------------------\nbefore  23827        33620\nafter   129          4081\n\nTested-by: Sven Van Asbroeck <thesven73@gmail.com> # lan7430\nFixes: 23f0703c125be (\"lan743x: Add main source files for new lan743x driver\")\nSigned-off-by: Sven Van Asbroeck <thesven73@gmail.com>\nLink: https://lore.kernel.org/r/20201215161954.5950-1-TheSven73@gmail.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org> \nDate: 2020-12-15 - 16:19:54 \nAuthor: Sven Van Asbroeck"}, {"id": "dfdc6e73cdcf011a04568231132916c6d06b861f", "date": "2020-12-14", "metadata": "Message: s390/zcrypt: convert comma to semicolon\n\nReplace a comma between expression statements by a semicolon.\n\nSigned-off-by: Zheng Yongjun <zhengyongjun3@huawei.com>\nSigned-off-by: Harald Freudenberger <freude@linux.ibm.com>\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-14 - 13:44:03 \nAuthor: Zheng Yongjun"}, {"id": "8d93b7011831edc42760aa5d2f0727edda7257d5", "date": "2020-12-14", "metadata": "Message: s390/idle: allow arch_cpu_idle() to be kprobed\n\nRemove NOKPROBE_SYMBOL() for arch_cpu_idle(). This might have made\nsense when enabled_wait() (aka arch_cpu_idle()) was called from\nudelay.\nBut now there shouldn't be a reason why s390 should be the only\narchitecture which doesn't allow arch_cpu_idle() to be probed.\n\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-14 - 21:39:01 \nAuthor: Heiko Carstens"}, {"id": "7494755a9ad62be7e389b535c77e85ed9c66bece", "date": "2020-12-14", "metadata": "Message: s390/idle: remove raw_local_irq_save()/restore() from arch_cpu_idle()\n\narch_cpu_idle() gets called with interrupts disabled,\nand psw_idle() returns with interrupts disabled.\nNo reason to use raw_local_irq_save() / restore().\n\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-14 - 21:36:03 \nAuthor: Heiko Carstens"}, {"id": "44292c868473ed6389a78cfa366895b341845579", "date": "2020-12-14", "metadata": "Message: s390/idle: merge enabled_wait() and arch_cpu_idle()\n\nThe only caller of enabled_wait() besides arch_cpu_idle() was\nudelay(). Since that call doesn't exist anymore, merge enabled_wait()\nand arch_cpu_idle().\n\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-14 - 21:33:39 \nAuthor: Heiko Carstens"}, {"id": "e0d62dcb20beac18a412ef9355208d9058c674d3", "date": "2020-12-14", "metadata": "Message: s390/delay: remove udelay_simple()\n\nudelay_simple() callers can make use of the now simplified udelay()\nimplementation. No need to keep it.\n\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-14 - 20:44:39 \nAuthor: Heiko Carstens"}, {"id": "9ceed9988a8e6a1656ed2bdaa30501cf0f3dd925", "date": "2020-12-10", "metadata": "Message: s390/irq: select HAVE_IRQ_EXIT_ON_IRQ_STACK\n\nirq_exit() is always called on async stack. Therefore select\nHAVE_IRQ_EXIT_ON_IRQ_STACK and get a tiny optimization in\ninvoke_softirq().\n\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-10 - 21:30:09 \nAuthor: Heiko Carstens"}, {"id": "dd6cfe553212b6311cac27ecd2f67621857fb10a", "date": "2020-12-04", "metadata": "Message: s390/delay: simplify udelay\n\nudelay is implemented by using quite subtle details to make it\npossible to load an idle psw and waiting for an interrupt even in irq\ncontext or when interrupts are disabled. Also handling (or better: no\nhandling) of softirqs is taken into account.\n\nAll this is done to optimize for something which should in normal\ncircumstances never happen: calling udelay to busy wait. Therefore get\nrid of the whole complexity and just busy loop like other\narchitectures are doing it also.\n\nIt could have been possible to use diag 0x44 instead of cpu_relax() in\nthe busy loop, however we have seen too many bad things happen with\ndiag 0x44 that it seems to be better to simply busy loop.\n\nAlso note that with this new implementation kernel preemption does\nwork when within the udelay loop. This did not work before.\n\nTo get a feeling what the former code optimizes for: IPL'ing a kernel\nwith 'defconfig' and afterwards compiling a kernel ends with a total\nof zero udelay calls.\n\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-04 - 11:32:42 \nAuthor: Heiko Carstens"}, {"id": "91c2bad6aec98a51663ce9eec7c4825c1ca0b870", "date": "2020-12-09", "metadata": "Message: s390/test_unwind: use timer instead of udelay\n\nInstead of registering an external interrupt handler and relying on\nthe udelay implementation, simply use a timer to get into irq context.\n\nAcked-by: Ilya Leoshkevich <iii@linux.ibm.com>\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-09 - 21:09:16 \nAuthor: Heiko Carstens"}, {"id": "f22b9c219a798e1bf11110a3d2733d883e6da059", "date": "2020-12-13", "metadata": "Message: s390/test_unwind: fix CALL_ON_STACK tests\n\nThe CALL_ON_STACK tests use the no_dat stack to switch to a different\nstack for unwinding tests. If an interrupt or machine check happens\nwhile using that stack, and previously being on the async stack, the\ninterrupt / machine check entry code (SWITCH_ASYNC) will assume that\nthe previous context did not use the async stack and happily use the\nasync stack again.\n\nThis will lead to stack corruption of the previous context.\n\nTo solve this disable both interrupts and machine checks before\nswitching to the no_dat stack.\n\nFixes: 7868249fbbc8 (\"s390/test_unwind: add CALL_ON_STACK tests\")\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-13 - 17:05:56 \nAuthor: Heiko Carstens"}, {"id": "f0c7cf13a3d77b3c6071ab179b583435847747e9", "date": "2020-12-04", "metadata": "Message: s390: make calls to TRACE_IRQS_OFF/TRACE_IRQS_ON balanced\n\nIn case of udelay CIF_IGNORE_IRQ is set. This leads to an unbalanced\ncall of TRACE_IRQS_OFF and TRACE_IRQS_ON. That is: from lockdep's\npoint of view TRACE_IRQS_ON is called one time too often.\n\nThis doesn't fix any real bug, just makes the calls balanced.\n\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-04 - 17:01:22 \nAuthor: Heiko Carstens"}, {"id": "9365965db0c7ca7fc81eee27c21d8522d7102c32", "date": "2020-12-04", "metadata": "Message: s390: always clear kernel stack backchain before calling functions\n\nClear the kernel stack backchain before potentially calling the\nlockdep trace_hardirqs_off/on functions. Without this walking the\nkernel backchain, e.g. during a panic, might stop too early.\n\nSigned-off-by: Heiko Carstens <hca@linux.ibm.com> \nDate: 2020-12-04 - 16:56:57 \nAuthor: Heiko Carstens"}, {"id": "fad0319cacdf02a8d4d31aa1d8dc18c5bd5e397e", "date": "2020-12-16", "metadata": "Message: char: ipmi: convert comma to semicolon\n\nReplace a comma between expression statements by a semicolon.\n\nSigned-off-by: Zheng Yongjun <zhengyongjun3@huawei.com>\nMessage-Id: <20201216132615.15529-1-zhengyongjun3@huawei.com>\nSigned-off-by: Corey Minyard <cminyard@mvista.com> \nDate: 2020-12-16 - 13:26:15 \nAuthor: Zheng Yongjun"}, {"id": "3316fb80a0b4c1fef03a3eb1a7f0651e2133c429", "date": "2020-12-11", "metadata": "Message: fs/lockd: convert comma to semicolon\n\nReplace a comma between expression statements by a semicolon.\n\nSigned-off-by: Zheng Yongjun <zhengyongjun3@huawei.com>\nSigned-off-by: Trond Myklebust <trond.myklebust@hammerspace.com> \nDate: 2020-12-11 - 08:41:58 \nAuthor: Zheng Yongjun"}, {"id": "7be9b38afafbfcc58ede3be66bfc4ea415b3d5f1", "date": "2020-12-16", "metadata": "Message: NFSv4.2: fix error return on memory allocation failure\n\nCurrently when an alloc_page fails the error return is not set in\nvariable err and a garbage initialized value is returned. Fix this\nby setting err to -ENOMEM before taking the error return path.\n\nAddresses-Coverity: (\"Uninitialized scalar variable\")\nFixes: a1f26739ccdc (\"NFSv4.2: improve page handling for GETXATTR\")\nSigned-off-by: Colin Ian King <colin.king@canonical.com>\nSigned-off-by: Trond Myklebust <trond.myklebust@hammerspace.com> \nDate: 2020-12-16 - 12:25:13 \nAuthor: Colin Ian King"}, {"id": "f7387170339afb473a0d95b7732f904346f9795e", "date": "2020-09-28", "metadata": "Message: writeback: don't warn on an unregistered BDI in __mark_inode_dirty\n\nBDIs get unregistered during device removal, and this WARN can be\ntrivially triggered by hot-removing a NVMe device while running fsx\nIt is otherwise harmless as we still hold a BDI reference, and the\nwriteback has been shut down already.\n\nLink: https://lore.kernel.org/r/20200928122613.434820-1-hch@lst.de\nSigned-off-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Jan Kara <jack@suse.cz> \nDate: 2020-09-28 - 12:26:13 \nAuthor: Christoph Hellwig"}, {"id": "85a694738f6e7ad36918a3fa0569701b102d06c2", "date": "2020-12-16", "metadata": "Message: Merge branch 'for-5.11/wacom' into for-linus \nDate: 2020-12-16 - 10:44:38 \nAuthor: Jiri Kosina"}, {"id": "4d3d3d70cc9072acb2e643102421923ef90fdd97", "date": "2020-12-16", "metadata": "Message: Merge branch 'for-5.11/sony' into for-linus\n\n- DS4 power and firmware reporting fixes, from Roderick Colenbrander\n- support for ghlive PS3/WII u dongles, from Pascal Giard \nDate: 2020-12-16 - 10:42:47 \nAuthor: Jiri Kosina"}, {"id": "47cdd7f139dc3e896a627e8c0e98d0501555a889", "date": "2020-12-16", "metadata": "Message: Merge branch 'for-5.11/intel-ish' into for-linus \nDate: 2020-12-16 - 10:42:30 \nAuthor: Jiri Kosina"}, {"id": "19a0b6d79c970680cdaa3054728c9a64445f2310", "date": "2020-12-16", "metadata": "Message: Merge branch 'for-5.11/i2c-hid' into for-linus\n\n- error reporting fix from Coiby Xu \nDate: 2020-12-16 - 10:42:01 \nAuthor: Jiri Kosina"}, {"id": "e77bc7dc9af0ec53996367b2053dfafee83b7edb", "date": "2020-12-16", "metadata": "Message: Merge branch 'for-5.11/elecom' into for-linus\n\n- support for EX-G M-XGL20DLBK device, from YOSHIOKA Takuma \nDate: 2020-12-16 - 10:41:05 \nAuthor: Jiri Kosina"}, {"id": "105856b36c0cefc2fa1c1e649d75da71e2e38c31", "date": "2020-12-16", "metadata": "Message: Merge branch 'for-5.11/core' into for-linus\n\n- increase of maximum HID report size to 16KB in order to support\n  some of the modern devices, from Dean Camera\n\n- control interface support for hidraw, from Dean Camera\n\n- stylus battery reporting improvement, from Dmitry Torokhov \nDate: 2020-12-16 - 10:38:38 \nAuthor: Jiri Kosina"}, {"id": "90c5f4649aafd0bca6f47f67ea0ba596c93a3ab0", "date": "2020-12-16", "metadata": "Message: Merge branch 'for-5.11/asus' into for-linus\n\nSupport for ASUS N-Key keyboard, from Luke D Jones \nDate: 2020-12-16 - 10:38:10 \nAuthor: Jiri Kosina"}, {"id": "36ed0958feaffc99214b17f668127bc2cfdcf5b4", "date": "2020-12-16", "metadata": "Message: Merge branch 'for-5.11/amd-sfh-hid' into for-linus\n\nFrom Sandeep Singh.\n\nAMD SFH (Sensor Fusion Hub) is HID based driver.SFH FW is part of MP2 processor\n(MP2 which is an ARM core connected to x86 for processing sensor data) and it\nruns on MP2 where in the driver resides on X86.  The driver functionalities are\ndivided into three parts:\n\n1: amd-mp2-pcie:- This part of the module will communicate with MP2\n                  firmware. MP2 which is exposed as a PCI device to the\n                  X86, uses mailboxes to talk to MP2 firmware to\n                  send/receive commands.\n2: Client Layer:- This part of the driver will use DRAM  data and convert\n                  the  data into HID format based on HID reports.\n3: Transport layer :- This part of the driver the will communicate with HID\n                  core.Communication between devices and HID core is\n                  mostly done via HID reports\n\nIn terms of architecture, it resembles like ISH (Intel Integrated Sensor Hub).\nHowever the major difference is all the hid reports are generated as part of\nthe kernel driver.\n\nAMD SFH is integrated as a part of SoC, starting from 17h family of processors.\nThe solution is working well on several OEM products.  AMD SFH uses HID over\nPCIe bus. \nDate: 2020-12-16 - 10:33:06 \nAuthor: Jiri Kosina"}, {"id": "5e60366d56c630e32befce7ef05c569e04391ca3", "date": "2020-12-16", "metadata": "Message: Merge tag 'fallthrough-fixes-clang-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gustavoars/linux\n\nPull fallthrough fixes from Gustavo A. R. Silva:\n \"Fix many fall-through warnings when building with Clang 12.0.0\n  using -Wimplicit-fallthrough.\n\n   - powerpc: boot: include compiler_attributes.h (Nick Desaulniers)\n\n   - Revert \"lib: Revert use of fallthrough pseudo-keyword in lib/\"\n     (Nick Desaulniers)\n\n   - powerpc: fix -Wimplicit-fallthrough (Nick Desaulniers)\n\n   - lib: Fix fall-through warnings for Clang (Gustavo A. R. Silva)\"\n\n* tag 'fallthrough-fixes-clang-5.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gustavoars/linux:\n  lib: Fix fall-through warnings for Clang\n  powerpc: fix -Wimplicit-fallthrough\n  Revert \"lib: Revert use of fallthrough pseudo-keyword in lib/\"\n  powerpc: boot: include compiler_attributes.h \nDate: 2020-12-16 - 08:24:16 \nAuthor: Linus Torvalds"}], "links": [{"source": "a0b96314870f7eff6d15a242cb162dfc46b3c284", "target": "3644e2d2dda78e21edd8f5415b6d7ab03f5f54f3"}, {"source": "4862c741bd440813cabc5e93351f0950c1cb19d9", "target": "a0b96314870f7eff6d15a242cb162dfc46b3c284"}, {"source": "e82226138b20d4f638426413e83c6b5db532c6a2", "target": "a0b96314870f7eff6d15a242cb162dfc46b3c284"}, {"source": "c59c7588fc922e27c378a7e2a920b889bd6bf872", "target": "4862c741bd440813cabc5e93351f0950c1cb19d9"}, {"source": "432c19a8d965aa0123e0a81492492a7cb1da5257", "target": "c59c7588fc922e27c378a7e2a920b889bd6bf872"}, {"source": "4efd7faba5e0687ae9143b7e6a19547ede20a7dd", "target": "c59c7588fc922e27c378a7e2a920b889bd6bf872"}, {"source": "a087241716a6cea8518ca33839276a9648d91cef", "target": "432c19a8d965aa0123e0a81492492a7cb1da5257"}, {"source": "67698880ac9d56367ebf22f8336ccab6234f9feb", "target": "432c19a8d965aa0123e0a81492492a7cb1da5257"}, {"source": "5ba836eb9fdb07843cfa004e511f333745adb76e", "target": "a087241716a6cea8518ca33839276a9648d91cef"}, {"source": "dfdc6e73cdcf011a04568231132916c6d06b861f", "target": "a087241716a6cea8518ca33839276a9648d91cef"}, {"source": "e2ae634014d3a8839a99f8897b3f6346a133a33b", "target": "5ba836eb9fdb07843cfa004e511f333745adb76e"}, {"source": "9fd339a45be5c06e239d45a042eab9d25de87882", "target": "5ba836eb9fdb07843cfa004e511f333745adb76e"}, {"source": "a409ed156a90093a03fe6a93721ddf4c591eac87", "target": "e2ae634014d3a8839a99f8897b3f6346a133a33b"}, {"source": "f96f62597ea48cc15d6b16bddf05dc25437dcf2d", "target": "4efd7faba5e0687ae9143b7e6a19547ede20a7dd"}, {"source": "046f70d31ddb2069941aec54966fec5b7fbc7b7b", "target": "4efd7faba5e0687ae9143b7e6a19547ede20a7dd"}, {"source": "660a59953f4ff8a4958e73f7618445ff537582b2", "target": "f96f62597ea48cc15d6b16bddf05dc25437dcf2d"}, {"source": "efd3043790c6e92f0bbe1fe385db9b544131c59c", "target": "660a59953f4ff8a4958e73f7618445ff537582b2"}, {"source": "0e53656ad8abc99e0a80c3de611e593ebbf55829", "target": "046f70d31ddb2069941aec54966fec5b7fbc7b7b"}, {"source": "dd0e2193b1e41efe611d265cea2719df4e59560f", "target": "0e53656ad8abc99e0a80c3de611e593ebbf55829"}, {"source": "2ccf2e03868455e508b4dc9fbd1bb1daebf2222e", "target": "dd0e2193b1e41efe611d265cea2719df4e59560f"}, {"source": "efd3043790c6e92f0bbe1fe385db9b544131c59c", "target": "2ccf2e03868455e508b4dc9fbd1bb1daebf2222e"}, {"source": "345b17acb1aa7a443741d9220f66b30d5ddd7c39", "target": "a409ed156a90093a03fe6a93721ddf4c591eac87"}, {"source": "7ac554888233468a9fd7c4f28721396952dd9959", "target": "a409ed156a90093a03fe6a93721ddf4c591eac87"}, {"source": "787fec8ac15cc693b9a7bc1b4a338b92483d993c", "target": "345b17acb1aa7a443741d9220f66b30d5ddd7c39"}, {"source": "e13300bdaa68f5487000e66baed1ff69bcb510bf", "target": "787fec8ac15cc693b9a7bc1b4a338b92483d993c"}, {"source": "d64c6f96ba86bd8b97ed8d6762a8c8cc1770d214", "target": "e13300bdaa68f5487000e66baed1ff69bcb510bf"}, {"source": "afee4410bc6c50e1422c5a45d633ad0e478ea960", "target": "e13300bdaa68f5487000e66baed1ff69bcb510bf"}, {"source": "0c6c887835b59c10602add88057c9c06f265effe", "target": "d64c6f96ba86bd8b97ed8d6762a8c8cc1770d214"}, {"source": "44d4775ca51805b376a8db5b34f650434a08e556", "target": "d64c6f96ba86bd8b97ed8d6762a8c8cc1770d214"}, {"source": "8a5be36b9303ae167468d4f5e1b3c090b9981396", "target": "0c6c887835b59c10602add88057c9c06f265effe"}, {"source": "09c0796adf0c793462fda1d7c8c43324551405c7", "target": "8a5be36b9303ae167468d4f5e1b3c090b9981396"}, {"source": "c1bea0a840ac75dca19bc6aa05575a33eb9fd058", "target": "8a5be36b9303ae167468d4f5e1b3c090b9981396"}, {"source": "312dcaf967219effe0483785f24e4072a5bed9a5", "target": "09c0796adf0c793462fda1d7c8c43324551405c7"}, {"source": "6daa90439e91bb9a71864b02f7d0af8587ea889a", "target": "312dcaf967219effe0483785f24e4072a5bed9a5"}, {"source": "83005cd6bc76eef7bbf46b55bbb00ccc9534c38c", "target": "6daa90439e91bb9a71864b02f7d0af8587ea889a"}, {"source": "74f602dc96dd854c7b2034947798c1e2a6b84066", "target": "83005cd6bc76eef7bbf46b55bbb00ccc9534c38c"}, {"source": "be695ee29e8fc0af266d9f1882868c47da01a790", "target": "74f602dc96dd854c7b2034947798c1e2a6b84066"}, {"source": "52104f274e2d7f134d34bab11cada8913d4544e2", "target": "74f602dc96dd854c7b2034947798c1e2a6b84066"}, {"source": "92dbc9dedccb9759c7f9f2f0ae6242396376988f", "target": "be695ee29e8fc0af266d9f1882868c47da01a790"}, {"source": "65de0b89d7d5e173d71cb50dfae786133c579308", "target": "92dbc9dedccb9759c7f9f2f0ae6242396376988f"}, {"source": "ff49c86f27e4726a86f5034543e6e684daf41955", "target": "65de0b89d7d5e173d71cb50dfae786133c579308"}, {"source": "b97d4c424e362ebf88fd9aa1b7ad82e3a28c26d3", "target": "ff49c86f27e4726a86f5034543e6e684daf41955"}, {"source": "14bd41e41899cbd1de4bb5ddfa46c85b08091a69", "target": "b97d4c424e362ebf88fd9aa1b7ad82e3a28c26d3"}, {"source": "f7387170339afb473a0d95b7732f904346f9795e", "target": "b97d4c424e362ebf88fd9aa1b7ad82e3a28c26d3"}, {"source": "5b33afee93a1e7665a5ffae027fc66f9376f4ea7", "target": "44d4775ca51805b376a8db5b34f650434a08e556"}, {"source": "d8a4ea350f1fff71c9988ea3da3c913ec30bbfbe", "target": "5b33afee93a1e7665a5ffae027fc66f9376f4ea7"}, {"source": "38ba95a4ed24126d36288a0c2434ced5b4c244d2", "target": "d8a4ea350f1fff71c9988ea3da3c913ec30bbfbe"}, {"source": "d652d5f1eeeb06046009f4fcb9b4542249526916", "target": "14bd41e41899cbd1de4bb5ddfa46c85b08091a69"}, {"source": "0d52848632a357948028eab67ff9b7cc0c12a0fb", "target": "38ba95a4ed24126d36288a0c2434ced5b4c244d2"}, {"source": "86eb09b63da419a7261d7dc96e60fdb0e56e341d", "target": "0d52848632a357948028eab67ff9b7cc0c12a0fb"}, {"source": "49e27134f6e9ebcd08c04a98ab7f0574b5a81a35", "target": "86eb09b63da419a7261d7dc96e60fdb0e56e341d"}, {"source": "13e1603739e58e94e7a3c24191fa2dcd1a8a5df3", "target": "86eb09b63da419a7261d7dc96e60fdb0e56e341d"}, {"source": "219d04992b689e0498ece02d2a451f2b6e2563a9", "target": "13e1603739e58e94e7a3c24191fa2dcd1a8a5df3"}, {"source": "3f8b2667f257c21a992bda33bfb919ee164a429c", "target": "219d04992b689e0498ece02d2a451f2b6e2563a9"}, {"source": "0c14846032f2c0a3b63234e1fc2759f4155b6067", "target": "3f8b2667f257c21a992bda33bfb919ee164a429c"}, {"source": "49e27134f6e9ebcd08c04a98ab7f0574b5a81a35", "target": "0c14846032f2c0a3b63234e1fc2759f4155b6067"}, {"source": "3ae32c07815a24ae12de2e7838d9d429ba31e5e0", "target": "49e27134f6e9ebcd08c04a98ab7f0574b5a81a35"}, {"source": "accefff5b547a9a1d959c7e76ad539bf2480e78b", "target": "d652d5f1eeeb06046009f4fcb9b4542249526916"}, {"source": "2d0604934f507b8b4799f3c1dff41cca3dd85239", "target": "afee4410bc6c50e1422c5a45d633ad0e478ea960"}, {"source": "31f6551ad75608d9c71fd4d3548c33f1abc52093", "target": "2d0604934f507b8b4799f3c1dff41cca3dd85239"}, {"source": "48c1c40ab40cb087b992e7b77518c3a2926743cc", "target": "accefff5b547a9a1d959c7e76ad539bf2480e78b"}, {"source": "9805529ec544ea7a82d891d5239a8ebd3dbb2a3e", "target": "48c1c40ab40cb087b992e7b77518c3a2926743cc"}, {"source": "b0a6cd29e00a317d7fd823e0db57abbbd9bbb610", "target": "9805529ec544ea7a82d891d5239a8ebd3dbb2a3e"}, {"source": "b06db0b3936956352a6ff693ea589bd4671c071d", "target": "b0a6cd29e00a317d7fd823e0db57abbbd9bbb610"}, {"source": "0c71cc04eb180c4b701cbe821635f2a122926065", "target": "b06db0b3936956352a6ff693ea589bd4671c071d"}, {"source": "75f4d4544db9fa34e1f04174f27d9f8a387be37d", "target": "3ae32c07815a24ae12de2e7838d9d429ba31e5e0"}, {"source": "7eb000bdbe7c7da811ef51942b356f6e819b13ba", "target": "75f4d4544db9fa34e1f04174f27d9f8a387be37d"}, {"source": "de925e2fbb44eed8a2a7ce166b485fed5eae01aa", "target": "0c71cc04eb180c4b701cbe821635f2a122926065"}, {"source": "62746f92b10a4add6a7db87ff59b901276746b11", "target": "de925e2fbb44eed8a2a7ce166b485fed5eae01aa"}, {"source": "85a694738f6e7ad36918a3fa0569701b102d06c2", "target": "de925e2fbb44eed8a2a7ce166b485fed5eae01aa"}, {"source": "f68e4041ef63f03091e44b4eebf1ab5c5d427e6f", "target": "62746f92b10a4add6a7db87ff59b901276746b11"}, {"source": "a701262c02cec71dc29b10fe910ba3c2298f5ba3", "target": "f68e4041ef63f03091e44b4eebf1ab5c5d427e6f"}, {"source": "995433b795cec0a4ef6c8603e7642903c621943a", "target": "7eb000bdbe7c7da811ef51942b356f6e819b13ba"}, {"source": "945433be3677955255fabecbf1076c17864ff9da", "target": "a701262c02cec71dc29b10fe910ba3c2298f5ba3"}, {"source": "4c9e94dff65ca75b917ff0b5de2e44881062a8e8", "target": "a701262c02cec71dc29b10fe910ba3c2298f5ba3"}, {"source": "f67d6620e413a167e861ce5733c1be5a2384e0c4", "target": "945433be3677955255fabecbf1076c17864ff9da"}, {"source": "84e010ec8f8668c579b78a27b0e81a49ac6c837a", "target": "f67d6620e413a167e861ce5733c1be5a2384e0c4"}, {"source": "fad0319cacdf02a8d4d31aa1d8dc18c5bd5e397e", "target": "f67d6620e413a167e861ce5733c1be5a2384e0c4"}, {"source": "278f54c46164e9859090dde7e4ceede830c6beb6", "target": "84e010ec8f8668c579b78a27b0e81a49ac6c837a"}, {"source": "fff875a18382f1983b4a27be9282e697dbccb3db", "target": "278f54c46164e9859090dde7e4ceede830c6beb6"}, {"source": "870d16757ba8918c3f8cac162b9ca7669556dbab", "target": "fff875a18382f1983b4a27be9282e697dbccb3db"}, {"source": "6ae09fa49147e557eb6aebbb5b2059b63706d454", "target": "efd3043790c6e92f0bbe1fe385db9b544131c59c"}, {"source": "9bfffea3524b49d0268d01f8e7967f06c4d0a942", "target": "52104f274e2d7f134d34bab11cada8913d4544e2"}, {"source": "cac1d3a2b8f7f0817ac4feab76f5d3b12e4b02d7", "target": "9bfffea3524b49d0268d01f8e7967f06c4d0a942"}, {"source": "3316fb80a0b4c1fef03a3eb1a7f0651e2133c429", "target": "cac1d3a2b8f7f0817ac4feab76f5d3b12e4b02d7"}, {"source": "19778dd504b5ff5c3c1283aa3da7a56f34c2c3b0", "target": "870d16757ba8918c3f8cac162b9ca7669556dbab"}, {"source": "007c74e16c1aac9f5c93b372a054f7f11ede8628", "target": "19778dd504b5ff5c3c1283aa3da7a56f34c2c3b0"}, {"source": "009bd55dfcc857d8b00a5bbb17a8db060317af6f", "target": "007c74e16c1aac9f5c93b372a054f7f11ede8628"}, {"source": "60f7c503d971a731ee3c4f884a9f2e80d476730d", "target": "009bd55dfcc857d8b00a5bbb17a8db060317af6f"}, {"source": "69f637c33560b02ae7313e0c142d847361cc723a", "target": "60f7c503d971a731ee3c4f884a9f2e80d476730d"}, {"source": "ef72cd3c5ce168829c6684ecb2cae047d3493690", "target": "995433b795cec0a4ef6c8603e7642903c621943a"}, {"source": "5277d1cadee8a3bdfda0e1d8247b3126b254a74b", "target": "ef72cd3c5ce168829c6684ecb2cae047d3493690"}, {"source": "767143a18d6d743d4254de5cf55b1bd87bb2af18", "target": "5277d1cadee8a3bdfda0e1d8247b3126b254a74b"}, {"source": "e2138e3f3537efdb8b56ea37d61c1682552608c9", "target": "5277d1cadee8a3bdfda0e1d8247b3126b254a74b"}, {"source": "7ec27c9e97f26b5a1d7d07dd825069a45067868a", "target": "e2138e3f3537efdb8b56ea37d61c1682552608c9"}, {"source": "767143a18d6d743d4254de5cf55b1bd87bb2af18", "target": "7ec27c9e97f26b5a1d7d07dd825069a45067868a"}, {"source": "ac7ac4618cf25e0d5cd8eba83d5f600084b65b9a", "target": "69f637c33560b02ae7313e0c142d847361cc723a"}, {"source": "c32c928d29deb2636e5889f59305cc15b004909f", "target": "767143a18d6d743d4254de5cf55b1bd87bb2af18"}, {"source": "48aba79bcf6ea05148dc82ad9c40713960b00396", "target": "ac7ac4618cf25e0d5cd8eba83d5f600084b65b9a"}, {"source": "72db5d54d76300fb4153874b8466c0ebbb10208f", "target": "7ac554888233468a9fd7c4f28721396952dd9959"}, {"source": "80e493d2b74af7442eac968c060b26adbfaa96f9", "target": "72db5d54d76300fb4153874b8466c0ebbb10208f"}, {"source": "023cae857b347b6f5577eebade21a843f3621f85", "target": "c32c928d29deb2636e5889f59305cc15b004909f"}, {"source": "005b2a9dc819a1265a8c765595f8f6d88d6173d9", "target": "48aba79bcf6ea05148dc82ad9c40713960b00396"}, {"source": "5ee863bec794f30bdf7fdf57ce0d9f579b0d1aa3", "target": "005b2a9dc819a1265a8c765595f8f6d88d6173d9"}, {"source": "8312f41f08edc641aa927d31fb71319694ae9c42", "target": "5ee863bec794f30bdf7fdf57ce0d9f579b0d1aa3"}, {"source": "66fc6a6254c7a138aef7806bd933c218e1aefcfc", "target": "8312f41f08edc641aa927d31fb71319694ae9c42"}, {"source": "7acfd4274e26e05a4f12ad31bf331fef11ebc6a3", "target": "66fc6a6254c7a138aef7806bd933c218e1aefcfc"}, {"source": "571b12dd1ad41f371448b693c0bd2e64968c7af4", "target": "7acfd4274e26e05a4f12ad31bf331fef11ebc6a3"}, {"source": "e994cc240a3b75744c33ca9b8d74f71f0fcd8852", "target": "571b12dd1ad41f371448b693c0bd2e64968c7af4"}, {"source": "322e53d1e2529ae9d501f5e0f20604a79b873aef", "target": "023cae857b347b6f5577eebade21a843f3621f85"}, {"source": "935d8a0a43e3f928e3243ae22bc53cd7a014d515", "target": "023cae857b347b6f5577eebade21a843f3621f85"}, {"source": "6be4666221cafcfd58cc078aa8bd1ba11b699f6b", "target": "935d8a0a43e3f928e3243ae22bc53cd7a014d515"}, {"source": "7061eb8cfa902daa1ec71d23b5cddb8b4391e72b", "target": "6be4666221cafcfd58cc078aa8bd1ba11b699f6b"}, {"source": "322e53d1e2529ae9d501f5e0f20604a79b873aef", "target": "7061eb8cfa902daa1ec71d23b5cddb8b4391e72b"}, {"source": "efb796f5571f030743e1d9c662cdebdad724f8c5", "target": "322e53d1e2529ae9d501f5e0f20604a79b873aef"}, {"source": "ba1d41a55e4d07c7b27ee2f6e7cf5b5348849261", "target": "e994cc240a3b75744c33ca9b8d74f71f0fcd8852"}, {"source": "6df0f2855a9ae888fd19d034d8e6889cee6b639c", "target": "ba1d41a55e4d07c7b27ee2f6e7cf5b5348849261"}, {"source": "8bda68d68b21cb9881dcc7159fd9db1b6f95ac15", "target": "6df0f2855a9ae888fd19d034d8e6889cee6b639c"}, {"source": "f87675b836b324d270fd52f1f5e6d6bb9f4bd1d5", "target": "efb796f5571f030743e1d9c662cdebdad724f8c5"}, {"source": "e20a9b92ddbfe662807622dbb28e1fbb6e0011aa", "target": "8bda68d68b21cb9881dcc7159fd9db1b6f95ac15"}, {"source": "c18e68696fdd9fd293f051030bce5aaff3c9b185", "target": "f87675b836b324d270fd52f1f5e6d6bb9f4bd1d5"}, {"source": "4375ada01963d1ebf733d60d1bb6e5db401e1ac6", "target": "c18e68696fdd9fd293f051030bce5aaff3c9b185"}, {"source": "ca5b877b6ccc7b989614f3f541e9a1fe2ff7f75a", "target": "e20a9b92ddbfe662807622dbb28e1fbb6e0011aa"}, {"source": "54a57d1c449275ee727154ac106ec1accae012e3", "target": "4375ada01963d1ebf733d60d1bb6e5db401e1ac6"}, {"source": "3e47495fc4de4122598dd51ae8527b09b8209646", "target": "54a57d1c449275ee727154ac106ec1accae012e3"}, {"source": "3d5de2ddc6ba924d7c10460a1dc3aae8786b9d52", "target": "ca5b877b6ccc7b989614f3f541e9a1fe2ff7f75a"}, {"source": "ec58c75a85563026db4927276039a88091f79647", "target": "3e47495fc4de4122598dd51ae8527b09b8209646"}, {"source": "d3eb52113d162cc88975fbd03c9e6f9cf2f8a771", "target": "3d5de2ddc6ba924d7c10460a1dc3aae8786b9d52"}, {"source": "57030a0b620f735bf557696e5ceb9f32c2b3bb8f", "target": "ec58c75a85563026db4927276039a88091f79647"}, {"source": "64050b5b8706d304ba647591b06e1eddc55e8bd9", "target": "ec58c75a85563026db4927276039a88091f79647"}, {"source": "8d14768a7972b92c73259f0c9c45b969d85e3a60", "target": "64050b5b8706d304ba647591b06e1eddc55e8bd9"}, {"source": "57030a0b620f735bf557696e5ceb9f32c2b3bb8f", "target": "8d14768a7972b92c73259f0c9c45b969d85e3a60"}, {"source": "5e60366d56c630e32befce7ef05c569e04391ca3", "target": "d3eb52113d162cc88975fbd03c9e6f9cf2f8a771"}, {"source": "05053c4b4f8733e53e5d81d1684a29404b27cefd", "target": "6ae09fa49147e557eb6aebbb5b2059b63706d454"}, {"source": "15ed44c0e7129a0967157f7b349e1b3feb26a534", "target": "05053c4b4f8733e53e5d81d1684a29404b27cefd"}, {"source": "6bdeff12a96c9a5da95c8d11fefd145eb165e32a", "target": "15ed44c0e7129a0967157f7b349e1b3feb26a534"}, {"source": "8d93b7011831edc42760aa5d2f0727edda7257d5", "target": "dfdc6e73cdcf011a04568231132916c6d06b861f"}, {"source": "7494755a9ad62be7e389b535c77e85ed9c66bece", "target": "8d93b7011831edc42760aa5d2f0727edda7257d5"}, {"source": "44292c868473ed6389a78cfa366895b341845579", "target": "7494755a9ad62be7e389b535c77e85ed9c66bece"}, {"source": "e0d62dcb20beac18a412ef9355208d9058c674d3", "target": "44292c868473ed6389a78cfa366895b341845579"}, {"source": "9ceed9988a8e6a1656ed2bdaa30501cf0f3dd925", "target": "e0d62dcb20beac18a412ef9355208d9058c674d3"}, {"source": "dd6cfe553212b6311cac27ecd2f67621857fb10a", "target": "9ceed9988a8e6a1656ed2bdaa30501cf0f3dd925"}, {"source": "91c2bad6aec98a51663ce9eec7c4825c1ca0b870", "target": "dd6cfe553212b6311cac27ecd2f67621857fb10a"}, {"source": "f22b9c219a798e1bf11110a3d2733d883e6da059", "target": "91c2bad6aec98a51663ce9eec7c4825c1ca0b870"}, {"source": "f0c7cf13a3d77b3c6071ab179b583435847747e9", "target": "f22b9c219a798e1bf11110a3d2733d883e6da059"}, {"source": "9365965db0c7ca7fc81eee27c21d8522d7102c32", "target": "f0c7cf13a3d77b3c6071ab179b583435847747e9"}, {"source": "7be9b38afafbfcc58ede3be66bfc4ea415b3d5f1", "target": "3316fb80a0b4c1fef03a3eb1a7f0651e2133c429"}, {"source": "4d3d3d70cc9072acb2e643102421923ef90fdd97", "target": "85a694738f6e7ad36918a3fa0569701b102d06c2"}, {"source": "47cdd7f139dc3e896a627e8c0e98d0501555a889", "target": "4d3d3d70cc9072acb2e643102421923ef90fdd97"}, {"source": "19a0b6d79c970680cdaa3054728c9a64445f2310", "target": "47cdd7f139dc3e896a627e8c0e98d0501555a889"}, {"source": "e77bc7dc9af0ec53996367b2053dfafee83b7edb", "target": "19a0b6d79c970680cdaa3054728c9a64445f2310"}, {"source": "105856b36c0cefc2fa1c1e649d75da71e2e38c31", "target": "e77bc7dc9af0ec53996367b2053dfafee83b7edb"}, {"source": "90c5f4649aafd0bca6f47f67ea0ba596c93a3ab0", "target": "105856b36c0cefc2fa1c1e649d75da71e2e38c31"}, {"source": "36ed0958feaffc99214b17f668127bc2cfdcf5b4", "target": "90c5f4649aafd0bca6f47f67ea0ba596c93a3ab0"}]}